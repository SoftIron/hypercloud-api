// Code generated by "enumer -type MigrationType -linecomment -text"; DO NOT EDIT.

package cloud

import (
	"fmt"
	"strings"
)

const _MigrationTypeName = "savepoweroffpoweroff_hard"

var _MigrationTypeIndex = [...]uint8{0, 4, 12, 25}

const _MigrationTypeLowerName = "savepoweroffpoweroff_hard"

func (i MigrationType) String() string {
	i -= 1
	if i < 0 || i >= MigrationType(len(_MigrationTypeIndex)-1) {
		return fmt.Sprintf("MigrationType(%d)", i+1)
	}
	return _MigrationTypeName[_MigrationTypeIndex[i]:_MigrationTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _MigrationTypeNoOp() {
	var x [1]struct{}
	_ = x[SaveMigrationType-(1)]
	_ = x[PowerOffMigrationType-(2)]
	_ = x[PowerOffHardMigrationType-(3)]
}

var _MigrationTypeValues = []MigrationType{SaveMigrationType, PowerOffMigrationType, PowerOffHardMigrationType}

var _MigrationTypeNameToValueMap = map[string]MigrationType{
	_MigrationTypeName[0:4]:        SaveMigrationType,
	_MigrationTypeLowerName[0:4]:   SaveMigrationType,
	_MigrationTypeName[4:12]:       PowerOffMigrationType,
	_MigrationTypeLowerName[4:12]:  PowerOffMigrationType,
	_MigrationTypeName[12:25]:      PowerOffHardMigrationType,
	_MigrationTypeLowerName[12:25]: PowerOffHardMigrationType,
}

var _MigrationTypeNames = []string{
	_MigrationTypeName[0:4],
	_MigrationTypeName[4:12],
	_MigrationTypeName[12:25],
}

// MigrationTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func MigrationTypeString(s string) (MigrationType, error) {
	if val, ok := _MigrationTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _MigrationTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to MigrationType values", s)
}

// MigrationTypeValues returns all values of the enum
func MigrationTypeValues() []MigrationType {
	return _MigrationTypeValues
}

// MigrationTypeStrings returns a slice of all String values of the enum
func MigrationTypeStrings() []string {
	strs := make([]string, len(_MigrationTypeNames))
	copy(strs, _MigrationTypeNames)
	return strs
}

// IsAMigrationType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i MigrationType) IsAMigrationType() bool {
	for _, v := range _MigrationTypeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalText implements the encoding.TextMarshaler interface for MigrationType
func (i MigrationType) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for MigrationType
func (i *MigrationType) UnmarshalText(text []byte) error {
	var err error
	*i, err = MigrationTypeString(string(text))
	return err
}
