{
    "schemes": [],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json",
        "text/plain"
    ],
    "swagger": "2.0",
    "info": {
        "description": "SoftIron Federated Infrastructure API",
        "title": "SIFI Daemon",
        "contact": {},
        "version": "1"
    },
    "host": "localhost:7434",
    "basePath": "/",
    "paths": {
        "/login": {
            "get": {
                "description": "Login to the service.",
                "summary": "Login",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Suggested token TTL in minutes",
                        "name": "ttl",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/acl": {
            "get": {
                "description": "Lists ACL rules.",
                "tags": [
                    "v1"
                ],
                "summary": "get acl rules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListACLsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an ACL rule.",
                "tags": [
                    "v1"
                ],
                "summary": "create acl rule",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateACLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateACLResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/acl/{acl}": {
            "delete": {
                "description": "Delete an ACL rule.",
                "tags": [
                    "v1"
                ],
                "summary": "delete acl rule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ACL ID",
                        "name": "acl",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/cluster": {
            "get": {
                "description": "Lists information for all clusters.",
                "tags": [
                    "v1"
                ],
                "summary": "get clusters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListClustersResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a cluster",
                "tags": [
                    "v1"
                ],
                "summary": "post cluster",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateClusterResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/cluster/{cluster}": {
            "get": {
                "description": "Lists cluster information.",
                "tags": [
                    "v1"
                ],
                "summary": "get cluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListClusterResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a cluster.",
                "tags": [
                    "v1"
                ],
                "summary": "delete cluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a cluster.",
                "tags": [
                    "v1"
                ],
                "summary": "patch cluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateClusterResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/cluster/{cluster}/datastore/{datastore}": {
            "delete": {
                "description": "Deletes a datastore from a cluster.",
                "tags": [
                    "v1"
                ],
                "summary": "delete cluster datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Adds a datastore to a cluster.",
                "tags": [
                    "v1"
                ],
                "summary": "add cluster datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AddClusterDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/cluster/{cluster}/host/{host}": {
            "delete": {
                "description": "Deletes a host from a cluster.",
                "tags": [
                    "v1"
                ],
                "summary": "delete cluster host",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "host id",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Adds a host to a cluster.",
                "tags": [
                    "v1"
                ],
                "summary": "add cluster host",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "host id",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AddClusterHostResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/cluster/{cluster}/name": {
            "patch": {
                "description": "Renames a cluster.",
                "tags": [
                    "v1"
                ],
                "summary": "rename cluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameClusterResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/cluster/{cluster}/network/{network}": {
            "delete": {
                "description": "Deletes a vnet from a cluster.",
                "tags": [
                    "v1"
                ],
                "summary": "delete cluster vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "network",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Adds a vnet to a cluster.",
                "tags": [
                    "v1"
                ],
                "summary": "add cluster vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "network id",
                        "name": "network",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AddClusterNetworkResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/datastore": {
            "get": {
                "description": "Lists all datastores.",
                "tags": [
                    "v1"
                ],
                "summary": "list datastores",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListDatastoresResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Allocates a new datastore.",
                "tags": [
                    "v1"
                ],
                "summary": "post datastore",
                "parameters": [
                    {
                        "description": "Datastore",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateDatastoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/datastore/{datastore}": {
            "get": {
                "description": "Lists a datastores.",
                "tags": [
                    "v1"
                ],
                "summary": "list datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Datastore ID",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a datastore.",
                "tags": [
                    "v1"
                ],
                "summary": "delete datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Datastore ID",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a datastore.",
                "tags": [
                    "v1"
                ],
                "summary": "patch datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datastore",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateDatastoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/datastore/{datastore}/enable": {
            "patch": {
                "description": "Enables a datastore.",
                "tags": [
                    "v1"
                ],
                "summary": "enable datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datastore ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.EnableDatastoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.EnableDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/datastore/{datastore}/name": {
            "patch": {
                "description": "Renames a datastore.",
                "tags": [
                    "v1"
                ],
                "summary": "rename datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameDatastoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/datastore/{datastore}/ownership": {
            "patch": {
                "description": "Changes the ownership of a datastore.",
                "tags": [
                    "v1"
                ],
                "summary": "change datastore ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ownership",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeDatastoreOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeDatastoreOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/datastore/{datastore}/permissions": {
            "patch": {
                "description": "Changes the permissions of a datastore.",
                "tags": [
                    "v1"
                ],
                "summary": "change datastore permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeDatastorePermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeDatastorePermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/document": {
            "post": {
                "description": "allocate a document",
                "tags": [
                    "v1"
                ],
                "summary": "post a allocate",
                "parameters": [
                    {
                        "description": "Document Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.AllocateDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AllocateDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/document/{document}": {
            "get": {
                "description": "Get a document.",
                "tags": [
                    "v1"
                ],
                "summary": "get document",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Document",
                        "name": "document",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a document",
                "tags": [
                    "v1"
                ],
                "summary": "delete a document",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Document",
                        "name": "document",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a document.",
                "tags": [
                    "v1"
                ],
                "summary": "update a document",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document id",
                        "name": "document",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/document/{document}/clone": {
            "post": {
                "description": "Clone a document.",
                "tags": [
                    "v1"
                ],
                "summary": "post a clone",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Document",
                        "name": "document",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CloneDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CloneDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/document/{document}/lock": {
            "patch": {
                "description": "Lock a document.",
                "tags": [
                    "v1"
                ],
                "summary": "lock document",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document id",
                        "name": "document",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document Locl",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.LockDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.LockDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/document/{document}/name": {
            "patch": {
                "description": "Rename a document.",
                "tags": [
                    "v1"
                ],
                "summary": "patch name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document id",
                        "name": "document",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/document/{document}/ownership": {
            "patch": {
                "description": "Change ownership on a document.",
                "tags": [
                    "v1"
                ],
                "summary": "patch ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document id",
                        "name": "document",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document Ownership",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeDocumentOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeDocumentOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/document/{document}/permissions": {
            "patch": {
                "description": "Change permissions on a document.",
                "tags": [
                    "v1"
                ],
                "summary": "patch persmissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document id",
                        "name": "document",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document Permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeDocumentPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeDocumentPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/document/{document}/unlock": {
            "patch": {
                "description": "Unlock a document.",
                "tags": [
                    "v1"
                ],
                "summary": "unlock document",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document id",
                        "name": "document",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UnlockDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/documents": {
            "get": {
                "description": "List all documents.",
                "tags": [
                    "v1"
                ],
                "summary": "list documents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document Type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListDocumentsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/group": {
            "get": {
                "description": "List all groups.",
                "tags": [
                    "v1"
                ],
                "summary": "list groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Allocates a new group.",
                "tags": [
                    "v1"
                ],
                "summary": "post group",
                "parameters": [
                    {
                        "description": "Group",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/group/quota": {
            "get": {
                "description": "Returns the default group quota limits.",
                "tags": [
                    "v1"
                ],
                "summary": "return the default group quota",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListGroupQuotaResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the default group quota limits.",
                "tags": [
                    "v1"
                ],
                "summary": "updates the default group quota limits",
                "parameters": [
                    {
                        "description": "quota",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateGroupQuotaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateGroupQuotaResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/group/{group}": {
            "get": {
                "description": "Returns group info.",
                "tags": [
                    "v1"
                ],
                "summary": "get group info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a group.",
                "tags": [
                    "v1"
                ],
                "summary": "delete group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Udates the group",
                "tags": [
                    "v1"
                ],
                "summary": "patch group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Group",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/group/{group}/admin": {
            "patch": {
                "description": "Adds a User to the Group administrators set",
                "tags": [
                    "v1"
                ],
                "summary": "add group admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Group Admin",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.AddGroupAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AddGroupAdminResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/group/{group}/admin/{user}": {
            "delete": {
                "description": "Remove an User from the administrators set",
                "tags": [
                    "v1"
                ],
                "summary": "remove group admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/group/{group}/quota": {
            "post": {
                "description": "Set quota for the group.",
                "tags": [
                    "v1"
                ],
                "summary": "set quota",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Group quota",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.SetGroupQuotaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.SetGroupQuotaResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/hook": {
            "get": {
                "description": "List hooks.",
                "tags": [
                    "v1"
                ],
                "summary": "list hooks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListHooksResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new hook.",
                "tags": [
                    "v1"
                ],
                "summary": "post hook",
                "parameters": [
                    {
                        "description": "Host Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateHookResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/hook/{hook}": {
            "get": {
                "description": "List a hook.",
                "tags": [
                    "v1"
                ],
                "summary": "get a hook",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hook ID",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListHookResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a hook.",
                "tags": [
                    "v1"
                ],
                "summary": "delete hook",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hook ID",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a hook.",
                "tags": [
                    "v1"
                ],
                "summary": "update hook",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hook id",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hook Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateHookResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/hook/{hook}/lock": {
            "patch": {
                "description": "Lock a hook.",
                "tags": [
                    "v1"
                ],
                "summary": "lock a hook",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hook id",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Lock Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.LockHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.LockHookResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/hook/{hook}/log": {
            "get": {
                "description": "List hook logs.",
                "tags": [
                    "v1"
                ],
                "summary": "list hook logs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hook ID",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Minimum Date",
                        "name": "min",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Maximum Date",
                        "name": "max",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListHookLogResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/hook/{hook}/name": {
            "patch": {
                "description": "Rename a hook.",
                "tags": [
                    "v1"
                ],
                "summary": "patch hook name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hook id",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hook Name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameHookResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/hook/{hook}/retry": {
            "patch": {
                "description": "Retry a hook.",
                "tags": [
                    "v1"
                ],
                "summary": "retry a hook",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hook id",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Retry Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RetryHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RetryHookResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/hook/{hook}/unlock": {
            "patch": {
                "description": "Unlock a hook.",
                "tags": [
                    "v1"
                ],
                "summary": "unlock a hook",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hook id",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Unlock Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UnlockHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UnlockHookResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/host": {
            "get": {
                "description": "Get hosts.",
                "tags": [
                    "v1"
                ],
                "summary": "get hosts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListHostsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "create a host.",
                "tags": [
                    "v1"
                ],
                "summary": "post host",
                "parameters": [
                    {
                        "description": "Host Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateHostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateHostResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/host/monitoring": {
            "get": {
                "description": "Get a host's monitoring data.",
                "tags": [
                    "v1"
                ],
                "summary": "get hosts monitoring",
                "parameters": [
                    {
                        "type": "integer",
                        "default": -1,
                        "description": "Seconds",
                        "name": "seconds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListHostsMonitoringResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/host/{host}": {
            "get": {
                "description": "Get a host.",
                "tags": [
                    "v1"
                ],
                "summary": "get host",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Host ID",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListHostResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a host.",
                "tags": [
                    "v1"
                ],
                "summary": "delete host",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Host ID",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a host.",
                "tags": [
                    "v1"
                ],
                "summary": "patch host",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "host id",
                        "name": "host",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Host Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateHostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateHostResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/host/{host}/monitoring": {
            "get": {
                "description": "Get a host's monitoring data.",
                "tags": [
                    "v1"
                ],
                "summary": "get host monitoring",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Host ID",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListHostMonitoringResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/host/{host}/name": {
            "patch": {
                "description": "Rename a host.",
                "tags": [
                    "v1"
                ],
                "summary": "patch name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "host id",
                        "name": "host",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Host Name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameHostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameHostResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/host/{host}/status": {
            "patch": {
                "description": "Set host status.",
                "tags": [
                    "v1"
                ],
                "summary": "patch status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "host id",
                        "name": "host",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Host Status",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.SetHostStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.SetHostStatusResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image": {
            "get": {
                "description": "List images.",
                "tags": [
                    "v1"
                ],
                "summary": "list images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListImagesResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new image.",
                "tags": [
                    "v1"
                ],
                "summary": "post image",
                "parameters": [
                    {
                        "description": "Image Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateImageResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image/{image}": {
            "get": {
                "description": "List image.",
                "tags": [
                    "v1"
                ],
                "summary": "list image",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Image ID",
                        "name": "image",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListImageResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an image.",
                "tags": [
                    "v1"
                ],
                "summary": "delete image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "image",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an image.",
                "tags": [
                    "v1"
                ],
                "summary": "update image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateImageResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image/{image}/clone": {
            "post": {
                "description": "Clone an image.",
                "tags": [
                    "v1"
                ],
                "summary": "clone image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CloneImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CloneImageResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image/{image}/enable": {
            "patch": {
                "description": "Enable an image.",
                "tags": [
                    "v1"
                ],
                "summary": "enable image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.EnableImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.EnableImageResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image/{image}/lock": {
            "patch": {
                "description": "Lock an image.",
                "tags": [
                    "v1"
                ],
                "summary": "lock image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.LockImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.LockImageResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image/{image}/name": {
            "patch": {
                "description": "Rename an image.",
                "tags": [
                    "v1"
                ],
                "summary": "rename image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameImageResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image/{image}/ownership": {
            "patch": {
                "description": "Change image ownership.",
                "tags": [
                    "v1"
                ],
                "summary": "change image ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeImageOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeImageOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image/{image}/permissions": {
            "patch": {
                "description": "Change image permissions.",
                "tags": [
                    "v1"
                ],
                "summary": "change image permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeImagePermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeImagePermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image/{image}/persistent": {
            "patch": {
                "description": "Set image persistent.",
                "tags": [
                    "v1"
                ],
                "summary": "set image persistent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.SetImagePersistentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.SetImagePersistentResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image/{image}/snapshot/{snapshot}": {
            "delete": {
                "description": "Delete an image snapshot.",
                "tags": [
                    "v1"
                ],
                "summary": "delete image snapshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Snapshot ID",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image/{image}/snapshot/{snapshot}/flatten": {
            "patch": {
                "description": "Flatten an image snapshot.",
                "tags": [
                    "v1"
                ],
                "summary": "flatten image snapshot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "snapshot id",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.FlattenImageSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image/{image}/snapshot/{snapshot}/revert": {
            "patch": {
                "description": "Revert an image snapshot.",
                "tags": [
                    "v1"
                ],
                "summary": "revert image snapshot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "snapshot id",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RevertImageSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image/{image}/type": {
            "patch": {
                "description": "Change image type.",
                "tags": [
                    "v1"
                ],
                "summary": "change image type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeImageTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeImageTypeResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/image/{image}/unlock": {
            "patch": {
                "description": "Unlock an image.",
                "tags": [
                    "v1"
                ],
                "summary": "unlock image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UnlockImageResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance": {
            "get": {
                "description": "Returns a list of instances.",
                "tags": [
                    "v1"
                ],
                "summary": "get instance list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma separated list of instance IDs",
                        "name": "instance",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "State of instances to return",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Return extended information",
                        "name": "extended",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/hc.ListInstancesResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Allocates a new instance in HyperCloud.",
                "tags": [
                    "v1"
                ],
                "summary": "post an instance",
                "parameters": [
                    {
                        "description": "Instance Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance-group": {
            "get": {
                "description": "Get a list of instance groups.",
                "tags": [
                    "v1"
                ],
                "summary": "get instance groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListInstanceGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an instance group.",
                "tags": [
                    "v1"
                ],
                "summary": "post instance group",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateInstanceGroupRequest"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance-group/{group}": {
            "get": {
                "description": "Get an instance group.",
                "tags": [
                    "v1"
                ],
                "summary": "get instance group",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "decrypt",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "vmgroup id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListInstanceGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an instance group.",
                "tags": [
                    "v1"
                ],
                "summary": "delete instance group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an instance group.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Instance Group Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateInstanceGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateInstanceGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance-group/{group}/lock": {
            "patch": {
                "description": "Lock an instance group.",
                "tags": [
                    "v1"
                ],
                "summary": "lock instance group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VMGroup Lock",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.LockInstanceGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.LockInstanceGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance-group/{group}/name": {
            "patch": {
                "description": "Rename an instance group.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance group name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Instance Group Name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameInstanceGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameInstanceGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance-group/{group}/ownership": {
            "patch": {
                "description": "Change the ownership of an instance group.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance group ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Instance Group Ownership",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeInstanceGroupOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeInstanceGroupOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance-group/{group}/permissions": {
            "patch": {
                "description": "Change the permissions of an instance group.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance group permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Instance Group Permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeInstanceGroupPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeInstanceGroupPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance-group/{group}/unlock": {
            "patch": {
                "description": "Unlock an instance group.",
                "tags": [
                    "v1"
                ],
                "summary": "unlock instance group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UnlockInstanceGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/accounting": {
            "get": {
                "description": "Returns a list of instances with accounting information.",
                "tags": [
                    "v1"
                ],
                "summary": "get instance accounting list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Start time",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "End time",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListInstancesAccountingResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/monitoring": {
            "get": {
                "description": "Returns a list of instances with monitoring information.",
                "tags": [
                    "v1"
                ],
                "summary": "get instance monitoring list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Get monitoring information for the last N seconds",
                        "name": "seconds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListInstancesMonitoringResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/showback": {
            "get": {
                "description": "Returns a list of instances showback information.",
                "tags": [
                    "v1"
                ],
                "summary": "get instance showback list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Starting Month",
                        "name": "month-start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ending Month",
                        "name": "month-end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Starting Year",
                        "name": "year-start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ending Year",
                        "name": "year-end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListInstancesShowbackResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Calculates the showback for the time period.",
                "tags": [
                    "v1"
                ],
                "summary": "post instance showback",
                "parameters": [
                    {
                        "description": "Time Period",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CalculateInstancesShowbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}": {
            "get": {
                "description": "Retrieves information for a given instance.",
                "tags": [
                    "v1"
                ],
                "summary": "get an instance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/action": {
            "patch": {
                "description": "Submits an action to be performed on an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "patch an instance action",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Instance Action",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.SetInstanceActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.SetInstanceActionResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/config": {
            "patch": {
                "description": "Updates (appends) a set of supported configuration attributes in the instance template.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Config Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateInstanceConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateInstanceConfigResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/deploy": {
            "patch": {
                "description": "Deploys the instance of the given id on the target host.",
                "tags": [
                    "v1"
                ],
                "summary": "patch an instance deployment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Instance Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.DeployInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.DeployInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/disk": {
            "post": {
                "description": "Attaches a new disk for the instance.",
                "tags": [
                    "v1"
                ],
                "summary": "post an instance disk",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disk Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateInstanceDiskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateInstanceDiskResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/disk/{disk}": {
            "delete": {
                "description": "Detaches a disk from the instance.",
                "tags": [
                    "v1"
                ],
                "summary": "delete instance disk",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Disk ID",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/disk/{disk}/image": {
            "post": {
                "description": "Sets the disk to be saved in the given image.",
                "tags": [
                    "v1"
                ],
                "summary": "post an instance disk image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Disk ID",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disk Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateInstanceDiskImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateInstanceDiskImageResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/disk/{disk}/size": {
            "patch": {
                "description": "Resizes a disk for an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance disk size",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "disk id",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disk Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ResizeInstanceDiskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ResizeInstanceDiskResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/disk/{disk}/snapshot": {
            "post": {
                "description": "Takes a snapshot of the disk image.",
                "tags": [
                    "v1"
                ],
                "summary": "post an instance disk snapshot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Disk ID",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disk Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateInstanceDiskSnapshotRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateInstanceDiskSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/disk/{disk}/snapshot/{snapshot}": {
            "delete": {
                "description": "Deletes a disk snapshot.",
                "tags": [
                    "v1"
                ],
                "summary": "delete an instance disk snapshot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Disk ID",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Snapshot ID",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/disk/{disk}/snapshot/{snapshot}/name": {
            "patch": {
                "description": "Renames a disk snapshot.",
                "tags": [
                    "v1"
                ],
                "summary": "patch snapshot name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "disk id",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "snapshot id",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Snapshot Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameInstanceDiskSnapshotRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameInstanceDiskSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/disk/{disk}/snapshot/{snapshot}/revert": {
            "patch": {
                "description": "Reverts the disk state to a previously taken snapshot.",
                "tags": [
                    "v1"
                ],
                "summary": "patch snapshot revert",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "disk id",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "snapshot id",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RevertInstanceDiskSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/lock": {
            "patch": {
                "description": "Locks an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance lock",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Lock Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.LockInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.LockInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/monitoring": {
            "get": {
                "description": "Retrieves monitoring information.",
                "tags": [
                    "v1"
                ],
                "summary": "get an instance monitoring",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListInstanceMonitoringResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/move": {
            "patch": {
                "description": "Migrates an instance to the target host.",
                "tags": [
                    "v1"
                ],
                "summary": "patch an instance migration",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Move Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.MoveInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.MoveInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/name": {
            "patch": {
                "description": "Changes the name of an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rename Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/nic": {
            "post": {
                "description": "Attaches a new network interface to the instance.",
                "tags": [
                    "v1"
                ],
                "summary": "post instance nic",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "NIC Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateInstanceNICRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateInstanceNICResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/nic/{nic}": {
            "delete": {
                "description": "Detaches a network interface from the instance.",
                "tags": [
                    "v1"
                ],
                "summary": "delete instance nic",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "NIC ID",
                        "name": "nic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/nic/{nic}/security-group": {
            "delete": {
                "description": "Detaches a security group from a network interface of an instance, if the instance is running it removes the associated rules.",
                "tags": [
                    "v1"
                ],
                "summary": "delete instance security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "NIC ID",
                        "name": "nic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/nic/{nic}/security-group/{sg}": {
            "post": {
                "description": "Attaches a security group to a network interface of an instance, if the instance is running it updates the associated rules.",
                "tags": [
                    "v1"
                ],
                "summary": "post instance security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "network interface id",
                        "name": "nic",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "security group id",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AddInstanceSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/ownership": {
            "patch": {
                "description": "Changes the ownership of an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Ownership Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeInstanceOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeInstanceOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/permissions": {
            "patch": {
                "description": "Changes the permissions of an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permissions Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeInstancePermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeInstancePermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/recover": {
            "patch": {
                "description": "Recovers a stuck instance that is waiting for a driver operation. The recovery may be done by failing or succeeding the pending operation. You need to manually check the instance status on the host, to decide if the operation succeeded.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance recover",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Recover Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RecoverInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RecoverInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/schedule": {
            "post": {
                "description": "Adds a schedule to an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "post instance schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schedule Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.AddInstanceScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AddInstanceScheduleResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a schedule for an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schedule Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateInstanceScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateInstanceScheduleResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/schedule/{action}": {
            "delete": {
                "description": "Deletes a schedule from an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "delete instance schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Action ID",
                        "name": "action",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/size": {
            "patch": {
                "description": "Changes the capacity of an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance size",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resize Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ResizeInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ResizeInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/snapshot": {
            "post": {
                "description": "Creates a snapshot of an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "post instance snapshot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Snapshot Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateInstanceSnapshotRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateInstanceSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/snapshot/{snapshot}": {
            "delete": {
                "description": "Deletes a snapshot of an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "delete instance snapshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Snapshot ID",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/snapshot/{snapshot}/revert": {
            "patch": {
                "description": "Reverts an instance to a snapshot.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance snapshot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "snapshot id",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RevertInstanceSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/template": {
            "patch": {
                "description": "Replaces the user template contents of an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateInstanceTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateInstanceTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/instance/{instance}/unlock": {
            "patch": {
                "description": "Unlocks an instance.",
                "tags": [
                    "v1"
                ],
                "summary": "patch instance unlock",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UnlockInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market": {
            "get": {
                "description": "Retrieves information for all or part of the marketplaces in the pool.",
                "tags": [
                    "v1"
                ],
                "summary": "get markets info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListMarketsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Allocates a new marketplace.",
                "tags": [
                    "v1"
                ],
                "summary": "post market",
                "parameters": [
                    {
                        "description": "Marketplace Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateMarketRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateMarketResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/app": {
            "get": {
                "description": "Retrieves information for all or part of the marketplace apps in the pool.",
                "tags": [
                    "v1"
                ],
                "summary": "get market apps info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter flag",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "start",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "end",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListMarketAppsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/app/{app}": {
            "get": {
                "description": "Retrieves information for the marketplace app.",
                "tags": [
                    "v1"
                ],
                "summary": "get market app info",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the given marketplace app from the pool.",
                "tags": [
                    "v1"
                ],
                "summary": "delete marketplace app",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Market ID",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Replaces the marketplace app template contents.",
                "tags": [
                    "v1"
                ],
                "summary": "update marketplace app",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MarketApp Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateMarketAppRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/app/{app}/enable": {
            "patch": {
                "description": "Enables or disables a marketplace app.",
                "tags": [
                    "v1"
                ],
                "summary": "enable marketplace app",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enable App Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.EnableMarketAppRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.EnableMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/app/{app}/lock": {
            "patch": {
                "description": "Locks a MarketPlaceApp. Lock certain actions depending on blocking level.",
                "tags": [
                    "v1"
                ],
                "summary": "lock market app",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Lock App Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.LockMarketAppRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.LockMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/app/{app}/name": {
            "patch": {
                "description": "Renames a marketplace app.",
                "tags": [
                    "v1"
                ],
                "summary": "patch market app name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Name Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameMarketAppRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/app/{app}/ownership": {
            "patch": {
                "description": "Changes the ownership of a marketplace app.",
                "tags": [
                    "v1"
                ],
                "summary": "patch market app ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Ownership Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeMarketAppOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeMarketAppOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/app/{app}/permissions": {
            "patch": {
                "description": "Changes the permission bits of a marketplace app.",
                "tags": [
                    "v1"
                ],
                "summary": "change market app permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permissions Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeMarketAppPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeMarketAppPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/app/{app}/unlock": {
            "patch": {
                "description": "Unlocks a MarketPlaceApp.",
                "tags": [
                    "v1"
                ],
                "summary": "unlock market app",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UnlockMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/{market}": {
            "get": {
                "description": "Retrieves information for the marketplace.",
                "tags": [
                    "v1"
                ],
                "summary": "get market info",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "market",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListMarketResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the given market from the pool.",
                "tags": [
                    "v1"
                ],
                "summary": "delete market",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Market ID",
                        "name": "market",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Replaces the marketplace template contents.",
                "tags": [
                    "v1"
                ],
                "summary": "update market",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market id",
                        "name": "market",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Market Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateMarketRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateMarketResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/{market}/app/": {
            "post": {
                "description": "Allocates a new marketplace app.",
                "tags": [
                    "v1"
                ],
                "summary": "post marketapp",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market id",
                        "name": "market",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Marketplace Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateMarketAppRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/{market}/enable": {
            "patch": {
                "description": "Enable/disable the Marketplace.",
                "tags": [
                    "v1"
                ],
                "summary": "enable market",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market id",
                        "name": "market",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enable Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.EnableMarketRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.EnableMarketResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/{market}/name": {
            "patch": {
                "description": "Renames a marketplace.",
                "tags": [
                    "v1"
                ],
                "summary": "patch market name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market id",
                        "name": "market",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Name Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameMarketRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameMarketResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/{market}/ownership": {
            "patch": {
                "description": "Changes the ownership of a marketplace.",
                "tags": [
                    "v1"
                ],
                "summary": "patch market ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market id",
                        "name": "market",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Ownership Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeMarketOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeMarketOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/market/{market}/permissions": {
            "patch": {
                "description": "Changes the permission bits of a marketplace.",
                "tags": [
                    "v1"
                ],
                "summary": "change market permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market id",
                        "name": "market",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permissions Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeMarketPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeMarketPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/ping": {
            "post": {
                "description": "pingHandler the server.",
                "tags": [
                    "v1"
                ],
                "summary": "pingHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.PingResponse"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/security-group/{sg}": {
            "patch": {
                "description": "Replaces the security group template contents.",
                "tags": [
                    "v1"
                ],
                "summary": "replaces the security group template contents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sg id",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Security Group",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateSecurityGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/security-group/{sg}/chmod": {
            "patch": {
                "description": "Changes the permission bits of a security group.",
                "tags": [
                    "v1"
                ],
                "summary": "changes the permission bits of a security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sg id",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeSecurityGroupPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeSecurityGroupPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/security-group/{sg}/chown": {
            "patch": {
                "description": "Changes the ownership of a security group.",
                "tags": [
                    "v1"
                ],
                "summary": "changes the ownership of a security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sg id",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New user and group",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeSecurityGroupOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeSecurityGroupOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/security-group/{sg}/commit": {
            "patch": {
                "description": "Commit security group changes to associated VMs. This is\nintended for retrying updates of VMs or reinitialize the updating process if\none stopped or failed after a one.secgroup.update call.",
                "tags": [
                    "v1"
                ],
                "summary": "Commit security group changes to associated VMs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sg id",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Security group ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CommitSecurityGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CommitSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/security-group/{sg}/rename": {
            "patch": {
                "description": "Renames a security group.",
                "tags": [
                    "v1"
                ],
                "summary": "renames a security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sg id",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Security Group name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameSecurityGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/sg": {
            "post": {
                "description": "Create a new security group in HyperCloud.",
                "tags": [
                    "v1"
                ],
                "summary": "create a new security group",
                "parameters": [
                    {
                        "description": "Security Group",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateSecurityGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/sg/": {
            "get": {
                "description": "retrieves information for all or part of the security\ngroups in the pool.",
                "tags": [
                    "v1"
                ],
                "summary": "retrieves information for subset of security groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListSecurityGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/sg/{sg}": {
            "get": {
                "description": "Retrieves information for the security group.",
                "tags": [
                    "v1"
                ],
                "summary": "retrieves information for the security group",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Security group ID",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the given security group from the pool.",
                "tags": [
                    "v1"
                ],
                "summary": "delete a security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/sg/{sg}/clone": {
            "post": {
                "description": "Clones an existing security group.",
                "tags": [
                    "v1"
                ],
                "summary": "clones an existing security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cloned group",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CloneSecurityGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CloneSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/system/config": {
            "get": {
                "description": "Return the HyperCloud configuration.",
                "tags": [
                    "v1"
                ],
                "summary": "returns the HyperCloud configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListSystemConfigResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/system/version": {
            "get": {
                "description": "Return the HyperCloud version.",
                "tags": [
                    "v1"
                ],
                "summary": "returns the HyperCloud core version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListSystemVersionResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/template": {
            "get": {
                "description": "Retrieves information for all or part of the Resources in the pool.",
                "tags": [
                    "v1"
                ],
                "summary": "list templates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListTemplatesResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Allocates a new template.",
                "tags": [
                    "v1"
                ],
                "summary": "post template",
                "parameters": [
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/template/{template}": {
            "get": {
                "description": "Retrieves information for the template.",
                "tags": [
                    "v1"
                ],
                "summary": "list a template",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the given template from the pool.",
                "tags": [
                    "v1"
                ],
                "summary": "delete template",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Delete disk",
                        "name": "disk",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.DeleteTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Replaces the template contents.",
                "tags": [
                    "v1"
                ],
                "summary": "update template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/template/{template}/clone": {
            "post": {
                "description": "Clones an existing virtual machine template.",
                "tags": [
                    "v1"
                ],
                "summary": "clone template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CloneTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CloneTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/template/{template}/instantiate": {
            "patch": {
                "description": "Instantiates a new virtual machine from a template.",
                "tags": [
                    "v1"
                ],
                "summary": "instantiate template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.InstantiateTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.InstantiateTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/template/{template}/lock": {
            "patch": {
                "description": "Locks a Template.",
                "tags": [
                    "v1"
                ],
                "summary": "lock a template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Templates",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.LockTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.LockTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/template/{template}/name": {
            "patch": {
                "description": "Renames a template.",
                "tags": [
                    "v1"
                ],
                "summary": "rename template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/template/{template}/ownership": {
            "patch": {
                "description": "Changes the ownership of a template.",
                "tags": [
                    "v1"
                ],
                "summary": "change template ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeTemplateOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeTemplateOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/template/{template}/permissions": {
            "patch": {
                "description": "Changes the permission bits of a template.",
                "tags": [
                    "v1"
                ],
                "summary": "change template permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeTemplatePermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeTemplatePermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/template/{template}/unlock": {
            "patch": {
                "description": "Unlocks a Template.",
                "tags": [
                    "v1"
                ],
                "summary": "unlock a template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UnlockTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user": {
            "get": {
                "description": "Retrieves information for the user.",
                "tags": [
                    "v1"
                ],
                "summary": "retrieves information for the user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListUsersResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new user account.",
                "tags": [
                    "v1"
                ],
                "summary": "create new user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user/login": {
            "patch": {
                "description": "Generate or set user login token.",
                "tags": [
                    "v1"
                ],
                "summary": "set user login token",
                "parameters": [
                    {
                        "description": "User login",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.SetUserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.SetUserLoginTokenResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user/quota": {
            "get": {
                "description": "Returns the default user quota limits.",
                "tags": [
                    "v1"
                ],
                "summary": "returns the default user quota limits",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListUserQuotaResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the default user quota limits.",
                "tags": [
                    "v1"
                ],
                "summary": "updates the default user quota limits",
                "parameters": [
                    {
                        "description": "Default user quota",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateDefaultUserQuotaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateDefaultUserQuotaResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user/{user}": {
            "get": {
                "description": "Retrieves information for the user.",
                "tags": [
                    "v1"
                ],
                "summary": "retrieves information for the user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListUserResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an user.",
                "tags": [
                    "v1"
                ],
                "summary": "delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update user data.",
                "tags": [
                    "v1"
                ],
                "summary": "update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user/{user}/auth": {
            "patch": {
                "description": "Changes the authentication driver and the password for the given user.",
                "tags": [
                    "v1"
                ],
                "summary": "change authentication driver and password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "authentication driver",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeUserAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeUserAuthResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user/{user}/enable": {
            "patch": {
                "description": "Enables or disables an user.",
                "tags": [
                    "v1"
                ],
                "summary": "enables or disables an user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enable",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.EnableUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.EnableUserResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user/{user}/group/{group}": {
            "post": {
                "description": "Adds the User to a secondary group..",
                "tags": [
                    "v1"
                ],
                "summary": "adds the User to a secondary group.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AddUserGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes user from a secondary group.",
                "tags": [
                    "v1"
                ],
                "summary": "remove user from group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Changes the group of the given user.",
                "tags": [
                    "v1"
                ],
                "summary": "changes the group of the given user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeUserGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user/{user}/password": {
            "patch": {
                "description": "Set new user password.",
                "tags": [
                    "v1"
                ],
                "summary": "set user password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User password",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeUserPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeUserPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user/{user}/quota": {
            "post": {
                "description": "Sets the user quota limits.",
                "tags": [
                    "v1"
                ],
                "summary": "sets the user quota limits",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "user quota",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.SetUserQuotaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.SetUserQuotaResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vdc": {
            "get": {
                "description": "List all vdcs.",
                "tags": [
                    "v1"
                ],
                "summary": "get vdcs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListVDCsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a vdc.",
                "tags": [
                    "v1"
                ],
                "summary": "post vdc",
                "parameters": [
                    {
                        "description": "VDC Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateVDCRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateVDCResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vdc/{vdc}": {
            "get": {
                "description": "List a vdc.",
                "tags": [
                    "v1"
                ],
                "summary": "get vdc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListVDCResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a vdc.",
                "tags": [
                    "v1"
                ],
                "summary": "delete vdc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a vdc.",
                "tags": [
                    "v1"
                ],
                "summary": "update vdc",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VDC Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateVDCRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateVDCResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vdc/{vdc}/group/{group}": {
            "delete": {
                "description": "Remove a vdc group.",
                "tags": [
                    "v1"
                ],
                "summary": "remove vdc group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Add a vdc group.",
                "tags": [
                    "v1"
                ],
                "summary": "add vdc group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AddVDCGroupResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vdc/{vdc}/name": {
            "patch": {
                "description": "Rename a vdc.",
                "tags": [
                    "v1"
                ],
                "summary": "rename vdc",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VDC Name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameVDCRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameVDCResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vdc/{vdc}/zone/{zone}/cluster/{cluster}": {
            "delete": {
                "description": "Remove a vdc cluster.",
                "tags": [
                    "v1"
                ],
                "summary": "remove vdc cluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Cluster ID",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Add a vdc cluster.",
                "tags": [
                    "v1"
                ],
                "summary": "add vdc cluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AddVDCClusterResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vdc/{vdc}/zone/{zone}/datastore/{datastore}": {
            "delete": {
                "description": "Remove a vdc datastore.",
                "tags": [
                    "v1"
                ],
                "summary": "remove vdc datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Datastore ID",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Add a vdc datastore.",
                "tags": [
                    "v1"
                ],
                "summary": "add vdc datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AddVDCDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vdc/{vdc}/zone/{zone}/host/{host}": {
            "delete": {
                "description": "Remove a vdc host.",
                "tags": [
                    "v1"
                ],
                "summary": "remove vdc host",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Host ID",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Add a vdc host.",
                "tags": [
                    "v1"
                ],
                "summary": "add vdc host",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "host id",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AddVDCHostResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vdc/{vdc}/zone/{zone}/network/{network}": {
            "delete": {
                "description": "Remove a vdc network.",
                "tags": [
                    "v1"
                ],
                "summary": "remove vdc network",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Network ID",
                        "name": "network",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Add a vdc network.",
                "tags": [
                    "v1"
                ],
                "summary": "add vdc network",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "network id",
                        "name": "network",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AddVDCNetworkResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet": {
            "get": {
                "description": "List virtual networks.",
                "tags": [
                    "v1"
                ],
                "summary": "get vnets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListVNetsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a vnet.",
                "tags": [
                    "v1"
                ],
                "summary": "post vnet",
                "parameters": [
                    {
                        "description": "VNet Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateVNetResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/template": {
            "post": {
                "description": "Create a virtual network template.",
                "tags": [
                    "v1"
                ],
                "summary": "create vnet template",
                "parameters": [
                    {
                        "description": "VNet Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateVNetTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/template/{template}": {
            "get": {
                "description": "List virtual network template.",
                "tags": [
                    "v1"
                ],
                "summary": "list vnet template",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a virtual network template.",
                "tags": [
                    "v1"
                ],
                "summary": "delete vnet template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/template/{template}/clone": {
            "post": {
                "description": "Clone a virtual network template.",
                "tags": [
                    "v1"
                ],
                "summary": "clone vnet template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CloneVNetTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CloneVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/template/{template}/instantiate": {
            "patch": {
                "description": "Instantiate a virtual network template.",
                "tags": [
                    "v1"
                ],
                "summary": "instantiate vnet template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.InstantiateVNetTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.InstantiateVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/template/{template}/lock": {
            "patch": {
                "description": "Lock a virtual network template.",
                "tags": [
                    "v1"
                ],
                "summary": "lock vnet template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Lock",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.LockVNetTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.LockVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/template/{template}/name": {
            "patch": {
                "description": "Rename a virtual network template.",
                "tags": [
                    "v1"
                ],
                "summary": "rename vnet template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Rename",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameVNetTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/template/{template}/owner": {
            "patch": {
                "description": "Change the owner of a virtual network template.",
                "tags": [
                    "v1"
                ],
                "summary": "change vnet template owner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Owner",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeVNetTemplateOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeVNetTemplateOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/template/{template}/permissions": {
            "patch": {
                "description": "Change the permissions of a virtual network template.",
                "tags": [
                    "v1"
                ],
                "summary": "change vnet template permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeVNetTemplatePermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeVNetTemplatePermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/template/{template}/unlock": {
            "patch": {
                "description": "Unlock a virtual network template.",
                "tags": [
                    "v1"
                ],
                "summary": "unlock vnet template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UnlockVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/templates": {
            "get": {
                "description": "Get a list of virtual network templates.",
                "tags": [
                    "v1"
                ],
                "summary": "get vnet templates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}": {
            "get": {
                "description": "List a virtual network.",
                "tags": [
                    "v1"
                ],
                "summary": "get vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VNet ID",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListVNetResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a vnet.",
                "tags": [
                    "v1"
                ],
                "summary": "delete vnet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VNet ID",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a vnet.",
                "tags": [
                    "v1"
                ],
                "summary": "update vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateVNetResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}/address-range": {
            "post": {
                "description": "Add an address range to a vnet.",
                "tags": [
                    "v1"
                ],
                "summary": "add address range",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VNet ID",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Address Range",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.AddVNetAddressRangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.AddVNetAddressRangeResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an address range in a vnet.",
                "tags": [
                    "v1"
                ],
                "summary": "update address range",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Address Range",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateVNetAddressRangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateVNetAddressRangeResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}/address-range/{ar}": {
            "delete": {
                "description": "Delete an address range from a vnet.",
                "tags": [
                    "v1"
                ],
                "summary": "delete address range",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VNet ID",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Address Range ID",
                        "name": "ar",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Force delete",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}/address-range/{ar}/free": {
            "delete": {
                "description": "Free a reserved address range from a vnet.",
                "tags": [
                    "v1"
                ],
                "summary": "free address range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VNet ID",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Address Range ID",
                        "name": "ar",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}/hold": {
            "patch": {
                "description": "Holds a virtual network lease as used.",
                "tags": [
                    "v1"
                ],
                "summary": "hold vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Hold",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.HoldVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.HoldVNetResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}/lock": {
            "patch": {
                "description": "Lock a virtual network.",
                "tags": [
                    "v1"
                ],
                "summary": "lock vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Lock",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.LockVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.LockVNetResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}/name": {
            "patch": {
                "description": "Rename a vnet.",
                "tags": [
                    "v1"
                ],
                "summary": "patch name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Rename",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameVNetResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}/ownership": {
            "patch": {
                "description": "Change ownership on a vnet.",
                "tags": [
                    "v1"
                ],
                "summary": "patch ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Ownership",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeVNetOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeVNetOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}/permissions": {
            "patch": {
                "description": "Change permissions on a vnet.",
                "tags": [
                    "v1"
                ],
                "summary": "patch permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeVNetPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeVNetPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}/recover": {
            "patch": {
                "description": "Recover a virtual network.",
                "tags": [
                    "v1"
                ],
                "summary": "recover vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Recover",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RecoverVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RecoverVNetResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}/release": {
            "patch": {
                "description": "Releases a virtual network lease on hold.",
                "tags": [
                    "v1"
                ],
                "summary": "release vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Release",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ReleaseVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ReleaseVNetResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}/reserve": {
            "post": {
                "description": "Reserve a vnet.",
                "tags": [
                    "v1"
                ],
                "summary": "reserve vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Reservation",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ReserveVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ReserveVNetResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}/template/update": {
            "patch": {
                "description": "Update a virtual network template.",
                "tags": [
                    "v1"
                ],
                "summary": "update vnet template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateVNetTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vnet/{vnet}/unlock": {
            "patch": {
                "description": "Unlock a virtual network.",
                "tags": [
                    "v1"
                ],
                "summary": "unlock vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UnlockVNetResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vrouter": {
            "get": {
                "description": "List virtual routers",
                "tags": [
                    "v1"
                ],
                "summary": "get vrouters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListVRoutersResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a virtual router",
                "tags": [
                    "v1"
                ],
                "summary": "post vrouter",
                "parameters": [
                    {
                        "description": "VRouter Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateVRouterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vrouter/{router}": {
            "get": {
                "description": "List a virtual router",
                "tags": [
                    "v1"
                ],
                "summary": "get vrouter",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "VRouter ID",
                        "name": "router",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a virtual router",
                "tags": [
                    "v1"
                ],
                "summary": "delete vrouter",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Delete disk",
                        "name": "disk",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "VRouter ID",
                        "name": "router",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a virtual router",
                "tags": [
                    "v1"
                ],
                "summary": "update vrouter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateVRouterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vrouter/{router}/instantiate": {
            "patch": {
                "description": "Instantiate a virtual router",
                "tags": [
                    "v1"
                ],
                "summary": "instantiate vrouter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.InstantiateVRouterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.InstantiateVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vrouter/{router}/lock": {
            "patch": {
                "description": "Lock a virtual router",
                "tags": [
                    "v1"
                ],
                "summary": "lock vrouter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter Lock",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.LockVRouterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.LockVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vrouter/{router}/name": {
            "patch": {
                "description": "Rename a virtual router",
                "tags": [
                    "v1"
                ],
                "summary": "rename vrouter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter Rename",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameVRouterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vrouter/{router}/nic": {
            "post": {
                "description": "Add a NIC to a virtual router",
                "tags": [
                    "v1"
                ],
                "summary": "add vrouter nic",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "virtual router ID",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter NIC",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateVRouterNICRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateVRouterNICResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vrouter/{router}/nic/{nic}": {
            "delete": {
                "description": "Remove a NIC from a virtual router",
                "tags": [
                    "v1"
                ],
                "summary": "remove vrouter nic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VRouter ID",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NIC ID",
                        "name": "nic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vrouter/{router}/ownership": {
            "patch": {
                "description": "Change a virtual router ownership",
                "tags": [
                    "v1"
                ],
                "summary": "change vrouter ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter Ownership",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeVRouterOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeVRouterOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vrouter/{router}/permissions": {
            "patch": {
                "description": "Change a virtual router permissions",
                "tags": [
                    "v1"
                ],
                "summary": "change vrouter permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter Permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeVRouterPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ChangeVRouterPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/vrouter/{router}/unlock": {
            "patch": {
                "description": "Unlock a virtual router.",
                "tags": [
                    "v1"
                ],
                "summary": "unlock vrouter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UnlockVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/zone": {
            "get": {
                "description": "List all zones.",
                "tags": [
                    "v1"
                ],
                "summary": "get zones",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListZonesResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a zone.",
                "tags": [
                    "v1"
                ],
                "summary": "post zone",
                "parameters": [
                    {
                        "description": "Zone Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.CreateZoneRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.CreateZoneResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/zone/raft": {
            "get": {
                "description": "Get zone raft status.",
                "tags": [
                    "v1"
                ],
                "summary": "get zone raft status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListZonesRaftStatusResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/zone/{zone}": {
            "get": {
                "description": "Get a zone.",
                "tags": [
                    "v1"
                ],
                "summary": "get zone",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.ListZoneResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a zone.",
                "tags": [
                    "v1"
                ],
                "summary": "delete zone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Zone ID",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a zone.",
                "tags": [
                    "v1"
                ],
                "summary": "update zone",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Zone Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateZoneRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.UpdateZoneResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/zone/{zone}/enable": {
            "patch": {
                "description": "Enable a zone.",
                "tags": [
                    "v1"
                ],
                "summary": "enable zone",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Zone Enable",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.EnableZoneRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.EnableZoneResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/zone/{zone}/name": {
            "patch": {
                "description": "Rename a zone.",
                "tags": [
                    "v1"
                ],
                "summary": "rename zone",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Zone Name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hc.RenameZoneRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hc.RenameZoneResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/acl": {
            "get": {
                "description": "Lists ACL rules.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get acl rules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListACLsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an ACL rule.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "create acl rule",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateACLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateACLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/acl/{acl}": {
            "delete": {
                "description": "Delete an ACL rule.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete acl rule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ACL ID",
                        "name": "acl",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/cluster": {
            "get": {
                "description": "Lists information for all clusters.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get clusters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListClustersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a cluster",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post cluster",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateClusterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/cluster/{cluster}": {
            "get": {
                "description": "Lists cluster information.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get cluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListClusterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete cluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch cluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateClusterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/cluster/{cluster}/datastore/{datastore}": {
            "delete": {
                "description": "Deletes a datastore from a cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete cluster datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Adds a datastore to a cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "add cluster datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AddClusterDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/cluster/{cluster}/host/{host}": {
            "delete": {
                "description": "Deletes a host from a cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete cluster host",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "host id",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Adds a host to a cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "add cluster host",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "host id",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AddClusterHostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/cluster/{cluster}/name": {
            "patch": {
                "description": "Renames a cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "rename cluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameClusterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/cluster/{cluster}/network/{network}": {
            "delete": {
                "description": "Deletes a vnet from a cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete cluster vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "network",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Adds a vnet to a cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "add cluster vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "network id",
                        "name": "network",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AddClusterNetworkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/compute": {
            "get": {
                "description": "Get computes.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get computes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListComputeHostsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/compute/host": {
            "post": {
                "description": "create a compute host.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post compute",
                "parameters": [
                    {
                        "description": "Host Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateComputeHostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateComputeHostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/compute/host/monitoring": {
            "get": {
                "description": "Get a compute host's monitoring data.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get computes monitoring",
                "parameters": [
                    {
                        "type": "integer",
                        "default": -1,
                        "description": "Seconds",
                        "name": "seconds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListComputeHostsMonitoringResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/compute/host/{host}": {
            "get": {
                "description": "Get a compute host.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get compute",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Host ID",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListComputeHostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a compute host.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete compute",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Host ID",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a compute host.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch compute",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "host id",
                        "name": "host",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Host Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateComputeHostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateComputeHostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/compute/host/{host}/monitoring": {
            "get": {
                "description": "Get a compute host's monitoring data.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get compute monitoring",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Host ID",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListComputeHostMonitoringResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/compute/host/{host}/name": {
            "patch": {
                "description": "Rename a compute host.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "host id",
                        "name": "host",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Host Name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameComputeHostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameComputeHostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/compute/host/{host}/status": {
            "patch": {
                "description": "Set compute status.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "host id",
                        "name": "host",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Host Status",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.SetComputeHostStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.SetComputeHostStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/datastore": {
            "get": {
                "description": "Lists all datastores.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "list datastores",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListDatastoresResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Allocates a new datastore.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post datastore",
                "parameters": [
                    {
                        "description": "Datastore",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateDatastoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/datastore/{datastore}": {
            "get": {
                "description": "Lists a datastores.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "list datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Datastore ID",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a datastore.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Datastore ID",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a datastore.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datastore",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateDatastoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/datastore/{datastore}/enable": {
            "patch": {
                "description": "Enables a datastore.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "enable datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datastore ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.EnableDatastoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.EnableDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/datastore/{datastore}/name": {
            "patch": {
                "description": "Renames a datastore.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "rename datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameDatastoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/datastore/{datastore}/ownership": {
            "patch": {
                "description": "Changes the ownership of a datastore.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change datastore ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ownership",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeDatastoreOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeDatastoreOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/datastore/{datastore}/permissions": {
            "patch": {
                "description": "Changes the permissions of a datastore.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change datastore permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeDatastorePermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeDatastorePermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/document": {
            "post": {
                "description": "allocate a document",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post a allocate",
                "parameters": [
                    {
                        "description": "Document Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.AllocateDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AllocateDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/document/{document}": {
            "get": {
                "description": "Get a document.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get document",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Document",
                        "name": "document",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a document",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete a document",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Document",
                        "name": "document",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a document.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "update a document",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document id",
                        "name": "document",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/document/{document}/clone": {
            "post": {
                "description": "Clone a document.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post a clone",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Document",
                        "name": "document",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CloneDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CloneDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/document/{document}/lock": {
            "patch": {
                "description": "Lock a document.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "lock document",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document id",
                        "name": "document",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document Locl",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.LockDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.LockDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/document/{document}/name": {
            "patch": {
                "description": "Rename a document.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document id",
                        "name": "document",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/document/{document}/ownership": {
            "patch": {
                "description": "Change ownership on a document.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document id",
                        "name": "document",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document Ownership",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeDocumentOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeDocumentOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/document/{document}/permissions": {
            "patch": {
                "description": "Change permissions on a document.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch persmissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document id",
                        "name": "document",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document Permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeDocumentPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeDocumentPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/document/{document}/unlock": {
            "patch": {
                "description": "Unlock a document.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "unlock document",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document id",
                        "name": "document",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UnlockDocumentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/documents": {
            "get": {
                "description": "List all documents.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "list documents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document Type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListDocumentsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/group": {
            "get": {
                "description": "List all groups.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "list groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Allocates a new group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post group",
                "parameters": [
                    {
                        "description": "Group",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/group/quota": {
            "get": {
                "description": "Returns the default group quota limits.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "return the default group quota",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListGroupQuotaResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the default group quota limits.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "updates the default group quota limits",
                "parameters": [
                    {
                        "description": "quota",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateGroupQuotaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateGroupQuotaResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/group/{group}": {
            "get": {
                "description": "Returns group info.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get group info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Udates the group",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Group",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/group/{group}/admin": {
            "patch": {
                "description": "Adds a User to the Group administrators set",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "add group admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Group Admin",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.AddGroupAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AddGroupAdminResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/group/{group}/admin/{user}": {
            "delete": {
                "description": "Remove an User from the administrators set",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "remove group admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/group/{group}/quota": {
            "post": {
                "description": "Set quota for the group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "set quota",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Group quota",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.SetGroupQuotaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.SetGroupQuotaResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/hook": {
            "get": {
                "description": "List hooks.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "list hooks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListHooksResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new hook.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post hook",
                "parameters": [
                    {
                        "description": "Host Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateHookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/hook/{hook}": {
            "get": {
                "description": "List a hook.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get a hook",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hook ID",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListHookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a hook.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete hook",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hook ID",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a hook.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "update hook",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hook id",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hook Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateHookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/hook/{hook}/lock": {
            "patch": {
                "description": "Lock a hook.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "lock a hook",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hook id",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Lock Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.LockHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.LockHookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/hook/{hook}/log": {
            "get": {
                "description": "List hook logs.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "list hook logs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hook ID",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Minimum Date",
                        "name": "min",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Maximum Date",
                        "name": "max",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListHookLogResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/hook/{hook}/name": {
            "patch": {
                "description": "Rename a hook.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch hook name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hook id",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hook Name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameHookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/hook/{hook}/retry": {
            "patch": {
                "description": "Retry a hook.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "retry a hook",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hook id",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Retry Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RetryHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RetryHookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/hook/{hook}/unlock": {
            "patch": {
                "description": "Unlock a hook.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "unlock a hook",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hook id",
                        "name": "hook",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Unlock Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UnlockHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UnlockHookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/host": {
            "get": {
                "description": "Get hosts.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get hosts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListHostsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image": {
            "get": {
                "description": "List images.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "list images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListImagesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new image.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post image",
                "parameters": [
                    {
                        "description": "Image Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image/{image}": {
            "get": {
                "description": "List image.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "list image",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Image ID",
                        "name": "image",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an image.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "image",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an image.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "update image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image/{image}/clone": {
            "post": {
                "description": "Clone an image.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "clone image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CloneImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CloneImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image/{image}/enable": {
            "patch": {
                "description": "Enable an image.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "enable image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.EnableImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.EnableImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image/{image}/lock": {
            "patch": {
                "description": "Lock an image.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "lock image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.LockImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.LockImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image/{image}/name": {
            "patch": {
                "description": "Rename an image.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "rename image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image/{image}/ownership": {
            "patch": {
                "description": "Change image ownership.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change image ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeImageOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeImageOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image/{image}/permissions": {
            "patch": {
                "description": "Change image permissions.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change image permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeImagePermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeImagePermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image/{image}/persistent": {
            "patch": {
                "description": "Set image persistent.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "set image persistent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.SetImagePersistentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.SetImagePersistentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image/{image}/snapshot/{snapshot}": {
            "delete": {
                "description": "Delete an image snapshot.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete image snapshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Snapshot ID",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image/{image}/snapshot/{snapshot}/flatten": {
            "patch": {
                "description": "Flatten an image snapshot.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "flatten image snapshot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "snapshot id",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.FlattenImageSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image/{image}/snapshot/{snapshot}/revert": {
            "patch": {
                "description": "Revert an image snapshot.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "revert image snapshot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "snapshot id",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RevertImageSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image/{image}/type": {
            "patch": {
                "description": "Change image type.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change image type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeImageTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeImageTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/image/{image}/unlock": {
            "patch": {
                "description": "Unlock an image.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "unlock image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "image id",
                        "name": "image",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UnlockImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance": {
            "get": {
                "description": "Returns a list of instances.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get instance list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma separated list of instance IDs",
                        "name": "instance",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "State of instances to return",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Return extended information",
                        "name": "extended",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cloud.ListInstancesResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Allocates a new instance in HyperCloud.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post an instance",
                "parameters": [
                    {
                        "description": "Instance Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance-group": {
            "get": {
                "description": "Get a list of instance groups.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get instance groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListInstanceGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an instance group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post instance group",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateInstanceGroupRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance-group/{group}": {
            "get": {
                "description": "Get an instance group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get instance group",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "decrypt",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "vmgroup id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListInstanceGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an instance group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete instance group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an instance group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Instance Group Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateInstanceGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateInstanceGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance-group/{group}/lock": {
            "patch": {
                "description": "Lock an instance group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "lock instance group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VMGroup Lock",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.LockInstanceGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.LockInstanceGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance-group/{group}/name": {
            "patch": {
                "description": "Rename an instance group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance group name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Instance Group Name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameInstanceGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameInstanceGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance-group/{group}/ownership": {
            "patch": {
                "description": "Change the ownership of an instance group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance group ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Instance Group Ownership",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeInstanceGroupOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeInstanceGroupOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance-group/{group}/permissions": {
            "patch": {
                "description": "Change the permissions of an instance group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance group permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Instance Group Permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeInstanceGroupPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeInstanceGroupPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance-group/{group}/unlock": {
            "patch": {
                "description": "Unlock an instance group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "unlock instance group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UnlockInstanceGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/accounting": {
            "get": {
                "description": "Returns a list of instances with accounting information.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get instance accounting list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Start time",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "End time",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListInstancesAccountingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/monitoring": {
            "get": {
                "description": "Returns a list of instances with monitoring information.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get instance monitoring list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Get monitoring information for the last N seconds",
                        "name": "seconds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListInstancesMonitoringResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/showback": {
            "get": {
                "description": "Returns a list of instances showback information.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get instance showback list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Starting Month",
                        "name": "month-start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ending Month",
                        "name": "month-end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Starting Year",
                        "name": "year-start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ending Year",
                        "name": "year-end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListInstancesShowbackResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Calculates the showback for the time period.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post instance showback",
                "parameters": [
                    {
                        "description": "Time Period",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CalculateInstancesShowbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}": {
            "get": {
                "description": "Retrieves information for a given instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get an instance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/action": {
            "patch": {
                "description": "Submits an action to be performed on an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch an instance action",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Instance Action",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.SetInstanceActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.SetInstanceActionResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/config": {
            "patch": {
                "description": "Updates (appends) a set of supported configuration attributes in the instance template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Config Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateInstanceConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateInstanceConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/deploy": {
            "patch": {
                "description": "Deploys the instance of the given id on the target host.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch an instance deployment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Instance Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.DeployInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.DeployInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/disk": {
            "post": {
                "description": "Attaches a new disk for the instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post an instance disk",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disk Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateInstanceDiskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateInstanceDiskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/disk/{disk}": {
            "delete": {
                "description": "Detaches a disk from the instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete instance disk",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Disk ID",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/disk/{disk}/image": {
            "post": {
                "description": "Sets the disk to be saved in the given image.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post an instance disk image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Disk ID",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disk Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateInstanceDiskImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateInstanceDiskImageResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/disk/{disk}/size": {
            "patch": {
                "description": "Resizes a disk for an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance disk size",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "disk id",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disk Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ResizeInstanceDiskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ResizeInstanceDiskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/disk/{disk}/snapshot": {
            "post": {
                "description": "Takes a snapshot of the disk image.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post an instance disk snapshot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Disk ID",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disk Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateInstanceDiskSnapshotRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateInstanceDiskSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/disk/{disk}/snapshot/{snapshot}": {
            "delete": {
                "description": "Deletes a disk snapshot.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete an instance disk snapshot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Disk ID",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Snapshot ID",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/disk/{disk}/snapshot/{snapshot}/name": {
            "patch": {
                "description": "Renames a disk snapshot.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch snapshot name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "disk id",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "snapshot id",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Snapshot Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameInstanceDiskSnapshotRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameInstanceDiskSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/disk/{disk}/snapshot/{snapshot}/revert": {
            "patch": {
                "description": "Reverts the disk state to a previously taken snapshot.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch snapshot revert",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "disk id",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "snapshot id",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RevertInstanceDiskSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/lock": {
            "patch": {
                "description": "Locks an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance lock",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Lock Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.LockInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.LockInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/monitoring": {
            "get": {
                "description": "Retrieves monitoring information.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get an instance monitoring",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListInstanceMonitoringResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/move": {
            "patch": {
                "description": "Migrates an instance to the target host.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch an instance migration",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Move Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.MoveInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.MoveInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/name": {
            "patch": {
                "description": "Changes the name of an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rename Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/nic": {
            "post": {
                "description": "Attaches a new network interface to the instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post instance nic",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "NIC Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateInstanceNICRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateInstanceNICResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/nic/{nic}": {
            "delete": {
                "description": "Detaches a network interface from the instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete instance nic",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "NIC ID",
                        "name": "nic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/nic/{nic}/security-group": {
            "delete": {
                "description": "Detaches a security group from a network interface of an instance, if the instance is running it removes the associated rules.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete instance security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "NIC ID",
                        "name": "nic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/nic/{nic}/security-group/{sg}": {
            "post": {
                "description": "Attaches a security group to a network interface of an instance, if the instance is running it updates the associated rules.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post instance security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "network interface id",
                        "name": "nic",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "security group id",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AddInstanceSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/ownership": {
            "patch": {
                "description": "Changes the ownership of an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Ownership Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeInstanceOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeInstanceOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/permissions": {
            "patch": {
                "description": "Changes the permissions of an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permissions Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeInstancePermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeInstancePermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/recover": {
            "patch": {
                "description": "Recovers a stuck instance that is waiting for a driver operation. The recovery may be done by failing or succeeding the pending operation. You need to manually check the instance status on the host, to decide if the operation succeeded.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance recover",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Recover Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RecoverInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RecoverInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/schedule": {
            "post": {
                "description": "Adds a schedule to an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post instance schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schedule Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.AddInstanceScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AddInstanceScheduleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a schedule for an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schedule Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateInstanceScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateInstanceScheduleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/schedule/{action}": {
            "delete": {
                "description": "Deletes a schedule from an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete instance schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Action ID",
                        "name": "action",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/size": {
            "patch": {
                "description": "Changes the capacity of an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance size",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resize Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ResizeInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ResizeInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/snapshot": {
            "post": {
                "description": "Creates a snapshot of an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post instance snapshot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Snapshot Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateInstanceSnapshotRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateInstanceSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/snapshot/{snapshot}": {
            "delete": {
                "description": "Deletes a snapshot of an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete instance snapshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Snapshot ID",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/snapshot/{snapshot}/revert": {
            "patch": {
                "description": "Reverts an instance to a snapshot.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance snapshot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "snapshot id",
                        "name": "snapshot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RevertInstanceSnapshotResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/template": {
            "patch": {
                "description": "Replaces the user template contents of an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateInstanceTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateInstanceTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/unlock": {
            "patch": {
                "description": "Unlocks an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch instance unlock",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UnlockInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/instance/{instance}/vnc": {
            "post": {
                "description": "Establish a VNC proxy that drives the console for an instance.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post a VNC proxy that drives the console for an instance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Instance ID",
                        "name": "instance",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Zone",
                        "name": "zone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateVNCProxyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateVNCProxyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market": {
            "get": {
                "description": "Retrieves information for all or part of the marketplaces in the pool.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get markets info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListMarketsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Allocates a new marketplace.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post market",
                "parameters": [
                    {
                        "description": "Marketplace Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateMarketRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateMarketResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/app": {
            "get": {
                "description": "Retrieves information for all or part of the marketplace apps in the pool.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get market apps info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter flag",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "start",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "end",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListMarketAppsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/app/{app}": {
            "get": {
                "description": "Retrieves information for the marketplace app.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get market app info",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the given marketplace app from the pool.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete marketplace app",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Market ID",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Replaces the marketplace app template contents.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "update marketplace app",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MarketApp Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateMarketAppRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/app/{app}/enable": {
            "patch": {
                "description": "Enables or disables a marketplace app.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "enable marketplace app",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enable App Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.EnableMarketAppRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.EnableMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/app/{app}/lock": {
            "patch": {
                "description": "Locks a MarketPlaceApp. Lock certain actions depending on blocking level.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "lock market app",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Lock App Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.LockMarketAppRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.LockMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/app/{app}/name": {
            "patch": {
                "description": "Renames a marketplace app.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch market app name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Name Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameMarketAppRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/app/{app}/ownership": {
            "patch": {
                "description": "Changes the ownership of a marketplace app.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch market app ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Ownership Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeMarketAppOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeMarketAppOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/app/{app}/permissions": {
            "patch": {
                "description": "Changes the permission bits of a marketplace app.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change market app permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permissions Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeMarketAppPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeMarketAppPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/app/{app}/unlock": {
            "patch": {
                "description": "Unlocks a MarketPlaceApp.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "unlock market app",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "app",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UnlockMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/{market}": {
            "get": {
                "description": "Retrieves information for the marketplace.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get market info",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "market",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListMarketResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the given market from the pool.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete market",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Market ID",
                        "name": "market",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Replaces the marketplace template contents.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "update market",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market id",
                        "name": "market",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Market Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateMarketRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateMarketResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/{market}/app/": {
            "post": {
                "description": "Allocates a new marketplace app.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post marketapp",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market id",
                        "name": "market",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Marketplace Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateMarketAppRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateMarketAppResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/{market}/enable": {
            "patch": {
                "description": "Enable/disable the Marketplace.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "enable market",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market id",
                        "name": "market",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enable Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.EnableMarketRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.EnableMarketResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/{market}/name": {
            "patch": {
                "description": "Renames a marketplace.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch market name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market id",
                        "name": "market",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Name Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameMarketRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameMarketResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/{market}/ownership": {
            "patch": {
                "description": "Changes the ownership of a marketplace.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch market ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market id",
                        "name": "market",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Ownership Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeMarketOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeMarketOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/market/{market}/permissions": {
            "patch": {
                "description": "Changes the permission bits of a marketplace.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change market permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market id",
                        "name": "market",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permissions Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeMarketPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeMarketPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/security-group/{sg}": {
            "patch": {
                "description": "Replaces the security group template contents.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "replaces the security group template contents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sg id",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Security Group",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateSecurityGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/security-group/{sg}/chmod": {
            "patch": {
                "description": "Changes the permission bits of a security group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "changes the permission bits of a security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sg id",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeSecurityGroupPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeSecurityGroupPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/security-group/{sg}/chown": {
            "patch": {
                "description": "Changes the ownership of a security group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "changes the ownership of a security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sg id",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New user and group",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeSecurityGroupOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeSecurityGroupOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/security-group/{sg}/commit": {
            "patch": {
                "description": "Commit security group changes to associated VMs. This is\nintended for retrying updates of VMs or reinitialize the updating process if\none stopped or failed after a one.secgroup.update call.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "Commit security group changes to associated VMs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sg id",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Security group ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CommitSecurityGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CommitSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/security-group/{sg}/rename": {
            "patch": {
                "description": "Renames a security group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "renames a security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "sg id",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Security Group name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameSecurityGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/sg": {
            "post": {
                "description": "Create a new security group in HyperCloud.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "create a new security group",
                "parameters": [
                    {
                        "description": "Security Group",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateSecurityGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/sg/": {
            "get": {
                "description": "retrieves information for all or part of the security\ngroups in the pool.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "retrieves information for subset of security groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListSecurityGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/sg/{sg}": {
            "get": {
                "description": "Retrieves information for the security group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "retrieves information for the security group",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Security group ID",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the given security group from the pool.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete a security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/sg/{sg}/clone": {
            "post": {
                "description": "Clones an existing security group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "clones an existing security group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "sg",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cloned group",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CloneSecurityGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CloneSecurityGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/disk": {
            "get": {
                "description": "Get disk information for all hosts",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "Get all disk info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/git_softiron_com_sw_hc_sifi_git_internal_sic.ListHostsDisksResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/host": {
            "get": {
                "description": "Returns a list of hosts across the entire cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "List all hosts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/git_softiron_com_sw_hc_sifi_git_internal_sic.ListStorageHostsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/host/{id}/": {
            "get": {
                "description": "Returns the details of the host with the given ID.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "Get a single host",
                "parameters": [
                    {
                        "type": "string",
                        "description": "host id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sicontrol.MachineInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/host/{id}/disk": {
            "get": {
                "description": "Returns a list of disks inside a host.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "List all disks in a host",
                "parameters": [
                    {
                        "type": "string",
                        "description": "host id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/git_softiron_com_sw_hc_sifi_git_internal_sic.ListHostDisksResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/host/{id}/disk/{disk}": {
            "get": {
                "description": "Returns the details of the disk with the given ID.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "Get a single disk",
                "parameters": [
                    {
                        "type": "string",
                        "description": "host id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "disk id",
                        "name": "disk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/git_softiron_com_sw_hc_sifi_git_internal_sic.ListHostDiskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/host/{id}/volgroup": {
            "get": {
                "description": "Returns a list of volume groups inside a host.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "List all VGs in a host",
                "parameters": [
                    {
                        "type": "string",
                        "description": "host id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/git_softiron_com_sw_hc_sifi_git_internal_sic.ListHostVolumeGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/host/{id}/volgroup/{vg}": {
            "get": {
                "description": "Returns the details of the volume group with the given name.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "Get a single VG",
                "parameters": [
                    {
                        "type": "string",
                        "description": "host id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "volume group name",
                        "name": "vg",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/git_softiron_com_sw_hc_sifi_git_internal_sic.ListHostVolumeGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/osd/": {
            "get": {
                "description": "Returns a list of OSDs across the entire cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "List all OSDs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.ListOSDsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/osd/{id}": {
            "get": {
                "description": "Returns the details of the osd with the given ID.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "Get a single OSD",
                "parameters": [
                    {
                        "type": "string",
                        "description": "osd id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.ListOSDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/pool": {
            "get": {
                "description": "Returns a list of pools across the entire cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "List all pools",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.ListPoolsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/pool/{id}": {
            "get": {
                "description": "Returns the details of the pool with the given ID.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "Get a single pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pool id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.ListPoolResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/share/rbd": {
            "get": {
                "description": "Returns a list of RBDs across the entire cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "List all RBDs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.ListShareRBDsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/share/rbd/{id}/": {
            "get": {
                "description": "Returns the details of the RBD with the given ID.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "Get a single RBD",
                "parameters": [
                    {
                        "type": "string",
                        "description": "rbd id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.ListShareRBDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/storage/summary": {
            "get": {
                "description": "Returns summary information about the Ceph cluster./",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "Get a summary of the cluster",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.ListSummaryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/system/config": {
            "get": {
                "description": "Return the HyperCloud configuration.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "returns the HyperCloud configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListSystemConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/system/version": {
            "get": {
                "description": "Return the HyperCloud version.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "returns the HyperCloud core version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListSystemVersionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/template": {
            "get": {
                "description": "Retrieves information for all or part of the Resources in the pool.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "list templates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListTemplatesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Allocates a new template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post template",
                "parameters": [
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/template/{template}": {
            "get": {
                "description": "Retrieves information for the template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "list a template",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the given template from the pool.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete template",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Delete disk",
                        "name": "disk",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.DeleteTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Replaces the template contents.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "update template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/template/{template}/clone": {
            "post": {
                "description": "Clones an existing virtual machine template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "clone template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CloneTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CloneTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/template/{template}/instantiate": {
            "patch": {
                "description": "Instantiates a new virtual machine from a template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "instantiate template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.InstantiateTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.InstantiateTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/template/{template}/lock": {
            "patch": {
                "description": "Locks a Template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "lock a template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Templates",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.LockTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.LockTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/template/{template}/name": {
            "patch": {
                "description": "Renames a template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "rename template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/template/{template}/ownership": {
            "patch": {
                "description": "Changes the ownership of a template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change template ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeTemplateOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeTemplateOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/template/{template}/permissions": {
            "patch": {
                "description": "Changes the permission bits of a template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change template permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeTemplatePermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeTemplatePermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/template/{template}/unlock": {
            "patch": {
                "description": "Unlocks a Template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "unlock a template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UnlockTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/user": {
            "get": {
                "description": "Retrieves information for the user.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "retrieves information for the user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new user account.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "create new user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/user/login": {
            "post": {
                "description": "Generate or set user login token.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "set user login token",
                "parameters": [
                    {
                        "description": "User login",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UserLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/user/quota": {
            "get": {
                "description": "Returns the default user quota limits.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "returns the default user quota limits",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListUserQuotaResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the default user quota limits.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "updates the default user quota limits",
                "parameters": [
                    {
                        "description": "Default user quota",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateDefaultUserQuotaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateDefaultUserQuotaResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/user/{user}": {
            "get": {
                "description": "Retrieves information for the user.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "retrieves information for the user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an user.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update user data.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/user/{user}/auth": {
            "patch": {
                "description": "Changes the authentication driver and the password for the given user.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change authentication driver and password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "authentication driver",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeUserAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeUserAuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/user/{user}/enable": {
            "patch": {
                "description": "Enables or disables an user.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "enables or disables an user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enable",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.EnableUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.EnableUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/user/{user}/group/{group}": {
            "post": {
                "description": "Adds the User to a secondary group..",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "adds the User to a secondary group.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AddUserGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes user from a secondary group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "remove user from group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Changes the group of the given user.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "changes the group of the given user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeUserGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/user/{user}/password": {
            "patch": {
                "description": "Set new user password.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "set user password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User password",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeUserPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeUserPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/user/{user}/quota": {
            "post": {
                "description": "Sets the user quota limits.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "sets the user quota limits",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "user quota",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.SetUserQuotaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.SetUserQuotaResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vdc": {
            "get": {
                "description": "List all vdcs.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get vdcs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListVDCsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a vdc.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post vdc",
                "parameters": [
                    {
                        "description": "VDC Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateVDCRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateVDCResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vdc/{vdc}": {
            "get": {
                "description": "List a vdc.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get vdc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListVDCResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a vdc.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete vdc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a vdc.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "update vdc",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VDC Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateVDCRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateVDCResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vdc/{vdc}/group/{group}": {
            "delete": {
                "description": "Remove a vdc group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "remove vdc group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Add a vdc group.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "add vdc group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "group",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AddVDCGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vdc/{vdc}/name": {
            "patch": {
                "description": "Rename a vdc.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "rename vdc",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VDC Name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameVDCRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameVDCResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vdc/{vdc}/zone/{zone}/cluster/{cluster}": {
            "delete": {
                "description": "Remove a vdc cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "remove vdc cluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Cluster ID",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Add a vdc cluster.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "add vdc cluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "cluster id",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AddVDCClusterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vdc/{vdc}/zone/{zone}/datastore/{datastore}": {
            "delete": {
                "description": "Remove a vdc datastore.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "remove vdc datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Datastore ID",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Add a vdc datastore.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "add vdc datastore",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "datastore id",
                        "name": "datastore",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AddVDCDatastoreResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vdc/{vdc}/zone/{zone}/host/{host}": {
            "delete": {
                "description": "Remove a vdc host.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "remove vdc host",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Host ID",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Add a vdc host.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "add vdc host",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "host id",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AddVDCHostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vdc/{vdc}/zone/{zone}/network/{network}": {
            "delete": {
                "description": "Remove a vdc network.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "remove vdc network",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VDC ID",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Network ID",
                        "name": "network",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Add a vdc network.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "add vdc network",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vdc id",
                        "name": "vdc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "network id",
                        "name": "network",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AddVDCNetworkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet": {
            "get": {
                "description": "List virtual networks.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get vnets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListVNetsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a vnet.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post vnet",
                "parameters": [
                    {
                        "description": "VNet Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateVNetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/template": {
            "post": {
                "description": "Create a virtual network template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "create vnet template",
                "parameters": [
                    {
                        "description": "VNet Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateVNetTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/template/{template}": {
            "get": {
                "description": "List virtual network template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "list vnet template",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a virtual network template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete vnet template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/template/{template}/clone": {
            "post": {
                "description": "Clone a virtual network template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "clone vnet template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CloneVNetTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CloneVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/template/{template}/instantiate": {
            "patch": {
                "description": "Instantiate a virtual network template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "instantiate vnet template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.InstantiateVNetTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.InstantiateVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/template/{template}/lock": {
            "patch": {
                "description": "Lock a virtual network template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "lock vnet template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Lock",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.LockVNetTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.LockVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/template/{template}/name": {
            "patch": {
                "description": "Rename a virtual network template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "rename vnet template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Rename",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameVNetTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/template/{template}/owner": {
            "patch": {
                "description": "Change the owner of a virtual network template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change vnet template owner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Owner",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeVNetTemplateOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeVNetTemplateOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/template/{template}/permissions": {
            "patch": {
                "description": "Change the permissions of a virtual network template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change vnet template permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeVNetTemplatePermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeVNetTemplatePermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/template/{template}/unlock": {
            "patch": {
                "description": "Unlock a virtual network template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "unlock vnet template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "template id",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UnlockVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/templates": {
            "get": {
                "description": "Get a list of virtual network templates.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get vnet templates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}": {
            "get": {
                "description": "List a virtual network.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VNet ID",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListVNetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a vnet.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete vnet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VNet ID",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a vnet.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "update vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateVNetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}/address-range": {
            "post": {
                "description": "Add an address range to a vnet.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "add address range",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VNet ID",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Address Range",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.AddVNetAddressRangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.AddVNetAddressRangeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an address range in a vnet.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "update address range",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Address Range",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateVNetAddressRangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateVNetAddressRangeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}/address-range/{ar}": {
            "delete": {
                "description": "Delete an address range from a vnet.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete address range",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "VNet ID",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Address Range ID",
                        "name": "ar",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Force delete",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}/address-range/{ar}/free": {
            "delete": {
                "description": "Free a reserved address range from a vnet.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "free address range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VNet ID",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Address Range ID",
                        "name": "ar",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}/hold": {
            "patch": {
                "description": "Holds a virtual network lease as used.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "hold vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Hold",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.HoldVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.HoldVNetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}/lock": {
            "patch": {
                "description": "Lock a virtual network.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "lock vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Lock",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.LockVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.LockVNetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}/name": {
            "patch": {
                "description": "Rename a vnet.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Rename",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameVNetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}/ownership": {
            "patch": {
                "description": "Change ownership on a vnet.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Ownership",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeVNetOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeVNetOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}/permissions": {
            "patch": {
                "description": "Change permissions on a vnet.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "patch permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeVNetPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeVNetPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}/recover": {
            "patch": {
                "description": "Recover a virtual network.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "recover vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Recover",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RecoverVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RecoverVNetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}/release": {
            "patch": {
                "description": "Releases a virtual network lease on hold.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "release vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Release",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ReleaseVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ReleaseVNetResponse"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}/reserve": {
            "post": {
                "description": "Reserve a vnet.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "reserve vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Reservation",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ReserveVNetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ReserveVNetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}/template/update": {
            "patch": {
                "description": "Update a virtual network template.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "update vnet template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VNet Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateVNetTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateVNetTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vnet/{vnet}/unlock": {
            "patch": {
                "description": "Unlock a virtual network.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "unlock vnet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vnet id",
                        "name": "vnet",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UnlockVNetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vrouter": {
            "get": {
                "description": "List virtual routers",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get vrouters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListVRoutersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a virtual router",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post vrouter",
                "parameters": [
                    {
                        "description": "VRouter Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateVRouterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vrouter/{router}": {
            "get": {
                "description": "List a virtual router",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get vrouter",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "VRouter ID",
                        "name": "router",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a virtual router",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete vrouter",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Delete disk",
                        "name": "disk",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "VRouter ID",
                        "name": "router",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a virtual router",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "update vrouter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateVRouterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vrouter/{router}/instantiate": {
            "patch": {
                "description": "Instantiate a virtual router",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "instantiate vrouter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.InstantiateVRouterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.InstantiateVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vrouter/{router}/lock": {
            "patch": {
                "description": "Lock a virtual router",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "lock vrouter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter Lock",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.LockVRouterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.LockVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vrouter/{router}/name": {
            "patch": {
                "description": "Rename a virtual router",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "rename vrouter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter Rename",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameVRouterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vrouter/{router}/nic": {
            "post": {
                "description": "Add a NIC to a virtual router",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "add vrouter nic",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "virtual router ID",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter NIC",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateVRouterNICRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateVRouterNICResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vrouter/{router}/nic/{nic}": {
            "delete": {
                "description": "Remove a NIC from a virtual router",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "remove vrouter nic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VRouter ID",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NIC ID",
                        "name": "nic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vrouter/{router}/ownership": {
            "patch": {
                "description": "Change a virtual router ownership",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change vrouter ownership",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter Ownership",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeVRouterOwnershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeVRouterOwnershipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vrouter/{router}/permissions": {
            "patch": {
                "description": "Change a virtual router permissions",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "change vrouter permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VRouter Permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeVRouterPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ChangeVRouterPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/vrouter/{router}/unlock": {
            "patch": {
                "description": "Unlock a virtual router.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "unlock vrouter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "router id",
                        "name": "router",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UnlockVRouterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/zone": {
            "get": {
                "description": "List all zones.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get zones",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListZonesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a zone.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "post zone",
                "parameters": [
                    {
                        "description": "Zone Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateZoneRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.CreateZoneResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/zone/raft": {
            "get": {
                "description": "Get zone raft status.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get zone raft status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListZonesRaftStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/zone/{zone}": {
            "get": {
                "description": "Get a zone.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "get zone",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Decrypt secrets",
                        "name": "decrypt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.ListZoneResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a zone.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "delete zone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Zone ID",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a zone.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "update zone",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Zone Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateZoneRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.UpdateZoneResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/zone/{zone}/enable": {
            "patch": {
                "description": "Enable a zone.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "enable zone",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Zone Enable",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.EnableZoneRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.EnableZoneResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/zone/{zone}/name": {
            "patch": {
                "description": "Rename a zone.",
                "tags": [
                    "default",
                    "v2"
                ],
                "summary": "rename zone",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "zone id",
                        "name": "zone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Zone Name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameZoneRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cloud.RenameZoneResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/cloud.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "cloud.ACL": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "resource": {
                    "description": "32 bits                 32 bits\n +-----------------------+-----------------------+\n | Type (VM, Host...)    | resource ID           |\n +-----------------------+-----------------------+",
                    "type": "integer"
                },
                "rights": {
                    "description": "64 bits\n +-----------------------------------------------+\n | Actions (MANAGE, CREATE, USE...               |\n +-----------------------------------------------+",
                    "type": "integer"
                },
                "string": {
                    "type": "string"
                },
                "user": {
                    "description": "32 bits                 32 bits\n +-----------------------+-----------------------+\n | Type (user,group,all) | user/group ID         |\n +-----------------------+-----------------------+",
                    "type": "integer"
                },
                "zone": {
                    "description": "32 bits                 32 bits\n +-----------------------+-----------------------+\n | Type (individual,all) | zone ID               |\n +-----------------------+-----------------------+",
                    "type": "integer"
                }
            }
        },
        "cloud.AcctHistory": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/instance.Action"
                },
                "cluster_id": {
                    "type": "integer"
                },
                "datastore_id": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "epilog_end_time": {
                    "type": "string"
                },
                "epilog_start_time": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "host_id": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "instance": {
                    "$ref": "#/definitions/cloud.Instance"
                },
                "instance_mad": {
                    "type": "string"
                },
                "prolog_end_time": {
                    "type": "string"
                },
                "prolog_start_time": {
                    "type": "string"
                },
                "request_id": {
                    "type": "integer"
                },
                "running_end_time": {
                    "type": "string"
                },
                "running_start_time": {
                    "type": "string"
                },
                "sequence_number": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "transfer_manager_mad": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddClusterDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddClusterHostResponse": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddClusterNetworkResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddGroupAdminRequest": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddGroupAdminResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddInstanceScheduleRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.AddInstanceScheduleResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddInstanceSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddUserGroupResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddVDCClusterResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddVDCDatastoreResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddVDCGroupResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddVDCHostResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddVDCNetworkResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "cloud.AddVNetAddressRangeRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.AddVNetAddressRangeResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.AllocateDocumentRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "cloud.AllocateDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "cloud.CalculateInstancesShowbackRequest": {
            "type": "object",
            "properties": {
                "month": {
                    "$ref": "#/definitions/cloud.Period"
                },
                "year": {
                    "$ref": "#/definitions/cloud.Period"
                }
            }
        },
        "cloud.Capacity": {
            "type": "object",
            "properties": {
                "free_cpu": {
                    "type": "integer"
                },
                "free_memory": {
                    "type": "integer"
                },
                "used_cpu": {
                    "type": "integer"
                },
                "used_memory": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeDatastoreOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeDatastoreOwnershipResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeDatastorePermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "cloud.ChangeDatastorePermissionsResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeDocumentOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeDocumentOwnershipResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeDocumentPermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "cloud.ChangeDocumentPermissionsResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeImageOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeImageOwnershipResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeImagePermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "cloud.ChangeImagePermissionsResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeImageTypeRequest": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "cloud.ChangeImageTypeResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeInstanceGroupOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeInstanceGroupOwnershipResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeInstanceGroupPermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "cloud.ChangeInstanceGroupPermissionsResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeInstanceOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeInstanceOwnershipResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeInstancePermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "cloud.ChangeInstancePermissionsResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeMarketAppOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeMarketAppOwnershipResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeMarketAppPermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "cloud.ChangeMarketAppPermissionsResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeMarketOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeMarketOwnershipResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeMarketPermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "cloud.ChangeMarketPermissionsResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeSecurityGroupOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeSecurityGroupOwnershipResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeSecurityGroupPermissionsRequest": {
            "type": "object",
            "properties": {
                "perms": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "cloud.ChangeSecurityGroupPermissionsResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeTemplateOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeTemplateOwnershipResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeTemplatePermissionsRequest": {
            "type": "object",
            "properties": {
                "disk": {
                    "type": "boolean"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "cloud.ChangeTemplatePermissionsResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeUserAuthRequest": {
            "type": "object",
            "properties": {
                "driver": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "cloud.ChangeUserAuthResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeUserGroupResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeUserPasswordRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "cloud.ChangeUserPasswordResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeVNetOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeVNetOwnershipResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeVNetPermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "cloud.ChangeVNetPermissionsResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeVNetTemplateOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeVNetTemplateOwnershipResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeVNetTemplatePermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "cloud.ChangeVNetTemplatePermissionsResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeVRouterOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeVRouterOwnershipResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "cloud.ChangeVRouterPermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "cloud.ChangeVRouterPermissionsResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "cloud.CloneDocumentRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.CloneDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "cloud.CloneImageRequest": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.CloneImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "cloud.CloneSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.CloneSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "cloud.CloneTemplateRequest": {
            "type": "object",
            "properties": {
                "disk": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.CloneTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.CloneVNetTemplateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.CloneVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.Cluster": {
            "type": "object",
            "properties": {
                "datastores": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "template": {
                    "$ref": "#/definitions/cloud.ClusterTemplate"
                },
                "vnets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "cloud.ClusterTemplate": {
            "type": "object",
            "properties": {
                "reserved_cpu": {
                    "type": "string"
                },
                "reserved_mem": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                }
            }
        },
        "cloud.CommitSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "boolean"
                }
            }
        },
        "cloud.CommitSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "cloud.ComputeHost": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "cluster_id": {
                    "type": "integer"
                },
                "host_share": {
                    "$ref": "#/definitions/cloud.HostShare"
                },
                "id": {
                    "type": "integer"
                },
                "information_manager_mad": {
                    "type": "string"
                },
                "instance_mad": {
                    "type": "string"
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "monitoring": {
                    "$ref": "#/definitions/cloud.HostMonitoring"
                },
                "name": {
                    "type": "string"
                },
                "prev_state": {
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/definitions/cloud.HostTemplate"
                }
            }
        },
        "cloud.Core": {
            "type": "object",
            "properties": {
                "cpus": {
                    "type": "string"
                },
                "dedicated": {
                    "type": "boolean"
                },
                "free": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateACLRequest": {
            "type": "object",
            "properties": {
                "resource": {
                    "type": "integer"
                },
                "rights": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                },
                "zone": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateACLResponse": {
            "type": "object",
            "properties": {
                "acl": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateClusterRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateClusterResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateComputeHostRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "info_manager": {
                    "type": "string"
                },
                "vm_manager": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateComputeHostResponse": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateDatastoreRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "integer"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateGroupRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateHookRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateImageRequest": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                },
                "enforce_capacity": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateInstanceDiskImageRequest": {
            "type": "object",
            "properties": {
                "image_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "snapshot": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateInstanceDiskImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateInstanceDiskRequest": {
            "type": "object",
            "properties": {
                "disk": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateInstanceDiskResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateInstanceDiskSnapshotRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateInstanceDiskSnapshotResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateInstanceGroupRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateInstanceNICRequest": {
            "type": "object",
            "properties": {
                "nic": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateInstanceNICResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "description": "TODO: would make more sense as NIC ID, maybe docs are wrong",
                    "type": "integer"
                }
            }
        },
        "cloud.CreateInstanceRequest": {
            "type": "object",
            "properties": {
                "pending": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateInstanceSnapshotRequest": {
            "type": "object",
            "properties": {
                "snapshot": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateInstanceSnapshotResponse": {
            "type": "object",
            "properties": {
                "snapshot": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateMarketAppRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateMarketAppResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateMarketRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateMarketResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateTemplateRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateUserRequest": {
            "type": "object",
            "properties": {
                "auth": {
                    "type": "string"
                },
                "gids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateVDCRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateVDCResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateVNCProxyRequest": {
            "type": "object",
            "properties": {
                "zone": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateVNCProxyResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateVNetRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "integer"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateVNetTemplateRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateVRouterNICRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateVRouterNICResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateVRouterRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateVRouterResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "cloud.CreateZoneRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.CreateZoneResponse": {
            "type": "object",
            "properties": {
                "zone": {
                    "type": "integer"
                }
            }
        },
        "cloud.Datastore": {
            "type": "object",
            "properties": {
                "base_path": {
                    "type": "string"
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "datastore_mad": {
                    "type": "string"
                },
                "disk_type": {
                    "type": "integer"
                },
                "free_mb": {
                    "type": "integer"
                },
                "group_id": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/cloud.Permissions"
                },
                "state": {
                    "$ref": "#/definitions/cloud.DatastoreState"
                },
                "template": {
                    "$ref": "#/definitions/cloud.DatastoreTemplate"
                },
                "total_mb": {
                    "type": "integer"
                },
                "transfer_manager_mad": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/cloud.DatastoreType"
                },
                "used_mb": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "cloud.DatastoreState": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-comments": {
                "DatastoreDisabled": "disabled",
                "DatastoreReady": "ready"
            },
            "x-enum-varnames": [
                "DatastoreReady",
                "DatastoreDisabled"
            ]
        },
        "cloud.DatastoreTemplate": {
            "type": "object",
            "properties": {
                "allow_orphans": {
                    "type": "string"
                },
                "bridge_list": {
                    "type": "string"
                },
                "clone_target": {
                    "type": "string"
                },
                "clone_target_shared": {
                    "type": "string"
                },
                "clone_target_ssh": {
                    "type": "string"
                },
                "disk_type": {
                    "type": "string"
                },
                "disk_type_shared": {
                    "type": "string"
                },
                "disk_type_ssh": {
                    "type": "string"
                },
                "driver": {
                    "type": "string"
                },
                "ds_mad": {
                    "type": "string"
                },
                "ds_migrate": {
                    "type": "boolean"
                },
                "ln_target": {
                    "type": "string"
                },
                "ln_target_shared": {
                    "type": "string"
                },
                "ln_target_ssh": {
                    "type": "string"
                },
                "pool_name": {
                    "type": "string"
                },
                "restricted_dirs": {
                    "type": "string"
                },
                "safe_dirs": {
                    "type": "string"
                },
                "shared": {
                    "type": "boolean"
                },
                "staging_dir": {
                    "type": "string"
                },
                "tm_mad": {
                    "type": "string"
                },
                "tm_mad_system": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                },
                "vcenter_dc_name": {
                    "type": "string"
                },
                "vcenter_dc_ref": {
                    "type": "string"
                },
                "vcenter_ds_name": {
                    "type": "string"
                },
                "vcenter_ds_ref": {
                    "type": "string"
                },
                "vcenter_host": {
                    "type": "string"
                },
                "vcenter_instance_id": {
                    "type": "string"
                }
            }
        },
        "cloud.DatastoreType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-comments": {
                "DatastoreFile": "file",
                "DatastoreImage": "image",
                "DatastoreSystem": "system"
            },
            "x-enum-varnames": [
                "DatastoreImage",
                "DatastoreSystem",
                "DatastoreFile"
            ]
        },
        "cloud.Datastores": {
            "type": "object",
            "properties": {
                "disk_usage": {
                    "type": "integer"
                },
                "free_disk": {
                    "type": "integer"
                },
                "max_disk": {
                    "type": "integer"
                },
                "used_disk": {
                    "type": "integer"
                }
            }
        },
        "cloud.DeleteTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.DeployInstanceRequest": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                },
                "enforce": {
                    "type": "boolean"
                },
                "host": {
                    "type": "integer"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.DeployInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.Document": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lock": {
                    "$ref": "#/definitions/cloud.Lock"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/cloud.Permissions"
                },
                "template": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "cloud.EnableDatastoreRequest": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "cloud.EnableDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "cloud.EnableImageRequest": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "cloud.EnableImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "cloud.EnableMarketAppRequest": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "cloud.EnableMarketAppResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "cloud.EnableMarketRequest": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "cloud.EnableMarketResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "cloud.EnableUserRequest": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "cloud.EnableUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.EnableZoneRequest": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "cloud.EnableZoneResponse": {
            "type": "object",
            "properties": {
                "zone": {
                    "type": "integer"
                }
            }
        },
        "cloud.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "cloud.FlattenImageSnapshotResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "cloud.Group": {
            "type": "object",
            "properties": {
                "admins": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "datastore_quota": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.UserDatastore"
                    }
                },
                "default_group_quotas": {
                    "$ref": "#/definitions/cloud.UserDefaultQuotas"
                },
                "id": {
                    "type": "integer"
                },
                "image_quota": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.UserImage"
                    }
                },
                "instance_quota": {
                    "$ref": "#/definitions/cloud.UserInstance"
                },
                "name": {
                    "type": "string"
                },
                "network_quota": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.UserNetwork"
                    }
                },
                "template": {
                    "$ref": "#/definitions/cloud.GroupTemplate"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "cloud.GroupTemplate": {
            "type": "object",
            "properties": {
                "sunstone": {
                    "$ref": "#/definitions/cloud.SunstoneTemplate"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                }
            }
        },
        "cloud.HoldVNetRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.HoldVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.Hook": {
            "type": "object",
            "properties": {
                "hook_log": {
                    "$ref": "#/definitions/cloud.HookLog"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "template": {
                    "$ref": "#/definitions/cloud.HookTemplate"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "cloud.HookExecutionRecord": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "execution_id": {
                    "type": "integer"
                },
                "execution_result": {
                    "$ref": "#/definitions/cloud.HookExecutionResult"
                },
                "hook_id": {
                    "type": "integer"
                },
                "remote_host": {
                    "type": "string"
                },
                "retry": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "cloud.HookExecutionResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "stderr": {
                    "type": "string"
                },
                "stdout": {
                    "type": "string"
                }
            }
        },
        "cloud.HookLog": {
            "type": "object",
            "properties": {
                "execution_record": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.HookExecutionRecord"
                    }
                }
            }
        },
        "cloud.HookTemplate": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "arguments_stdin": {
                    "type": "string"
                },
                "call": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "lcm_state": {
                    "type": "string"
                },
                "remote": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "cloud.Host": {
            "type": "object",
            "properties": {
                "compute": {
                    "type": "boolean"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "static": {
                    "type": "boolean"
                },
                "storage": {
                    "type": "boolean"
                }
            }
        },
        "cloud.HostMonitoring": {
            "type": "object",
            "properties": {
                "capacity": {
                    "$ref": "#/definitions/cloud.Capacity"
                },
                "id": {
                    "type": "integer"
                },
                "system": {
                    "$ref": "#/definitions/cloud.System"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "cloud.HostShare": {
            "type": "object",
            "properties": {
                "cpuusage": {
                    "type": "integer"
                },
                "datastores": {
                    "$ref": "#/definitions/cloud.Datastores"
                },
                "instances_thread": {
                    "type": "integer"
                },
                "max_cpu": {
                    "type": "integer"
                },
                "max_mem": {
                    "type": "integer"
                },
                "mem_usage": {
                    "type": "integer"
                },
                "numa_nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.Node"
                    }
                },
                "pcidevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.PCI"
                    }
                },
                "running_instances": {
                    "type": "integer"
                },
                "total_cpu": {
                    "type": "integer"
                },
                "total_mem": {
                    "type": "integer"
                }
            }
        },
        "cloud.HostTemplate": {
            "type": "object",
            "properties": {
                "arch": {
                    "type": "string"
                },
                "cgroups_version": {
                    "type": "string"
                },
                "cpuspeed": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "hypervisor": {
                    "type": "string"
                },
                "im_mad": {
                    "type": "string"
                },
                "kvm_cpumodel": {
                    "type": "string"
                },
                "kvm_cpumodels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kvm_machines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "modelname": {
                    "type": "string"
                },
                "reserved_cpu": {
                    "type": "string"
                },
                "reserved_mem": {
                    "type": "string"
                },
                "total_wilds": {
                    "type": "integer"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                },
                "vcenter_ccrref": {
                    "type": "string"
                },
                "vcenter_dsref": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vcenter_host": {
                    "type": "string"
                },
                "vcenter_instance_id": {
                    "type": "string"
                },
                "vcenter_name": {
                    "type": "string"
                },
                "vcenter_password": {
                    "type": "string"
                },
                "vcenter_resource_pool_info": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vcenter_user": {
                    "type": "string"
                },
                "vcenter_version": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.HostTemplateInstance"
                    }
                },
                "vmmad": {
                    "type": "string"
                },
                "wilds": {
                    "type": "string"
                }
            }
        },
        "cloud.HostTemplateInstance": {
            "type": "object",
            "properties": {
                "deploy_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "monitor": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                }
            }
        },
        "cloud.HugePage": {
            "type": "object",
            "properties": {
                "free": {
                    "type": "integer"
                },
                "pages": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                }
            }
        },
        "cloud.HyperCloudConfiguration": {
            "type": "object",
            "properties": {
                "api_list_order": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "auth_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.AuthMAD"
                    }
                },
                "auth_madconf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.AuthMADConf"
                    }
                },
                "cluster_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "datastore_capacity_check": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "datastore_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "datastore_location": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "datastore_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.DatastoreMAD"
                    }
                },
                "db": {
                    "$ref": "#/definitions/config.DB"
                },
                "default_auth": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_cdrom_device_prefix": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_cost": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.DefaultCost"
                    }
                },
                "default_device_prefix": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_image_persistent": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_image_persistent_new": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_image_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_umask": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_vdccluster_datastore_acl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_vdccluster_host_acl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_vdccluster_net_acl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_vdcdatastore_acl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_vdchost_acl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_vdcvnet_acl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "document_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dsmadconf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.DSMADConf"
                    }
                },
                "dsmonitor_instance_disk": {
                    "type": "integer"
                },
                "enable_other_permissions": {
                    "type": "string"
                },
                "federation": {
                    "$ref": "#/definitions/config.Federation"
                },
                "group_restricted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hook_log_conf": {
                    "$ref": "#/definitions/config.HookLogConf"
                },
                "hook_manager_mad": {
                    "$ref": "#/definitions/config.HookManagerMAD"
                },
                "host_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "im_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.ImMAD"
                    }
                },
                "image_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "image_restricted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inherit_datastore_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inherit_image_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inherit_vnet_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instance_admin_operations": {
                    "type": "string"
                },
                "instance_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instance_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.InstanceMAD"
                    }
                },
                "instance_manage_operations": {
                    "type": "string"
                },
                "instance_monitoring_expiration_time": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instance_restricted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instance_snapshot_factor": {
                    "type": "string"
                },
                "instance_submit_on_hold": {
                    "type": "string"
                },
                "instance_use_operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipam_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.IpamMAD"
                    }
                },
                "keepalive_max_conn": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "keepalive_timeout": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "listen_address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "log": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.Log"
                    }
                },
                "log_call_format": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "macprefix": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "manager_timer": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "market_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.MarketMAD"
                    }
                },
                "market_madconf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.MarketMADConf"
                    }
                },
                "max_conn": {
                    "type": "integer"
                },
                "max_conn_backlog": {
                    "type": "integer"
                },
                "message_size": {
                    "type": "integer"
                },
                "monitoring_interval_datastore": {
                    "type": "integer"
                },
                "monitoring_interval_dbupdate": {
                    "type": "integer"
                },
                "monitoring_interval_host": {
                    "type": "integer"
                },
                "monitoring_interval_instance": {
                    "type": "integer"
                },
                "monitoring_interval_market": {
                    "type": "integer"
                },
                "network_size": {
                    "type": "integer"
                },
                "one_key": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pcipassthrough_bus": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "raft": {
                    "$ref": "#/definitions/config.Raft"
                },
                "rpclog": {
                    "type": "string"
                },
                "scripts_remote_dir": {
                    "type": "string"
                },
                "session_expiration_time": {
                    "type": "integer"
                },
                "showback_only_running": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "tm_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.TmMAD"
                    }
                },
                "tm_madconf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.TmMADConf"
                    }
                },
                "user_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_restricted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vlanids": {
                    "$ref": "#/definitions/config.VLANIDs"
                },
                "vncports": {
                    "$ref": "#/definitions/config.VNCPorts"
                },
                "vnet_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vnet_restricted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vnmadconf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.VNetMADConf"
                    }
                },
                "vxlan_ids": {
                    "$ref": "#/definitions/config.VxlanIDs"
                }
            }
        },
        "cloud.Image": {
            "type": "object",
            "properties": {
                "app_clones": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "clones": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "cloning_id": {
                    "type": "integer"
                },
                "cloning_ops": {
                    "type": "integer"
                },
                "datastore": {
                    "type": "string"
                },
                "datastore_id": {
                    "type": "integer"
                },
                "disk_type": {
                    "type": "integer"
                },
                "filesystem": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "lock": {
                    "$ref": "#/definitions/cloud.Lock"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/cloud.Permissions"
                },
                "persistent": {
                    "type": "integer"
                },
                "prev_state": {
                    "type": "integer"
                },
                "registration_time": {
                    "type": "string"
                },
                "running_instances": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "snapshots": {
                    "$ref": "#/definitions/instance.Snapshots"
                },
                "source": {
                    "type": "string"
                },
                "state": {
                    "type": "integer"
                },
                "target_snapshot": {
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/definitions/cloud.ImageTemplate"
                },
                "type": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "cloud.ImageTemplate": {
            "type": "object",
            "properties": {
                "dev_prefix": {
                    "type": "string"
                },
                "driver": {
                    "type": "string"
                },
                "from_app": {
                    "type": "string"
                },
                "from_app_md5": {
                    "type": "string"
                },
                "from_app_name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                },
                "vcenter_imported": {
                    "type": "string"
                }
            }
        },
        "cloud.Instance": {
            "type": "object",
            "properties": {
                "deploy_id": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "history_records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.History"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "last_poll": {
                    "type": "string"
                },
                "lcm_state": {
                    "$ref": "#/definitions/cloud.LCMState"
                },
                "monitoring": {
                    "$ref": "#/definitions/instance.Monitoring"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/cloud.Permissions"
                },
                "prev_lcm_state": {
                    "$ref": "#/definitions/cloud.LCMState"
                },
                "prev_state": {
                    "$ref": "#/definitions/instance.State"
                },
                "reschedule": {
                    "type": "boolean"
                },
                "snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.DiskSnapshots"
                    }
                },
                "start_time": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/instance.State"
                },
                "template": {
                    "$ref": "#/definitions/instance.Template"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "user_template": {
                    "$ref": "#/definitions/instance.UserTemplate"
                }
            }
        },
        "cloud.InstanceGroup": {
            "type": "object",
            "properties": {
                "gid": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lock": {
                    "$ref": "#/definitions/cloud.Lock"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/cloud.Permissions"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.GroupRole"
                    }
                },
                "template": {
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "cloud.InstanceTemplate": {
            "type": "object",
            "properties": {
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lock": {
                    "$ref": "#/definitions/cloud.Lock"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/cloud.Permissions"
                },
                "regtime": {
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/definitions/insttmpl.Template"
                },
                "uid": {
                    "type": "integer"
                },
                "uname": {
                    "type": "string"
                }
            }
        },
        "cloud.InstantiateTemplateRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "disk_copy": {
                    "type": "boolean"
                },
                "hold": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.InstantiateTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.InstantiateVNetTemplateRequest": {
            "type": "object",
            "properties": {
                "extra": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.InstantiateVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.InstantiateVRouterRequest": {
            "type": "object",
            "properties": {
                "extra": {
                    "type": "string"
                },
                "instance_template": {
                    "type": "integer"
                },
                "instances": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pending": {
                    "type": "boolean"
                }
            }
        },
        "cloud.InstantiateVRouterResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "cloud.LCMState": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61
            ],
            "x-enum-comments": {
                "BootFailureLCMState": "boot_failure",
                "BootLCMState": "boot",
                "BootMigrateFailureLCMState": "boot_migrate_failure",
                "BootMigrateLCMState": "boot_migrate",
                "BootPowerOffLCMState": "boot_poweroff",
                "BootStoppedFailureLCMState": "boot_stopped_failure",
                "BootStoppedLCMState": "boot_stopped",
                "BootSuspendedLCMState": "boot_suspended",
                "BootUndeployFailureLCMState": "boot_undeploy_failure",
                "BootUndeployLCMState": "boot_undeploy",
                "BootUnknownLCMState": "boot_unknown",
                "CleanupDeleteLCMState": "cleanup_delete",
                "CleanupResubmitLCMState": "cleanup_resubmit",
                "DiskSnapshotDeleteLCMState": "disk_snapshot_delete",
                "DiskSnapshotDeletePowerOffLCMState": "disk_snapshot_delete_poweroff",
                "DiskSnapshotDeleteSuspendedLCMState": "disk_snapshot_delete_suspended",
                "DiskSnapshotLCMState": "disk_snapshot",
                "DiskSnapshotPowerOffLCMState": "disk_snapshot_poweroff",
                "DiskSnapshotRevertPowerOffLCMState": "disk_snapshot_revert_poweroff",
                "DiskSnapshotRevertSuspendedLCMState": "disk_snapshot_revert_suspended",
                "DiskSnapshotSuspendLCMState": "disk_snapshot_suspend",
                "EpilogFailureLCMState": "epilog_failure",
                "EpilogLCMState": "epilog",
                "EpilogStopFailureLCMState": "epilog_stop_failure",
                "EpilogStopLCMState": "epilog_stop",
                "EpilogUndeployFailureLCMState": "epilog_undeploy_failure",
                "EpilogUndeployLCMState": "epilog_undeploy",
                "HotplugEpilogPowerOffLCMState": "hotplug_epilog_poweroff",
                "HotplugLCMState": "hotplug",
                "HotplugNICLCMState": "hotplug_nic",
                "HotplugPrologPowerOffLCMState": "hotplug_prolog_poweroff",
                "HotplugSaveAsLCMState": "hotplug_saveas",
                "HotplugSaveAsPowerOffLCMState": "hotplug_saveas_poweroff",
                "HotplugSnapshotLCMState": "hotplug_snapshot",
                "HotplutSaveAsSuspendedLCMState": "hotplug_saveas_suspended",
                "InitLCMState": "init",
                "MigrateLCMState": "migrate",
                "PrologFailureLCMState": "prolog_failure",
                "PrologLCMState": "prolog",
                "PrologMigrageSuspendFailureLCMState": "prolog_migrate_suspend_failure",
                "PrologMigrageSuspendLCMState": "prolog_migrate_suspend",
                "PrologMigrateFailureLCMState": "prolog_migrate_failure",
                "PrologMigrateLCMState": "prolog_migrate",
                "PrologMigratePowerOffFailureLCMState": "prolog_migrate_poweroff_failure",
                "PrologMigratePowerOffLCMState": "prolog_migrate_poweroff",
                "PrologMigrateUnknownFailureLCMState": "prolog_migrate_unknown_failure",
                "PrologMigrateUnknownLCMState": "prolog_migrate_unknown",
                "PrologResumeFailureLCMState": "prolog_resume_failure",
                "PrologResumeLCMState": "prolog_resume",
                "PrologUndeployFailureLCMState": "prolog_undeploy_failure",
                "PrologUndeployLCMState": "prolog_undeploy",
                "RunningLCMState": "running",
                "SaveMigrateLCMState": "save_migrate",
                "SaveStopLCMState": "save_stop",
                "SaveSuspendLCMState": "save_suspend",
                "ShutdownLCMState": "shutdown",
                "ShutdownPowerOffLCMState": "shutdown_poweroff",
                "ShutdownUndeployLCMState": "shutdown_undeploy",
                "UnknownLCMState": "unknown"
            },
            "x-enum-varnames": [
                "InitLCMState",
                "PrologLCMState",
                "BootLCMState",
                "RunningLCMState",
                "MigrateLCMState",
                "SaveStopLCMState",
                "SaveSuspendLCMState",
                "SaveMigrateLCMState",
                "PrologMigrateLCMState",
                "PrologResumeLCMState",
                "EpilogStopLCMState",
                "EpilogLCMState",
                "ShutdownLCMState",
                "_",
                "_",
                "CleanupResubmitLCMState",
                "UnknownLCMState",
                "HotplugLCMState",
                "ShutdownPowerOffLCMState",
                "BootUnknownLCMState",
                "BootPowerOffLCMState",
                "BootSuspendedLCMState",
                "BootStoppedLCMState",
                "CleanupDeleteLCMState",
                "HotplugSnapshotLCMState",
                "HotplugNICLCMState",
                "HotplugSaveAsLCMState",
                "HotplugSaveAsPowerOffLCMState",
                "HotplutSaveAsSuspendedLCMState",
                "ShutdownUndeployLCMState",
                "EpilogUndeployLCMState",
                "PrologUndeployLCMState",
                "BootUndeployLCMState",
                "HotplugPrologPowerOffLCMState",
                "HotplugEpilogPowerOffLCMState",
                "BootMigrateLCMState",
                "BootFailureLCMState",
                "BootMigrateFailureLCMState",
                "PrologMigrateFailureLCMState",
                "PrologFailureLCMState",
                "EpilogFailureLCMState",
                "EpilogStopFailureLCMState",
                "EpilogUndeployFailureLCMState",
                "PrologMigratePowerOffLCMState",
                "PrologMigratePowerOffFailureLCMState",
                "PrologMigrageSuspendLCMState",
                "PrologMigrageSuspendFailureLCMState",
                "BootUndeployFailureLCMState",
                "BootStoppedFailureLCMState",
                "PrologResumeFailureLCMState",
                "PrologUndeployFailureLCMState",
                "DiskSnapshotPowerOffLCMState",
                "DiskSnapshotRevertPowerOffLCMState",
                "DiskSnapshotDeletePowerOffLCMState",
                "DiskSnapshotSuspendLCMState",
                "DiskSnapshotRevertSuspendedLCMState",
                "DiskSnapshotDeleteSuspendedLCMState",
                "DiskSnapshotLCMState",
                "_",
                "DiskSnapshotDeleteLCMState",
                "PrologMigrateUnknownLCMState",
                "PrologMigrateUnknownFailureLCMState"
            ]
        },
        "cloud.ListACLsResponse": {
            "type": "object",
            "properties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.ACL"
                    }
                }
            }
        },
        "cloud.ListClusterResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/cloud.Cluster"
                }
            }
        },
        "cloud.ListClustersResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.Cluster"
                    }
                }
            }
        },
        "cloud.ListComputeHostMonitoringResponse": {
            "type": "object",
            "properties": {
                "monitoring": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.HostMonitoring"
                    }
                }
            }
        },
        "cloud.ListComputeHostResponse": {
            "type": "object",
            "properties": {
                "host": {
                    "$ref": "#/definitions/cloud.ComputeHost"
                }
            }
        },
        "cloud.ListComputeHostsMonitoringResponse": {
            "type": "object",
            "properties": {
                "monitoring": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.HostMonitoring"
                    }
                }
            }
        },
        "cloud.ListComputeHostsResponse": {
            "type": "object",
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.ComputeHost"
                    }
                }
            }
        },
        "cloud.ListDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "$ref": "#/definitions/cloud.Datastore"
                }
            }
        },
        "cloud.ListDatastoresResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.Datastore"
                    }
                }
            }
        },
        "cloud.ListDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "$ref": "#/definitions/cloud.Document"
                }
            }
        },
        "cloud.ListDocumentsResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.Document"
                    }
                }
            }
        },
        "cloud.ListGroupQuotaResponse": {
            "type": "object",
            "properties": {
                "quota": {
                    "$ref": "#/definitions/cloud.UserDefaultQuotas"
                }
            }
        },
        "cloud.ListGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "$ref": "#/definitions/cloud.Group"
                }
            }
        },
        "cloud.ListGroupsResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.Group"
                    }
                }
            }
        },
        "cloud.ListHookLogResponse": {
            "type": "object",
            "properties": {
                "hook_log": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.HookLog"
                    }
                }
            }
        },
        "cloud.ListHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "$ref": "#/definitions/cloud.Hook"
                }
            }
        },
        "cloud.ListHooksResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.Hook"
                    }
                }
            }
        },
        "cloud.ListHostsResponse": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.Host"
                    }
                }
            }
        },
        "cloud.ListImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "$ref": "#/definitions/cloud.Image"
                }
            }
        },
        "cloud.ListImagesResponse": {
            "type": "object",
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.Image"
                    }
                }
            }
        },
        "cloud.ListInstanceGroupResponse": {
            "type": "object",
            "properties": {
                "instance_group": {
                    "$ref": "#/definitions/cloud.InstanceGroup"
                }
            }
        },
        "cloud.ListInstanceGroupsResponse": {
            "type": "object",
            "properties": {
                "instance_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.InstanceGroup"
                    }
                }
            }
        },
        "cloud.ListInstanceMonitoringResponse": {
            "type": "object",
            "properties": {
                "monitoring": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.Monitoring"
                    }
                }
            }
        },
        "cloud.ListInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "$ref": "#/definitions/cloud.LockedInstance"
                }
            }
        },
        "cloud.ListInstancesAccountingResponse": {
            "type": "object",
            "properties": {
                "accounting": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.AcctHistory"
                    }
                }
            }
        },
        "cloud.ListInstancesMonitoringResponse": {
            "type": "object",
            "properties": {
                "monitoring": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.Monitoring"
                    }
                }
            }
        },
        "cloud.ListInstancesResponse": {
            "type": "object",
            "properties": {
                "instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.LockedInstance"
                    }
                }
            }
        },
        "cloud.ListInstancesShowbackResponse": {
            "type": "object",
            "properties": {
                "showback": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.Showback"
                    }
                }
            }
        },
        "cloud.ListMarketAppResponse": {
            "type": "object",
            "properties": {
                "application": {
                    "$ref": "#/definitions/cloud.MarketplaceApp"
                }
            }
        },
        "cloud.ListMarketAppsResponse": {
            "type": "object",
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.MarketplaceApp"
                    }
                }
            }
        },
        "cloud.ListMarketResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "$ref": "#/definitions/cloud.Marketplace"
                }
            }
        },
        "cloud.ListMarketsResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.Marketplace"
                    }
                }
            }
        },
        "cloud.ListSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "$ref": "#/definitions/cloud.SecurityGroup"
                }
            }
        },
        "cloud.ListSecurityGroupsResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.SecurityGroup"
                    }
                }
            }
        },
        "cloud.ListSystemConfigResponse": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/cloud.HyperCloudConfiguration"
                }
            }
        },
        "cloud.ListSystemVersionResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                }
            }
        },
        "cloud.ListTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "$ref": "#/definitions/cloud.InstanceTemplate"
                }
            }
        },
        "cloud.ListTemplatesResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.InstanceTemplate"
                    }
                }
            }
        },
        "cloud.ListUserQuotaResponse": {
            "type": "object",
            "properties": {
                "quota": {
                    "$ref": "#/definitions/cloud.UserDefaultQuotas"
                }
            }
        },
        "cloud.ListUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/cloud.User"
                }
            }
        },
        "cloud.ListUsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.User"
                    }
                }
            }
        },
        "cloud.ListVDCResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "$ref": "#/definitions/cloud.VDC"
                }
            }
        },
        "cloud.ListVDCsResponse": {
            "type": "object",
            "properties": {
                "vdcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.VDC"
                    }
                }
            }
        },
        "cloud.ListVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "$ref": "#/definitions/cloud.VNet"
                }
            }
        },
        "cloud.ListVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "$ref": "#/definitions/vnettmpl.Template"
                }
            }
        },
        "cloud.ListVNetsResponse": {
            "type": "object",
            "properties": {
                "vnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.VNet"
                    }
                }
            }
        },
        "cloud.ListVRouterResponse": {
            "type": "object",
            "properties": {
                "vrouter": {
                    "$ref": "#/definitions/cloud.VRouter"
                }
            }
        },
        "cloud.ListVRoutersResponse": {
            "type": "object",
            "properties": {
                "vrouters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.VRouter"
                    }
                }
            }
        },
        "cloud.ListZoneResponse": {
            "type": "object",
            "properties": {
                "zone": {
                    "$ref": "#/definitions/cloud.Zone"
                }
            }
        },
        "cloud.ListZonesRaftStatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/cloud.RaftStatus"
                }
            }
        },
        "cloud.ListZonesResponse": {
            "type": "object",
            "properties": {
                "zones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.Zone"
                    }
                }
            }
        },
        "cloud.Lock": {
            "type": "object",
            "properties": {
                "locked": {
                    "type": "boolean"
                },
                "owner": {
                    "type": "integer"
                },
                "req_id": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "cloud.LockDocumentRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "cloud.LockDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "cloud.LockHookRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "$ref": "#/definitions/cloud.LockLevel"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "cloud.LockHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "cloud.LockImageRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "cloud.LockImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "cloud.LockInstanceGroupRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "cloud.LockInstanceGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "cloud.LockInstanceRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "cloud.LockInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "cloud.LockLevel": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-comments": {
                "AdminLockLevel": "admin",
                "AllLockLevel": "all",
                "ManageLockLevel": "manage",
                "UseLockLevel": "use"
            },
            "x-enum-varnames": [
                "_",
                "UseLockLevel",
                "ManageLockLevel",
                "AdminLockLevel",
                "AllLockLevel"
            ]
        },
        "cloud.LockMarketAppRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "$ref": "#/definitions/cloud.LockLevel"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "cloud.LockMarketAppResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "cloud.LockTemplateRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "$ref": "#/definitions/cloud.LockLevel"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "cloud.LockTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.LockVNetRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "cloud.LockVNetResponse": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.LockVNetTemplateRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "cloud.LockVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "cloud.LockVRouterRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "cloud.LockVRouterResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "cloud.LockedInstance": {
            "type": "object",
            "properties": {
                "deploy_id": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "history_records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.History"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "last_poll": {
                    "type": "string"
                },
                "lcm_state": {
                    "$ref": "#/definitions/cloud.LCMState"
                },
                "lock": {
                    "$ref": "#/definitions/cloud.Lock"
                },
                "monitoring": {
                    "$ref": "#/definitions/instance.Monitoring"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/cloud.Permissions"
                },
                "prev_lcm_state": {
                    "$ref": "#/definitions/cloud.LCMState"
                },
                "prev_state": {
                    "$ref": "#/definitions/instance.State"
                },
                "reschedule": {
                    "type": "boolean"
                },
                "snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.DiskSnapshots"
                    }
                },
                "start_time": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/instance.State"
                },
                "template": {
                    "$ref": "#/definitions/instance.Template"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "user_template": {
                    "$ref": "#/definitions/instance.UserTemplate"
                }
            }
        },
        "cloud.Marketplace": {
            "type": "object",
            "properties": {
                "free_mb": {
                    "type": "integer"
                },
                "gid": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "market_mad": {
                    "type": "string"
                },
                "marketplace_apps": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/cloud.Permissions"
                },
                "state": {
                    "type": "integer"
                },
                "template": {
                    "type": "string"
                },
                "total_mb": {
                    "type": "integer"
                },
                "uid": {
                    "type": "integer"
                },
                "used_mb": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "zone_id": {
                    "type": "string"
                }
            }
        },
        "cloud.MarketplaceApp": {
            "type": "object",
            "properties": {
                "apptemplate64": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "gid": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lock": {
                    "$ref": "#/definitions/cloud.Lock"
                },
                "marketplace": {
                    "type": "string"
                },
                "marketplace_id": {
                    "type": "integer"
                },
                "md5": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "origin_id": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/cloud.Permissions"
                },
                "regtime": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "state": {
                    "type": "integer"
                },
                "template": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "uid": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "zone_id": {
                    "type": "string"
                }
            }
        },
        "cloud.Memory": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "string"
                },
                "free": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "used": {
                    "type": "integer"
                }
            }
        },
        "cloud.MoveInstanceRequest": {
            "type": "object",
            "properties": {
                "enforce_capacity": {
                    "description": "TODO: probably should reverse this logic",
                    "type": "boolean"
                },
                "host": {
                    "type": "integer"
                },
                "live_migrate": {
                    "type": "boolean"
                },
                "migration_type": {
                    "type": "string"
                }
            }
        },
        "cloud.MoveInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.Node": {
            "type": "object",
            "properties": {
                "core": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.Core"
                    }
                },
                "hugepage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.HugePage"
                    }
                },
                "memory": {
                    "$ref": "#/definitions/cloud.Memory"
                },
                "node_id": {
                    "type": "integer"
                }
            }
        },
        "cloud.PCI": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "bus": {
                    "type": "string"
                },
                "class": {
                    "type": "string"
                },
                "class_name": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "function": {
                    "type": "string"
                },
                "instance_id": {
                    "type": "integer"
                },
                "numa_node": {
                    "type": "string"
                },
                "short_address": {
                    "type": "string"
                },
                "slot": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vendor": {
                    "type": "string"
                },
                "vendor_name": {
                    "type": "string"
                }
            }
        },
        "cloud.Period": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer"
                }
            }
        },
        "cloud.Permissions": {
            "type": "object",
            "properties": {
                "group": {
                    "$ref": "#/definitions/cloud.perms"
                },
                "other": {
                    "$ref": "#/definitions/cloud.perms"
                },
                "owner": {
                    "$ref": "#/definitions/cloud.perms"
                }
            }
        },
        "cloud.RaftStatus": {
            "type": "object",
            "properties": {
                "commit": {
                    "type": "integer"
                },
                "fed_log_index": {
                    "type": "integer"
                },
                "log_index": {
                    "type": "integer"
                },
                "log_term": {
                    "type": "integer"
                },
                "server_id": {
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "term": {
                    "type": "integer"
                },
                "voted_for": {
                    "type": "integer"
                }
            }
        },
        "cloud.RecoverInstanceRequest": {
            "type": "object",
            "properties": {
                "operation": {
                    "type": "string"
                }
            }
        },
        "cloud.RecoverInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.RecoverVNetRequest": {
            "type": "object",
            "properties": {
                "recovery": {
                    "type": "string"
                }
            }
        },
        "cloud.RecoverVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.ReleaseVNetRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.ReleaseVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameClusterRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameClusterResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameComputeHostRequest": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameComputeHostResponse": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameDatastoreRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameDocumentRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameHookRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameImageRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameInstanceDiskSnapshotRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameInstanceDiskSnapshotResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameInstanceGroupRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameInstanceGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameInstanceRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameMarketAppRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameMarketAppResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameMarketRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameMarketResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameTemplateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameVDCRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameVDCResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameVNetRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameVNetTemplateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameVRouterRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameVRouterResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "cloud.RenameZoneRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "cloud.RenameZoneResponse": {
            "type": "object",
            "properties": {
                "zone": {
                    "type": "integer"
                }
            }
        },
        "cloud.ReserveVNetRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.ReserveVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.ResizeInstanceDiskRequest": {
            "type": "object",
            "properties": {
                "size": {
                    "type": "integer"
                }
            }
        },
        "cloud.ResizeInstanceDiskResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.ResizeInstanceRequest": {
            "type": "object",
            "properties": {
                "enforce_capacity": {
                    "description": "TODO: probably should reverse this logic",
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.ResizeInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.RetryHookRequest": {
            "type": "object",
            "properties": {
                "execution": {
                    "type": "integer"
                }
            }
        },
        "cloud.RetryHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "integer"
                }
            }
        },
        "cloud.RevertImageSnapshotResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "cloud.RevertInstanceDiskSnapshotResponse": {
            "type": "object",
            "properties": {
                "snapshot": {
                    "type": "integer"
                }
            }
        },
        "cloud.RevertInstanceSnapshotResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.SecurityGroup": {
            "type": "object",
            "properties": {
                "error_instances": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "group_id": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "outdated_instances": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "permissions": {
                    "$ref": "#/definitions/cloud.Permissions"
                },
                "template": {
                    "$ref": "#/definitions/cloud.SecurityGroupTemplate"
                },
                "updated_instances": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "updating_instances": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "cloud.SecurityGroupRule": {
            "type": "object",
            "properties": {
                "protocol": {
                    "type": "string"
                },
                "rule_type": {
                    "type": "string"
                }
            }
        },
        "cloud.SecurityGroupTemplate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "rule": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.SecurityGroupRule"
                    }
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "cloud.Server": {
            "type": "object",
            "properties": {
                "commit": {
                    "type": "integer"
                },
                "endpoint": {
                    "type": "string"
                },
                "fed_log_index": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "log_index": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "integer"
                },
                "term": {
                    "type": "integer"
                },
                "voted_for": {
                    "type": "integer"
                }
            }
        },
        "cloud.SetComputeHostStatusRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "cloud.SetComputeHostStatusResponse": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "integer"
                }
            }
        },
        "cloud.SetGroupQuotaRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.SetGroupQuotaResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "cloud.SetImagePersistentRequest": {
            "type": "object",
            "properties": {
                "persistent": {
                    "type": "boolean"
                }
            }
        },
        "cloud.SetImagePersistentResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "cloud.SetInstanceActionRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "Action to perform",
                    "type": "string",
                    "enum": [
                        "hold",
                        "poweroff",
                        "poweroff-hard",
                        "reboot",
                        "reboot-hard",
                        "release",
                        "resched",
                        "resume",
                        "stop",
                        "suspend",
                        "terminate",
                        "terminate-hard",
                        "undeploy",
                        "undeploy-hard"
                    ]
                }
            }
        },
        "cloud.SetInstanceActionResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.SetUserQuotaRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.SetUserQuotaResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.Showback": {
            "type": "object",
            "properties": {
                "cpucost": {
                    "type": "number"
                },
                "disk_cost": {
                    "type": "number"
                },
                "gid": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "hours": {
                    "type": "number"
                },
                "instance": {
                    "type": "integer"
                },
                "instance_name": {
                    "type": "string"
                },
                "memory_cost": {
                    "type": "number"
                },
                "month": {
                    "type": "integer"
                },
                "rhours": {
                    "type": "number"
                },
                "total_cost": {
                    "type": "number"
                },
                "uid": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "cloud.SunstoneTemplate": {
            "type": "object",
            "properties": {
                "default_view": {
                    "type": "string"
                },
                "group_admin_default_view": {
                    "type": "string"
                },
                "group_admin_views": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cloud.System": {
            "type": "object",
            "properties": {
                "netrx": {
                    "type": "integer"
                },
                "nettx": {
                    "type": "integer"
                }
            }
        },
        "cloud.UnlockDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "cloud.UnlockHookRequest": {
            "type": "object",
            "properties": {
                "lock": {
                    "type": "integer"
                }
            }
        },
        "cloud.UnlockHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "integer"
                }
            }
        },
        "cloud.UnlockImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "cloud.UnlockInstanceGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "cloud.UnlockInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.UnlockMarketAppResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "cloud.UnlockTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.UnlockVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.UnlockVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.UnlockVRouterResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateClusterRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateClusterResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateComputeHostRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateComputeHostResponse": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateDatastoreRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateDefaultUserQuotaRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateDefaultUserQuotaResponse": {
            "type": "object",
            "properties": {
                "quota": {
                    "$ref": "#/definitions/cloud.UserDefaultQuotas"
                }
            }
        },
        "cloud.UpdateDocumentRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateGroupQuotaRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateGroupQuotaResponse": {
            "type": "object",
            "properties": {
                "quotas": {
                    "$ref": "#/definitions/cloud.UserDefaultQuotas"
                }
            }
        },
        "cloud.UpdateGroupRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateHookRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateImageRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateInstanceConfigRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateInstanceConfigResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateInstanceGroupRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateInstanceGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateInstanceScheduleRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "integer"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateInstanceScheduleResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateInstanceTemplateRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateInstanceTemplateResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateMarketAppRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateMarketAppResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateMarketRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateMarketResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateTemplateRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "merge": {
                    "type": "boolean"
                }
            }
        },
        "cloud.UpdateTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateVDCRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateVDCResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateVNetAddressRangeRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateVNetAddressRangeResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateVNetRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateVNetTemplateRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateVRouterRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateVRouterResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "cloud.UpdateZoneRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "cloud.UpdateZoneResponse": {
            "type": "object",
            "properties": {
                "zone": {
                    "type": "integer"
                }
            }
        },
        "cloud.User": {
            "type": "object",
            "properties": {
                "auth_driver": {
                    "type": "string"
                },
                "datastore_quota": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.UserDatastore"
                    }
                },
                "default_user_quotas": {
                    "$ref": "#/definitions/cloud.UserDefaultQuotas"
                },
                "enabled": {
                    "type": "boolean"
                },
                "group_id": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "image_quota": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.UserImage"
                    }
                },
                "instance_quota": {
                    "$ref": "#/definitions/cloud.UserInstance"
                },
                "login_token": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.UserLoginToken"
                    }
                },
                "name": {
                    "type": "string"
                },
                "network_quota": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.UserNetwork"
                    }
                },
                "password": {
                    "type": "string"
                },
                "template": {
                    "$ref": "#/definitions/cloud.UserTemplate"
                }
            }
        },
        "cloud.UserDatastore": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "string"
                },
                "images_used": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "size_used": {
                    "type": "string"
                }
            }
        },
        "cloud.UserDefaultQuotas": {
            "type": "object",
            "properties": {
                "datastore_quota": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.UserDatastore"
                    }
                },
                "image_quota": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.UserImage"
                    }
                },
                "instance_quota": {
                    "$ref": "#/definitions/cloud.UserInstance"
                },
                "network_quota": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.UserNetwork"
                    }
                }
            }
        },
        "cloud.UserImage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "running_instances": {
                    "type": "string"
                },
                "running_instances_used": {
                    "type": "string"
                }
            }
        },
        "cloud.UserInstance": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "number"
                },
                "cpu_used": {
                    "type": "number"
                },
                "instances": {
                    "type": "integer"
                },
                "instances_used": {
                    "type": "integer"
                },
                "memory": {
                    "type": "integer"
                },
                "memory_used": {
                    "type": "integer"
                },
                "running_cpu": {
                    "type": "number"
                },
                "running_cpu_used": {
                    "type": "number"
                },
                "running_instances": {
                    "type": "integer"
                },
                "running_instances_used": {
                    "type": "integer"
                },
                "running_memory": {
                    "type": "integer"
                },
                "running_memory_used": {
                    "type": "integer"
                },
                "system_disk_size": {
                    "type": "integer"
                },
                "system_disk_size_used": {
                    "type": "integer"
                }
            }
        },
        "cloud.UserLoginRequest": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "group": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "cloud.UserLoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "cloud.UserLoginToken": {
            "type": "object",
            "properties": {
                "effective_group_id": {
                    "type": "integer"
                },
                "expiration_time": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "cloud.UserNetwork": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "leases": {
                    "type": "string"
                },
                "leases_used": {
                    "type": "string"
                }
            }
        },
        "cloud.UserTemplate": {
            "type": "object",
            "properties": {
                "rados_gw": {
                    "type": "boolean"
                },
                "rados_gw_access_key": {
                    "type": "string"
                },
                "rados_gw_secret_key": {
                    "type": "string"
                },
                "ssh_public_key": {
                    "type": "string"
                },
                "token_password": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                }
            }
        },
        "cloud.VDC": {
            "type": "object",
            "properties": {
                "clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_softiron_hypercloud-api_cloud_vdc.Cluster"
                    }
                },
                "datastores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_softiron_hypercloud-api_cloud_vdc.Datastore"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_softiron_hypercloud-api_cloud_vdc.Host"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "template": {
                    "$ref": "#/definitions/cloud.VDCTemplate"
                },
                "vnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vdc.VNet"
                    }
                }
            }
        },
        "cloud.VDCTemplate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                }
            }
        },
        "cloud.VNet": {
            "type": "object",
            "properties": {
                "arpool": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vnet.AddressRange"
                    }
                },
                "bridge": {
                    "type": "string"
                },
                "bridge_type": {
                    "type": "string"
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "gid": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lock": {
                    "$ref": "#/definitions/cloud.Lock"
                },
                "name": {
                    "type": "string"
                },
                "outer_vlanid": {
                    "type": "string"
                },
                "outer_vlanidautomatic": {
                    "type": "string"
                },
                "parent_network_id": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/cloud.Permissions"
                },
                "phydev": {
                    "type": "string"
                },
                "prev_state": {
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/definitions/github_com_softiron_hypercloud-api_cloud_vnet.Template"
                },
                "uid": {
                    "type": "integer"
                },
                "used_leases": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "vlanid": {
                    "type": "string"
                },
                "vlanidautomatic": {
                    "type": "string"
                },
                "vnmad": {
                    "type": "string"
                },
                "vrouters": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "cloud.VRouter": {
            "type": "object",
            "properties": {
                "gid": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "lock": {
                    "$ref": "#/definitions/cloud.Lock"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/cloud.Permissions"
                },
                "template": {
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "cloud.Zone": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloud.Server"
                    }
                },
                "state": {
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/definitions/cloud.ZoneTemplate"
                }
            }
        },
        "cloud.ZoneTemplate": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                }
            }
        },
        "cloud.perms": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "manage": {
                    "type": "boolean"
                },
                "use": {
                    "type": "boolean"
                }
            }
        },
        "config.AuthMAD": {
            "type": "object",
            "properties": {
                "authn": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                }
            }
        },
        "config.AuthMADConf": {
            "type": "object",
            "properties": {
                "driver_managed_group_admin": {
                    "type": "string"
                },
                "driver_managed_groups": {
                    "type": "string"
                },
                "max_token_time": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password_change": {
                    "type": "string"
                }
            }
        },
        "config.DB": {
            "type": "object",
            "properties": {
                "backend": {
                    "type": "string"
                },
                "compare_binary": {
                    "type": "string"
                },
                "connections": {
                    "type": "integer"
                },
                "dbname": {
                    "type": "string"
                },
                "passwd": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "server": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "config.DSMADConf": {
            "type": "object",
            "properties": {
                "marketplace_actions": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "persistent_only": {
                    "type": "string"
                },
                "required_attrs": {
                    "type": "string"
                }
            }
        },
        "config.DatastoreMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                }
            }
        },
        "config.DefaultCost": {
            "type": "object",
            "properties": {
                "cpucost": {
                    "type": "integer"
                },
                "disk_cost": {
                    "type": "integer"
                },
                "memory_cost": {
                    "type": "integer"
                }
            }
        },
        "config.Federation": {
            "type": "object",
            "properties": {
                "master_oned": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "server_id": {
                    "type": "integer"
                },
                "zone_id": {
                    "type": "integer"
                }
            }
        },
        "config.HookLogConf": {
            "type": "object",
            "properties": {
                "log_retention": {
                    "type": "integer"
                }
            }
        },
        "config.HookManagerMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                }
            }
        },
        "config.ImMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "threads": {
                    "type": "integer"
                }
            }
        },
        "config.InstanceMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "cold_nicattach": {
                    "type": "string"
                },
                "default": {
                    "type": "string"
                },
                "dslive_migration": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                },
                "imported_instances_actions": {
                    "type": "string"
                },
                "keep_snapshots": {
                    "type": "string"
                },
                "live_resize": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sunstone_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "config.IpamMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                }
            }
        },
        "config.Log": {
            "type": "object",
            "properties": {
                "debug_level": {
                    "type": "integer"
                },
                "system": {
                    "type": "string"
                },
                "use_instances_location": {
                    "type": "string"
                }
            }
        },
        "config.MarketMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                }
            }
        },
        "config.MarketMADConf": {
            "type": "object",
            "properties": {
                "app_actions": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public": {
                    "type": "string"
                },
                "required_attrs": {
                    "type": "string"
                },
                "sunstone_name": {
                    "type": "string"
                }
            }
        },
        "config.Raft": {
            "type": "object",
            "properties": {
                "broadcast_timeout_ms": {
                    "type": "integer"
                },
                "election_timeout_ms": {
                    "type": "integer"
                },
                "limit_purge": {
                    "type": "integer"
                },
                "log_purge_timeout": {
                    "type": "integer"
                },
                "log_retention": {
                    "type": "integer"
                },
                "xmlrpc_timeout_ms": {
                    "type": "integer"
                }
            }
        },
        "config.TmMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                }
            }
        },
        "config.TmMADConf": {
            "type": "object",
            "properties": {
                "allow_orphans": {
                    "type": "string"
                },
                "clone_target": {
                    "type": "string"
                },
                "clone_target_shared": {
                    "type": "string"
                },
                "clone_target_ssh": {
                    "type": "string"
                },
                "disk_type_shared": {
                    "type": "string"
                },
                "disk_type_ssh": {
                    "type": "string"
                },
                "driver": {
                    "type": "string"
                },
                "dsmigrate": {
                    "type": "string"
                },
                "ln_target": {
                    "type": "string"
                },
                "ln_target_shared": {
                    "type": "string"
                },
                "ln_target_ssh": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "shared": {
                    "type": "string"
                },
                "tm_madsystem": {
                    "type": "string"
                }
            }
        },
        "config.VLANIDs": {
            "type": "object",
            "properties": {
                "reserved": {
                    "type": "string"
                },
                "start": {
                    "type": "integer"
                }
            }
        },
        "config.VNCPorts": {
            "type": "object",
            "properties": {
                "reserved": {
                    "type": "string"
                },
                "start": {
                    "type": "integer"
                }
            }
        },
        "config.VNetMADConf": {
            "type": "object",
            "properties": {
                "bridge_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "config.VxlanIDs": {
            "type": "object",
            "properties": {
                "start": {
                    "type": "integer"
                }
            }
        },
        "git_softiron_com_sw_hc_sifi_git_internal_sic.ListHostDiskResponse": {
            "type": "object",
            "properties": {
                "disk": {
                    "$ref": "#/definitions/sicontrol.DiskInfo"
                }
            }
        },
        "git_softiron_com_sw_hc_sifi_git_internal_sic.ListHostDisksResponse": {
            "type": "object",
            "properties": {
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sicontrol.DiskInfo"
                    }
                }
            }
        },
        "git_softiron_com_sw_hc_sifi_git_internal_sic.ListHostVolumeGroupResponse": {
            "type": "object",
            "properties": {
                "volume_group": {
                    "$ref": "#/definitions/sicontrol.VolumeGroupInfo"
                }
            }
        },
        "git_softiron_com_sw_hc_sifi_git_internal_sic.ListHostVolumeGroupsResponse": {
            "type": "object",
            "properties": {
                "volume_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sicontrol.VolumeGroupInfo"
                    }
                }
            }
        },
        "git_softiron_com_sw_hc_sifi_git_internal_sic.ListHostsDisksResponse": {
            "type": "object",
            "properties": {
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sicontrol.DiskInfo"
                    }
                }
            }
        },
        "git_softiron_com_sw_hc_sifi_git_internal_sic.ListStorageHostsResponse": {
            "type": "object",
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sicontrol.MachineInfo"
                    }
                }
            }
        },
        "github_com_softiron_hypercloud-api_cloud_vdc.Cluster": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "integer"
                },
                "zone": {
                    "type": "integer"
                }
            }
        },
        "github_com_softiron_hypercloud-api_cloud_vdc.Datastore": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                },
                "zone": {
                    "type": "integer"
                }
            }
        },
        "github_com_softiron_hypercloud-api_cloud_vdc.Host": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "integer"
                },
                "zone": {
                    "type": "integer"
                }
            }
        },
        "github_com_softiron_hypercloud-api_cloud_vnet.Lease": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "ip6": {
                    "type": "string"
                },
                "ip6_global": {
                    "type": "string"
                },
                "ip6_link": {
                    "type": "string"
                },
                "ip6_ula": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "vnet": {
                    "type": "integer"
                },
                "vrouter": {
                    "type": "integer"
                }
            }
        },
        "github_com_softiron_hypercloud-api_cloud_vnet.Template": {
            "type": "object",
            "properties": {
                "bridge": {
                    "type": "string"
                },
                "bridge_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dns": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "gateway6": {
                    "type": "string"
                },
                "guest_mtu": {
                    "type": "integer"
                },
                "ip6_method": {
                    "type": "string"
                },
                "ip6_metric": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "network_address": {
                    "type": "string"
                },
                "network_mask": {
                    "type": "string"
                },
                "outer_vlan_id": {
                    "type": "string"
                },
                "search_domain": {
                    "type": "string"
                },
                "security_groups": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                },
                "vcenter_from_wild": {
                    "type": "string"
                },
                "vcenter_instance_id": {
                    "type": "string"
                },
                "vcenter_net_ref": {
                    "type": "string"
                },
                "vcenter_portgroup_type": {
                    "type": "string"
                },
                "vcenter_template_ref": {
                    "type": "string"
                },
                "vlan": {
                    "type": "string"
                },
                "vlan_id": {
                    "type": "string"
                },
                "vn_mad": {
                    "type": "string"
                }
            }
        },
        "hc.ACL": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "resource": {
                    "type": "string"
                },
                "rights": {
                    "type": "string"
                },
                "string": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "hc.AcctHistory": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "integer"
                },
                "cid": {
                    "type": "integer"
                },
                "dsid": {
                    "type": "integer"
                },
                "eetime": {
                    "type": "integer"
                },
                "estime": {
                    "type": "integer"
                },
                "etime": {
                    "type": "integer"
                },
                "gid": {
                    "type": "integer"
                },
                "hid": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "oid": {
                    "type": "integer"
                },
                "petime": {
                    "type": "integer"
                },
                "pstime": {
                    "type": "integer"
                },
                "request_id": {
                    "type": "string"
                },
                "retime": {
                    "type": "integer"
                },
                "rstime": {
                    "type": "integer"
                },
                "seq": {
                    "type": "integer"
                },
                "stime": {
                    "type": "integer"
                },
                "tm_mad": {
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                },
                "vm": {
                    "$ref": "#/definitions/hc.AcctVM"
                },
                "vmmad": {
                    "type": "string"
                }
            }
        },
        "hc.AcctPermissions": {
            "type": "object",
            "properties": {
                "group_a": {
                    "type": "integer"
                },
                "group_m": {
                    "type": "integer"
                },
                "group_u": {
                    "type": "integer"
                },
                "other_a": {
                    "type": "integer"
                },
                "other_m": {
                    "type": "integer"
                },
                "other_u": {
                    "type": "integer"
                },
                "owner_a": {
                    "type": "integer"
                },
                "owner_m": {
                    "type": "integer"
                },
                "owner_u": {
                    "type": "integer"
                }
            }
        },
        "hc.AcctSnapshot": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "string"
                },
                "children": {
                    "type": "string"
                },
                "date": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "hc.AcctSnapshots": {
            "type": "object",
            "properties": {
                "allow_orphans": {
                    "type": "string"
                },
                "current_base": {
                    "type": "integer"
                },
                "disk_id": {
                    "type": "integer"
                },
                "next_snapshot": {
                    "type": "integer"
                },
                "snapshot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.AcctSnapshot"
                    }
                }
            }
        },
        "hc.AcctVM": {
            "type": "object",
            "properties": {
                "deploy_id": {
                    "type": "string"
                },
                "etime": {
                    "type": "integer"
                },
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "history_records": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_poll": {
                    "type": "integer"
                },
                "lcm_state": {
                    "type": "integer"
                },
                "monitoring": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.AcctPermissions"
                },
                "prev_lcm_state": {
                    "type": "integer"
                },
                "prev_state": {
                    "type": "integer"
                },
                "resched": {
                    "type": "integer"
                },
                "snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.AcctSnapshots"
                    }
                },
                "state": {
                    "type": "integer"
                },
                "stime": {
                    "type": "integer"
                },
                "template": {
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                },
                "uname": {
                    "type": "string"
                },
                "user_template": {
                    "type": "string"
                }
            }
        },
        "hc.AddClusterDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "hc.AddClusterHostResponse": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "integer"
                }
            }
        },
        "hc.AddClusterNetworkResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.AddGroupAdminRequest": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.AddGroupAdminResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "hc.AddInstanceScheduleRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.AddInstanceScheduleResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.AddInstanceSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.AddUserGroupResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.AddVDCClusterResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "hc.AddVDCDatastoreResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "hc.AddVDCGroupResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "hc.AddVDCHostResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "hc.AddVDCNetworkResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "hc.AddVNetAddressRangeRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.AddVNetAddressRangeResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.AllocateDocumentRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "hc.AllocateDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "hc.CalculateInstancesShowbackRequest": {
            "type": "object",
            "properties": {
                "month": {
                    "$ref": "#/definitions/hc.Period"
                },
                "year": {
                    "$ref": "#/definitions/hc.Period"
                }
            }
        },
        "hc.ChangeDatastoreOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeDatastoreOwnershipResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeDatastorePermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "hc.ChangeDatastorePermissionsResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeDocumentOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeDocumentOwnershipResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeDocumentPermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "hc.ChangeDocumentPermissionsResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeImageOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeImageOwnershipResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeImagePermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "hc.ChangeImagePermissionsResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeImageTypeRequest": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "hc.ChangeImageTypeResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeInstanceGroupOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeInstanceGroupOwnershipResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeInstanceGroupPermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "hc.ChangeInstanceGroupPermissionsResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeInstanceOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeInstanceOwnershipResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeInstancePermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "hc.ChangeInstancePermissionsResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeMarketAppOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeMarketAppOwnershipResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeMarketAppPermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "hc.ChangeMarketAppPermissionsResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeMarketOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeMarketOwnershipResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeMarketPermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "hc.ChangeMarketPermissionsResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeSecurityGroupOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeSecurityGroupOwnershipResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeSecurityGroupPermissionsRequest": {
            "type": "object",
            "properties": {
                "perms": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "hc.ChangeSecurityGroupPermissionsResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeTemplateOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeTemplateOwnershipResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeTemplatePermissionsRequest": {
            "type": "object",
            "properties": {
                "disk": {
                    "type": "boolean"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "hc.ChangeTemplatePermissionsResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeUserAuthRequest": {
            "type": "object",
            "properties": {
                "driver": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "hc.ChangeUserAuthResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeUserGroupResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeUserPasswordRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "hc.ChangeUserPasswordResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeVNetOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeVNetOwnershipResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeVNetPermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "hc.ChangeVNetPermissionsResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeVNetTemplateOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeVNetTemplateOwnershipResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeVNetTemplatePermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "hc.ChangeVNetTemplatePermissionsResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeVRouterOwnershipRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeVRouterOwnershipResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "hc.ChangeVRouterPermissionsRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/hc.Perms"
                }
            }
        },
        "hc.ChangeVRouterPermissionsResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "hc.CloneDocumentRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.CloneDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "hc.CloneImageRequest": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.CloneImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "hc.CloneSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.CloneSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "hc.CloneTemplateRequest": {
            "type": "object",
            "properties": {
                "disk": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.CloneTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.CloneVNetTemplateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.CloneVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.Cluster": {
            "type": "object",
            "properties": {
                "datastores": {
                    "$ref": "#/definitions/hc.ClusterDatastores"
                },
                "hosts": {
                    "$ref": "#/definitions/hc.ClusterHosts"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                },
                "vnets": {
                    "$ref": "#/definitions/hc.ClusterVnets"
                }
            }
        },
        "hc.ClusterDatastores": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.ClusterHosts": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.ClusterVDC": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "integer"
                },
                "zone_id": {
                    "type": "integer"
                }
            }
        },
        "hc.ClusterVnets": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.CommitSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "boolean"
                }
            }
        },
        "hc.CommitSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "hc.ConfigAuthMAD": {
            "type": "object",
            "properties": {
                "authn": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigAuthMADConf": {
            "type": "object",
            "properties": {
                "driver_managed_group_admin": {
                    "type": "string"
                },
                "driver_managed_groups": {
                    "type": "string"
                },
                "max_token_time": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password_change": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigDB": {
            "type": "object",
            "properties": {
                "backend": {
                    "type": "string"
                },
                "compare_binary": {
                    "type": "string"
                },
                "connections": {
                    "type": "integer"
                },
                "dbname": {
                    "type": "string"
                },
                "passwd": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "server": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigDSMADConf": {
            "type": "object",
            "properties": {
                "marketplace_actions": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "persistent_only": {
                    "type": "string"
                },
                "required_attrs": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigDatastoreMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigDefaultCost": {
            "type": "object",
            "properties": {
                "cpucost": {
                    "type": "integer"
                },
                "disk_cost": {
                    "type": "integer"
                },
                "memory_cost": {
                    "type": "integer"
                }
            }
        },
        "hc.ConfigFederation": {
            "type": "object",
            "properties": {
                "master_oned": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "server_id": {
                    "type": "integer"
                },
                "zone_id": {
                    "type": "integer"
                }
            }
        },
        "hc.ConfigHmMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigHookLogConf": {
            "type": "object",
            "properties": {
                "log_retention": {
                    "type": "integer"
                }
            }
        },
        "hc.ConfigImMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "threads": {
                    "type": "integer"
                }
            }
        },
        "hc.ConfigInstanceMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "cold_nicattach": {
                    "type": "string"
                },
                "default": {
                    "type": "string"
                },
                "dslive_migration": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                },
                "imported_instances_actions": {
                    "type": "string"
                },
                "keep_snapshots": {
                    "type": "string"
                },
                "live_resize": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sunstone_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigIpamMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigLog": {
            "type": "object",
            "properties": {
                "debug_level": {
                    "type": "integer"
                },
                "system": {
                    "type": "string"
                },
                "use_instances_location": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigMarketMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigMarketMADConf": {
            "type": "object",
            "properties": {
                "app_actions": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public": {
                    "type": "string"
                },
                "required_attrs": {
                    "type": "string"
                },
                "sunstone_name": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigRaft": {
            "type": "object",
            "properties": {
                "broadcast_timeout_ms": {
                    "type": "integer"
                },
                "election_timeout_ms": {
                    "type": "integer"
                },
                "limit_purge": {
                    "type": "integer"
                },
                "log_purge_timeout": {
                    "type": "integer"
                },
                "log_retention": {
                    "type": "integer"
                },
                "xmlrpc_timeout_ms": {
                    "type": "integer"
                }
            }
        },
        "hc.ConfigTmMAD": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "executable": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigTmMADConf": {
            "type": "object",
            "properties": {
                "allow_orphans": {
                    "type": "string"
                },
                "clone_target": {
                    "type": "string"
                },
                "clone_target_shared": {
                    "type": "string"
                },
                "clone_target_ssh": {
                    "type": "string"
                },
                "disk_type_shared": {
                    "type": "string"
                },
                "disk_type_ssh": {
                    "type": "string"
                },
                "driver": {
                    "type": "string"
                },
                "dsmigrate": {
                    "type": "string"
                },
                "ln_target": {
                    "type": "string"
                },
                "ln_target_shared": {
                    "type": "string"
                },
                "ln_target_ssh": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "shared": {
                    "type": "string"
                },
                "tm_madsystem": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigVLANIDs": {
            "type": "object",
            "properties": {
                "reserved": {
                    "type": "string"
                },
                "start": {
                    "type": "integer"
                }
            }
        },
        "hc.ConfigVNCPorts": {
            "type": "object",
            "properties": {
                "reserved": {
                    "type": "string"
                },
                "start": {
                    "type": "integer"
                }
            }
        },
        "hc.ConfigVNMADConf": {
            "type": "object",
            "properties": {
                "bridge_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.ConfigVxlanIDs": {
            "type": "object",
            "properties": {
                "start": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateACLRequest": {
            "type": "object",
            "properties": {
                "resource": {
                    "type": "integer"
                },
                "rights": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                },
                "zone": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateACLResponse": {
            "type": "object",
            "properties": {
                "acl": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateClusterRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.CreateClusterResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateDatastoreRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "integer"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateGroupRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.CreateGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateHookRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateHostRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "info_manager": {
                    "type": "string"
                },
                "vm_manager": {
                    "type": "string"
                }
            }
        },
        "hc.CreateHostResponse": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateImageRequest": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                },
                "enforce_capacity": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateInstanceDiskImageRequest": {
            "type": "object",
            "properties": {
                "image_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "snapshot": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateInstanceDiskImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateInstanceDiskRequest": {
            "type": "object",
            "properties": {
                "disk": {
                    "type": "string"
                }
            }
        },
        "hc.CreateInstanceDiskResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateInstanceDiskSnapshotRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "hc.CreateInstanceDiskSnapshotResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateInstanceGroupRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateInstanceNICRequest": {
            "type": "object",
            "properties": {
                "nic": {
                    "type": "string"
                }
            }
        },
        "hc.CreateInstanceNICResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "description": "TODO: would make more sense as NIC ID, maybe docs are wrong",
                    "type": "integer"
                }
            }
        },
        "hc.CreateInstanceRequest": {
            "type": "object",
            "properties": {
                "pending": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateInstanceSnapshotRequest": {
            "type": "object",
            "properties": {
                "snapshot": {
                    "type": "string"
                }
            }
        },
        "hc.CreateInstanceSnapshotResponse": {
            "type": "object",
            "properties": {
                "snapshot": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateMarketAppRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateMarketAppResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateMarketRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateMarketResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateTemplateRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "hc.CreateTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateUserRequest": {
            "type": "object",
            "properties": {
                "auth": {
                    "type": "string"
                },
                "gids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "hc.CreateUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateVDCRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateVDCResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateVNetRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "integer"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateVNetTemplateRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateVRouterNICRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateVRouterNICResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateVRouterRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateVRouterResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "hc.CreateZoneRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.CreateZoneResponse": {
            "type": "object",
            "properties": {
                "zone": {
                    "type": "integer"
                }
            }
        },
        "hc.Datastore": {
            "type": "object",
            "properties": {
                "base_path": {
                    "type": "string"
                },
                "clusters": {
                    "$ref": "#/definitions/hc.DatastoreClusters"
                },
                "disk_type": {
                    "type": "integer"
                },
                "dsmad": {
                    "type": "string"
                },
                "free_mb": {
                    "type": "integer"
                },
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "$ref": "#/definitions/hc.DatastoreImages"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.DatastorePermissions"
                },
                "state": {
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/definitions/hc.DatastoreTemplate"
                },
                "tm_mad": {
                    "type": "string"
                },
                "total_mb": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "uid": {
                    "type": "integer"
                },
                "uname": {
                    "type": "string"
                },
                "used_mb": {
                    "type": "integer"
                }
            }
        },
        "hc.DatastoreClusters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.DatastoreImages": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.DatastorePermissions": {
            "type": "object",
            "properties": {
                "group_a": {
                    "type": "integer"
                },
                "group_m": {
                    "type": "integer"
                },
                "group_u": {
                    "type": "integer"
                },
                "other_a": {
                    "type": "integer"
                },
                "other_m": {
                    "type": "integer"
                },
                "other_u": {
                    "type": "integer"
                },
                "owner_a": {
                    "type": "integer"
                },
                "owner_m": {
                    "type": "integer"
                },
                "owner_u": {
                    "type": "integer"
                }
            }
        },
        "hc.DatastoreTemplate": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vcenter_dcname": {
                    "type": "string"
                },
                "vcenter_dcref": {
                    "type": "string"
                },
                "vcenter_dsname": {
                    "type": "string"
                },
                "vcenter_dsref": {
                    "type": "string"
                },
                "vcenter_host": {
                    "type": "string"
                },
                "vcenter_instance_id": {
                    "type": "string"
                }
            }
        },
        "hc.DefaultGroupQuotas": {
            "type": "object",
            "properties": {
                "datastore_quota": {
                    "$ref": "#/definitions/hc.GroupAnon1"
                },
                "image_quota": {
                    "$ref": "#/definitions/hc.GroupAnon7"
                },
                "network_quota": {
                    "$ref": "#/definitions/hc.GroupAnon3"
                },
                "vmquota": {
                    "$ref": "#/definitions/hc.GroupAnon5"
                }
            }
        },
        "hc.DefaultUserQuotas": {
            "type": "object",
            "properties": {
                "datastore_quota": {
                    "$ref": "#/definitions/hc.UserAnon1"
                },
                "image_quota": {
                    "$ref": "#/definitions/hc.UserAnon7"
                },
                "network_quota": {
                    "$ref": "#/definitions/hc.UserAnon3"
                },
                "vmquota": {
                    "$ref": "#/definitions/hc.UserAnon5"
                }
            }
        },
        "hc.DeleteTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.DeployInstanceRequest": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                },
                "enforce": {
                    "type": "boolean"
                },
                "host": {
                    "type": "integer"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.DeployInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.Document": {
            "type": "object",
            "properties": {
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lock": {
                    "$ref": "#/definitions/hc.DocumentLock"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.DocumentPermissions"
                },
                "template": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                },
                "uname": {
                    "type": "string"
                }
            }
        },
        "hc.DocumentLock": {
            "type": "object",
            "properties": {
                "locked": {
                    "type": "integer"
                },
                "owner": {
                    "type": "integer"
                },
                "req_id": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "hc.DocumentPermissions": {
            "type": "object",
            "properties": {
                "group_a": {
                    "type": "integer"
                },
                "group_m": {
                    "type": "integer"
                },
                "group_u": {
                    "type": "integer"
                },
                "other_a": {
                    "type": "integer"
                },
                "other_m": {
                    "type": "integer"
                },
                "other_u": {
                    "type": "integer"
                },
                "owner_a": {
                    "type": "integer"
                },
                "owner_m": {
                    "type": "integer"
                },
                "owner_u": {
                    "type": "integer"
                }
            }
        },
        "hc.EnableDatastoreRequest": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "hc.EnableDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "hc.EnableImageRequest": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "hc.EnableImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "hc.EnableMarketAppRequest": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "hc.EnableMarketAppResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "hc.EnableMarketRequest": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "hc.EnableMarketResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "hc.EnableUserRequest": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "hc.EnableUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.EnableZoneRequest": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "hc.EnableZoneResponse": {
            "type": "object",
            "properties": {
                "zone": {
                    "type": "integer"
                }
            }
        },
        "hc.FlattenImageSnapshotResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "hc.Group": {
            "type": "object",
            "properties": {
                "admins": {
                    "$ref": "#/definitions/hc.GroupAdmins"
                },
                "datastore_quota": {
                    "$ref": "#/definitions/hc.GroupDatastoreQuota"
                },
                "default_group_quotas": {
                    "$ref": "#/definitions/hc.DefaultGroupQuotas"
                },
                "id": {
                    "type": "integer"
                },
                "image_quota": {
                    "$ref": "#/definitions/hc.GroupImageQuota"
                },
                "name": {
                    "type": "string"
                },
                "network_quota": {
                    "$ref": "#/definitions/hc.GroupNetworkQuota"
                },
                "template": {
                    "type": "string"
                },
                "users": {
                    "$ref": "#/definitions/hc.GroupUsers"
                },
                "vmquota": {
                    "$ref": "#/definitions/hc.GroupVMQuota"
                }
            }
        },
        "hc.GroupAdmins": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.GroupAnon1": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.GroupAnon2"
                    }
                }
            }
        },
        "hc.GroupAnon2": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "string"
                },
                "images_used": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "size_used": {
                    "type": "string"
                }
            }
        },
        "hc.GroupAnon3": {
            "type": "object",
            "properties": {
                "network": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.GroupAnon4"
                    }
                }
            }
        },
        "hc.GroupAnon4": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "leases": {
                    "type": "string"
                },
                "leases_used": {
                    "type": "string"
                }
            }
        },
        "hc.GroupAnon5": {
            "type": "object",
            "properties": {
                "vm": {
                    "$ref": "#/definitions/hc.GroupAnon6"
                }
            }
        },
        "hc.GroupAnon6": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "number"
                },
                "cpuused": {
                    "type": "number"
                },
                "memory": {
                    "type": "integer"
                },
                "memory_used": {
                    "type": "integer"
                },
                "running_cpu": {
                    "type": "number"
                },
                "running_cpuused": {
                    "type": "number"
                },
                "running_memory": {
                    "type": "integer"
                },
                "running_memory_used": {
                    "type": "integer"
                },
                "running_vms": {
                    "type": "integer"
                },
                "running_vms_used": {
                    "type": "integer"
                },
                "system_disk_size": {
                    "type": "integer"
                },
                "system_disk_size_used": {
                    "type": "integer"
                },
                "vms": {
                    "type": "integer"
                },
                "vms_used": {
                    "type": "integer"
                }
            }
        },
        "hc.GroupAnon7": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.GroupAnon8"
                    }
                }
            }
        },
        "hc.GroupAnon8": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "rvms": {
                    "type": "string"
                },
                "rvms_used": {
                    "type": "string"
                }
            }
        },
        "hc.GroupDatastore": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "string"
                },
                "images_used": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "size_used": {
                    "type": "string"
                }
            }
        },
        "hc.GroupDatastoreQuota": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.GroupDatastore"
                    }
                }
            }
        },
        "hc.GroupImage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "rvms": {
                    "type": "string"
                },
                "rvms_used": {
                    "type": "string"
                }
            }
        },
        "hc.GroupImageQuota": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.GroupImage"
                    }
                }
            }
        },
        "hc.GroupNetwork": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "leases": {
                    "type": "string"
                },
                "leases_used": {
                    "type": "string"
                }
            }
        },
        "hc.GroupNetworkQuota": {
            "type": "object",
            "properties": {
                "network": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.GroupNetwork"
                    }
                }
            }
        },
        "hc.GroupUsers": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.GroupVM": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "number"
                },
                "cpuused": {
                    "type": "number"
                },
                "memory": {
                    "type": "integer"
                },
                "memory_used": {
                    "type": "integer"
                },
                "running_cpu": {
                    "type": "number"
                },
                "running_cpuused": {
                    "type": "number"
                },
                "running_memory": {
                    "type": "integer"
                },
                "running_memory_used": {
                    "type": "integer"
                },
                "running_vms": {
                    "type": "integer"
                },
                "running_vms_used": {
                    "type": "integer"
                },
                "system_disk_size": {
                    "type": "integer"
                },
                "system_disk_size_used": {
                    "type": "integer"
                },
                "vms": {
                    "type": "integer"
                },
                "vms_used": {
                    "type": "integer"
                }
            }
        },
        "hc.GroupVMQuota": {
            "type": "object",
            "properties": {
                "vm": {
                    "$ref": "#/definitions/hc.GroupVM"
                }
            }
        },
        "hc.HoldVNetRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.HoldVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.Hook": {
            "type": "object",
            "properties": {
                "hooklog": {
                    "$ref": "#/definitions/hc.HookLog"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "template": {
                    "$ref": "#/definitions/hc.HookTemplate"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "hc.HookExecutionRecord": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "execution_id": {
                    "type": "integer"
                },
                "execution_result": {
                    "$ref": "#/definitions/hc.HookExecutionResult"
                },
                "hook_id": {
                    "type": "integer"
                },
                "remote_host": {
                    "type": "string"
                },
                "retry": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "hc.HookExecutionResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "stderr": {
                    "type": "string"
                },
                "stdout": {
                    "type": "string"
                }
            }
        },
        "hc.HookLog": {
            "type": "object",
            "properties": {
                "hook_execution_record": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.HookExecutionRecord"
                    }
                }
            }
        },
        "hc.HookTemplate": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "arguments_stdin": {
                    "type": "string"
                },
                "call": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "lcm_state": {
                    "type": "string"
                },
                "remote": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "hc.Host": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "cluster_id": {
                    "type": "integer"
                },
                "host_share": {
                    "$ref": "#/definitions/hc.HostShare"
                },
                "id": {
                    "type": "integer"
                },
                "im_mad": {
                    "type": "string"
                },
                "monitoring": {
                    "$ref": "#/definitions/hc.HostMonitoring"
                },
                "name": {
                    "type": "string"
                },
                "prev_state": {
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/definitions/hc.HostTemplate"
                },
                "vmmad": {
                    "type": "string"
                },
                "vms": {
                    "$ref": "#/definitions/hc.HostVMs"
                }
            }
        },
        "hc.HostCapacity": {
            "type": "object",
            "properties": {
                "free_cpu": {
                    "type": "integer"
                },
                "free_memory": {
                    "type": "integer"
                },
                "used_cpu": {
                    "type": "integer"
                },
                "used_memory": {
                    "type": "integer"
                }
            }
        },
        "hc.HostCore": {
            "type": "object",
            "properties": {
                "cpus": {
                    "type": "string"
                },
                "dedicated": {
                    "type": "string"
                },
                "free": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "hc.HostDatastores": {
            "type": "object",
            "properties": {
                "disk_usage": {
                    "type": "integer"
                },
                "free_disk": {
                    "type": "integer"
                },
                "max_disk": {
                    "type": "integer"
                },
                "used_disk": {
                    "type": "integer"
                }
            }
        },
        "hc.HostHugepage": {
            "type": "object",
            "properties": {
                "free": {
                    "type": "integer"
                },
                "pages": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                }
            }
        },
        "hc.HostMemory": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "string"
                },
                "free": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "used": {
                    "type": "integer"
                }
            }
        },
        "hc.HostMonitoring": {
            "type": "object",
            "properties": {
                "capacity": {
                    "$ref": "#/definitions/hc.HostCapacity"
                },
                "id": {
                    "type": "integer"
                },
                "system": {
                    "$ref": "#/definitions/hc.HostSystem"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "hc.HostNode": {
            "type": "object",
            "properties": {
                "core": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.HostCore"
                    }
                },
                "hugepage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.HostHugepage"
                    }
                },
                "memory": {
                    "$ref": "#/definitions/hc.HostMemory"
                },
                "node_id": {
                    "type": "integer"
                }
            }
        },
        "hc.HostNumaNodes": {
            "type": "object",
            "properties": {
                "node": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.HostNode"
                    }
                }
            }
        },
        "hc.HostPCI": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "bus": {
                    "type": "string"
                },
                "class": {
                    "type": "string"
                },
                "class_name": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "function": {
                    "type": "string"
                },
                "numa_node": {
                    "type": "string"
                },
                "short_address": {
                    "type": "string"
                },
                "slot": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vendor": {
                    "type": "string"
                },
                "vendor_name": {
                    "type": "string"
                },
                "vmid": {
                    "type": "integer"
                }
            }
        },
        "hc.HostPCIDevices": {
            "type": "object",
            "properties": {
                "pci": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.HostPCI"
                    }
                }
            }
        },
        "hc.HostShare": {
            "type": "object",
            "properties": {
                "cpuusage": {
                    "type": "integer"
                },
                "datastores": {
                    "$ref": "#/definitions/hc.HostDatastores"
                },
                "max_cpu": {
                    "type": "integer"
                },
                "max_mem": {
                    "type": "integer"
                },
                "mem_usage": {
                    "type": "integer"
                },
                "numa_nodes": {
                    "$ref": "#/definitions/hc.HostNumaNodes"
                },
                "pcidevices": {
                    "$ref": "#/definitions/hc.HostPCIDevices"
                },
                "running_vms": {
                    "type": "integer"
                },
                "total_cpu": {
                    "type": "integer"
                },
                "total_mem": {
                    "type": "integer"
                },
                "vms_thread": {
                    "type": "integer"
                }
            }
        },
        "hc.HostSystem": {
            "type": "object",
            "properties": {
                "netrx": {
                    "type": "integer"
                },
                "nettx": {
                    "type": "integer"
                }
            }
        },
        "hc.HostTemplate": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vcenter_ccrref": {
                    "type": "string"
                },
                "vcenter_dsref": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vcenter_host": {
                    "type": "string"
                },
                "vcenter_instance_id": {
                    "type": "string"
                },
                "vcenter_name": {
                    "type": "string"
                },
                "vcenter_password": {
                    "type": "string"
                },
                "vcenter_resource_pool_info": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vcenter_user": {
                    "type": "string"
                },
                "vcenter_version": {
                    "type": "string"
                }
            }
        },
        "hc.HostVMs": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.HyperCloudConfiguration": {
            "type": "object",
            "properties": {
                "api_list_order": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "auth_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigAuthMAD"
                    }
                },
                "auth_madconf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigAuthMADConf"
                    }
                },
                "cluster_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "datastore_capacity_check": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "datastore_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "datastore_location": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "datastore_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigDatastoreMAD"
                    }
                },
                "db": {
                    "$ref": "#/definitions/hc.ConfigDB"
                },
                "default_auth": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_cdrom_device_prefix": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_cost": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigDefaultCost"
                    }
                },
                "default_device_prefix": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_image_persistent": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_image_persistent_new": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_image_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_umask": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_vdccluster_datastore_acl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_vdccluster_host_acl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_vdccluster_net_acl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_vdcdatastore_acl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_vdchost_acl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_vdcvnet_acl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "document_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dsmadconf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigDSMADConf"
                    }
                },
                "dsmonitor_instance_disk": {
                    "type": "integer"
                },
                "enable_other_permissions": {
                    "type": "string"
                },
                "federation": {
                    "$ref": "#/definitions/hc.ConfigFederation"
                },
                "group_restricted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hm_mad": {
                    "$ref": "#/definitions/hc.ConfigHmMAD"
                },
                "hook_log_conf": {
                    "$ref": "#/definitions/hc.ConfigHookLogConf"
                },
                "host_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "im_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigImMAD"
                    }
                },
                "image_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "image_restricted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inherit_datastore_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inherit_image_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inherit_vnet_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instance_admin_operations": {
                    "type": "string"
                },
                "instance_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instance_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigInstanceMAD"
                    }
                },
                "instance_manage_operations": {
                    "type": "string"
                },
                "instance_monitoring_expiration_time": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instance_restricted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instance_snapshot_factor": {
                    "type": "string"
                },
                "instance_submit_on_hold": {
                    "type": "string"
                },
                "instance_use_operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipam_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigIpamMAD"
                    }
                },
                "keepalive_max_conn": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "keepalive_timeout": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "listen_address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "log": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigLog"
                    }
                },
                "log_call_format": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "macprefix": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "manager_timer": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "market_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigMarketMAD"
                    }
                },
                "market_madconf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigMarketMADConf"
                    }
                },
                "max_conn": {
                    "type": "integer"
                },
                "max_conn_backlog": {
                    "type": "integer"
                },
                "message_size": {
                    "type": "integer"
                },
                "monitoring_interval_datastore": {
                    "type": "integer"
                },
                "monitoring_interval_dbupdate": {
                    "type": "integer"
                },
                "monitoring_interval_host": {
                    "type": "integer"
                },
                "monitoring_interval_instance": {
                    "type": "integer"
                },
                "monitoring_interval_market": {
                    "type": "integer"
                },
                "network_size": {
                    "type": "integer"
                },
                "one_key": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pcipassthrough_bus": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "raft": {
                    "$ref": "#/definitions/hc.ConfigRaft"
                },
                "rpclog": {
                    "type": "string"
                },
                "scripts_remote_dir": {
                    "type": "string"
                },
                "session_expiration_time": {
                    "type": "integer"
                },
                "showback_only_running": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "tm_mad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigTmMAD"
                    }
                },
                "tm_madconf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigTmMADConf"
                    }
                },
                "user_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_restricted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vlanids": {
                    "$ref": "#/definitions/hc.ConfigVLANIDs"
                },
                "vncports": {
                    "$ref": "#/definitions/hc.ConfigVNCPorts"
                },
                "vnet_encrypted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vnet_restricted_attr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vnmadconf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ConfigVNMADConf"
                    }
                },
                "vxlan_ids": {
                    "$ref": "#/definitions/hc.ConfigVxlanIDs"
                }
            }
        },
        "hc.Image": {
            "type": "object",
            "properties": {
                "app_clones": {
                    "$ref": "#/definitions/hc.ImageAppClones"
                },
                "clones": {
                    "$ref": "#/definitions/hc.ImageClones"
                },
                "cloning_id": {
                    "type": "integer"
                },
                "cloning_ops": {
                    "type": "integer"
                },
                "datastore": {
                    "type": "string"
                },
                "datastore_id": {
                    "type": "integer"
                },
                "disk_type": {
                    "type": "integer"
                },
                "format": {
                    "type": "string"
                },
                "fs": {
                    "type": "string"
                },
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lock": {
                    "$ref": "#/definitions/hc.ImageLock"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.ImagePermissions"
                },
                "persistent": {
                    "type": "integer"
                },
                "prev_state": {
                    "type": "integer"
                },
                "regtime": {
                    "type": "integer"
                },
                "running_vms": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "snapshots": {
                    "$ref": "#/definitions/hc.ImageSnapshots"
                },
                "source": {
                    "type": "string"
                },
                "state": {
                    "type": "integer"
                },
                "target_snapshot": {
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/definitions/hc.ImageTemplate"
                },
                "type": {
                    "type": "integer"
                },
                "uid": {
                    "type": "integer"
                },
                "uname": {
                    "type": "string"
                },
                "vms": {
                    "$ref": "#/definitions/hc.ImageVMs"
                }
            }
        },
        "hc.ImageAppClones": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.ImageClones": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.ImageLock": {
            "type": "object",
            "properties": {
                "locked": {
                    "type": "integer"
                },
                "owner": {
                    "type": "integer"
                },
                "req_id": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "hc.ImagePermissions": {
            "type": "object",
            "properties": {
                "group_a": {
                    "type": "integer"
                },
                "group_m": {
                    "type": "integer"
                },
                "group_u": {
                    "type": "integer"
                },
                "other_a": {
                    "type": "integer"
                },
                "other_m": {
                    "type": "integer"
                },
                "other_u": {
                    "type": "integer"
                },
                "owner_a": {
                    "type": "integer"
                },
                "owner_m": {
                    "type": "integer"
                },
                "owner_u": {
                    "type": "integer"
                }
            }
        },
        "hc.ImageSnapshot": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "string"
                },
                "children": {
                    "type": "string"
                },
                "date": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "hc.ImageSnapshots": {
            "type": "object",
            "properties": {
                "allow_orphans": {
                    "type": "string"
                },
                "current_base": {
                    "type": "integer"
                },
                "next_snapshot": {
                    "type": "string"
                },
                "snapshot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ImageSnapshot"
                    }
                }
            }
        },
        "hc.ImageTemplate": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vcenter_imported": {
                    "type": "string"
                }
            }
        },
        "hc.ImageVMs": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.Instance": {
            "type": "object",
            "properties": {
                "deploy_id": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "gid": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "history_records": {
                    "$ref": "#/definitions/hc.InstanceHistoryRecords"
                },
                "id": {
                    "type": "integer"
                },
                "last_poll": {
                    "type": "integer"
                },
                "lcm_state": {
                    "$ref": "#/definitions/hc.LCMState"
                },
                "lock": {
                    "$ref": "#/definitions/hc.InstanceLock"
                },
                "monitoring": {
                    "$ref": "#/definitions/hc.InstanceMonitoring"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.InstancePermissions"
                },
                "prev_lcm_state": {
                    "$ref": "#/definitions/hc.LCMState"
                },
                "prev_state": {
                    "$ref": "#/definitions/hc.InstanceState"
                },
                "resched": {
                    "type": "integer"
                },
                "snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceSnapshots"
                    }
                },
                "start_time": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/hc.InstanceState"
                },
                "template": {
                    "$ref": "#/definitions/hc.InstanceTemplateData"
                },
                "uid": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "user_template": {
                    "$ref": "#/definitions/hc.InstanceUserTemplate"
                }
            }
        },
        "hc.InstanceAnon": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "string"
                },
                "children": {
                    "type": "string"
                },
                "date": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "hc.InstanceDisk": {
            "type": "object",
            "properties": {
                "allow_orphans": {
                    "type": "string"
                },
                "clone": {
                    "type": "boolean"
                },
                "clone_target": {
                    "type": "string"
                },
                "cluster_id": {
                    "type": "string"
                },
                "datastore": {
                    "type": "string"
                },
                "datastore_id": {
                    "type": "string"
                },
                "dev_prefix": {
                    "type": "string"
                },
                "disk_id": {
                    "type": "string"
                },
                "disk_snapshot_total_size": {
                    "type": "string"
                },
                "disk_type": {
                    "type": "string"
                },
                "driver": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "image_state": {
                    "type": "string"
                },
                "ln_target": {
                    "type": "string"
                },
                "original_size": {
                    "type": "string"
                },
                "pool_name": {
                    "type": "string"
                },
                "readonly": {
                    "type": "boolean"
                },
                "save": {
                    "type": "boolean"
                },
                "size": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tm_mad": {
                    "type": "string"
                },
                "tm_madsystem": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vcenter_dsref": {
                    "type": "string"
                },
                "vcenter_instance_id": {
                    "type": "string"
                }
            }
        },
        "hc.InstanceDiskSize": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "hc.InstanceGroup": {
            "type": "object",
            "properties": {
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lock": {
                    "$ref": "#/definitions/hc.InstanceGroupLock"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.InstanceGroupPermissions"
                },
                "roles": {
                    "$ref": "#/definitions/hc.InstanceGroupRoles"
                },
                "template": {
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                },
                "uname": {
                    "type": "string"
                }
            }
        },
        "hc.InstanceGroupLock": {
            "type": "object",
            "properties": {
                "locked": {
                    "type": "integer"
                },
                "owner": {
                    "type": "integer"
                },
                "req_id": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "hc.InstanceGroupPermissions": {
            "type": "object",
            "properties": {
                "group_a": {
                    "type": "integer"
                },
                "group_m": {
                    "type": "integer"
                },
                "group_u": {
                    "type": "integer"
                },
                "other_a": {
                    "type": "integer"
                },
                "other_m": {
                    "type": "integer"
                },
                "other_u": {
                    "type": "integer"
                },
                "owner_a": {
                    "type": "integer"
                },
                "owner_m": {
                    "type": "integer"
                },
                "owner_u": {
                    "type": "integer"
                }
            }
        },
        "hc.InstanceGroupRole": {
            "type": "object",
            "properties": {
                "host_affined": {
                    "type": "string"
                },
                "host_anti_affined": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                }
            }
        },
        "hc.InstanceGroupRoles": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceGroupRole"
                    }
                }
            }
        },
        "hc.InstanceHistory": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "integer"
                },
                "cid": {
                    "type": "integer"
                },
                "dsid": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "epilog_end_time": {
                    "type": "string"
                },
                "epilog_start_time": {
                    "type": "string"
                },
                "gid": {
                    "type": "integer"
                },
                "hid": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "instance_mad": {
                    "type": "string"
                },
                "oid": {
                    "type": "integer"
                },
                "prolog_end_time": {
                    "type": "string"
                },
                "prolog_start_time": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "running_end_time": {
                    "type": "string"
                },
                "running_start_time": {
                    "type": "string"
                },
                "sequence_number": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "tm_mad": {
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                }
            }
        },
        "hc.InstanceHistoryRecords": {
            "type": "object",
            "properties": {
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceHistory"
                    }
                }
            }
        },
        "hc.InstanceLock": {
            "type": "object",
            "properties": {
                "locked": {
                    "type": "integer"
                },
                "owner": {
                    "type": "integer"
                },
                "req_id": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "hc.InstanceMonitoring": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "number"
                },
                "disk_read_bytes": {
                    "type": "integer"
                },
                "disk_read_iops": {
                    "type": "integer"
                },
                "disk_size": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceDiskSize"
                    }
                },
                "disk_write_bytes": {
                    "type": "integer"
                },
                "disk_write_iops": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "memory": {
                    "type": "integer"
                },
                "netrx": {
                    "type": "integer"
                },
                "nettx": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "integer"
                },
                "vcenter_esxhost": {
                    "type": "string"
                },
                "vcenter_guest_state": {
                    "type": "string"
                },
                "vcenter_rpname": {
                    "type": "string"
                },
                "vcenter_vmname": {
                    "type": "string"
                },
                "vcenter_vmware_tools_running_status": {
                    "type": "string"
                },
                "vcenter_vmware_tools_version": {
                    "type": "string"
                },
                "vcenter_vmware_tools_version_status": {
                    "type": "string"
                }
            }
        },
        "hc.InstanceNIC": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vcenter_instance_id": {
                    "type": "string"
                },
                "vcenter_net_ref": {
                    "type": "string"
                },
                "vcenter_portgroup_type": {
                    "type": "string"
                }
            }
        },
        "hc.InstanceNICAlias": {
            "type": "object",
            "properties": {
                "alias_id": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vcenter_instance_id": {
                    "type": "string"
                },
                "vcenter_net_ref": {
                    "type": "string"
                },
                "vcenter_portgroup_type": {
                    "type": "string"
                }
            }
        },
        "hc.InstancePermissions": {
            "type": "object",
            "properties": {
                "group_admin": {
                    "type": "boolean"
                },
                "group_manage": {
                    "type": "boolean"
                },
                "group_use": {
                    "type": "boolean"
                },
                "other_admin": {
                    "type": "boolean"
                },
                "other_manage": {
                    "type": "boolean"
                },
                "other_use": {
                    "type": "boolean"
                },
                "owner_admin": {
                    "type": "boolean"
                },
                "owner_manage": {
                    "type": "boolean"
                },
                "owner_use": {
                    "type": "boolean"
                }
            }
        },
        "hc.InstanceSchedAction": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "args": {
                    "type": "string"
                },
                "days": {
                    "type": "string"
                },
                "end_type": {
                    "type": "string"
                },
                "end_value": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "repeat": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "warning": {
                    "type": "string"
                }
            }
        },
        "hc.InstanceSnapshot": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "hypervisor_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "snapshot_id": {
                    "type": "integer"
                },
                "system_disk_size": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "hc.InstanceSnapshots": {
            "type": "object",
            "properties": {
                "allow_orphans": {
                    "type": "string"
                },
                "current_base": {
                    "type": "integer"
                },
                "disk_id": {
                    "type": "integer"
                },
                "next_snapshot": {
                    "type": "integer"
                },
                "snapshot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceAnon"
                    }
                }
            }
        },
        "hc.InstanceState": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                -2,
                -1
            ],
            "x-enum-comments": {
                "ActiveState": "active",
                "AnyState": "all",
                "CloningFailedState": "cloning_failed",
                "CloningState": "cloning",
                "DoneState": "done",
                "HoldState": "hold",
                "InitState": "init",
                "NotDoneState": "not_done",
                "OffState": "off",
                "PendingState": "pending",
                "StoppedState": "stopped",
                "SuspendedState": "suspended",
                "UndeployedState": "undeployed"
            },
            "x-enum-varnames": [
                "InitState",
                "PendingState",
                "HoldState",
                "ActiveState",
                "StoppedState",
                "SuspendedState",
                "DoneState",
                "_",
                "OffState",
                "UndeployedState",
                "CloningState",
                "CloningFailedState",
                "AnyState",
                "NotDoneState"
            ]
        },
        "hc.InstanceTemplate": {
            "type": "object",
            "properties": {
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lock": {
                    "$ref": "#/definitions/hc.InstanceTemplateLock"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.InstanceTemplatePermissions"
                },
                "regtime": {
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/definitions/hc.VMTemplateData"
                },
                "uid": {
                    "type": "integer"
                },
                "uname": {
                    "type": "string"
                }
            }
        },
        "hc.InstanceTemplateData": {
            "type": "object",
            "properties": {
                "automatic_dsrequirements": {
                    "type": "string"
                },
                "automatic_nicrequirements": {
                    "type": "string"
                },
                "automatic_requirements": {
                    "type": "string"
                },
                "cloning_template_id": {
                    "type": "string"
                },
                "context": {
                    "type": "string"
                },
                "cpu": {
                    "type": "string"
                },
                "cpucost": {
                    "type": "string"
                },
                "disk": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceDisk"
                    }
                },
                "disk_cost": {
                    "type": "string"
                },
                "emulator": {
                    "type": "string"
                },
                "features": {
                    "type": "string"
                },
                "graphics": {
                    "type": "string"
                },
                "hyperv_options": {
                    "type": "string"
                },
                "imported": {
                    "type": "string"
                },
                "input": {
                    "type": "string"
                },
                "instance_group": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instance_id": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "memory_cost": {
                    "type": "string"
                },
                "memory_max": {
                    "type": "string"
                },
                "memory_resize_mode": {
                    "type": "string"
                },
                "memory_slots": {
                    "type": "string"
                },
                "nic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceNIC"
                    }
                },
                "nic_alias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceNICAlias"
                    }
                },
                "nic_default": {
                    "type": "string"
                },
                "numa_node": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "pci": {
                    "type": "string"
                },
                "raw": {
                    "type": "string"
                },
                "sched_action": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceSchedAction"
                    }
                },
                "security_group_rule": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "snapshot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceSnapshot"
                    }
                },
                "spice_options": {
                    "type": "string"
                },
                "submit_on_hold": {
                    "type": "string"
                },
                "template_id": {
                    "type": "string"
                },
                "tm_madsystem": {
                    "type": "string"
                },
                "topology": {
                    "type": "string"
                },
                "vcpu": {
                    "type": "string"
                },
                "vcpu_max": {
                    "type": "string"
                },
                "vrouter_id": {
                    "type": "string"
                },
                "vrouter_keepalived_id": {
                    "type": "string"
                },
                "vrouter_keepalived_password": {
                    "type": "string"
                }
            }
        },
        "hc.InstanceTemplateLock": {
            "type": "object",
            "properties": {
                "locked": {
                    "type": "integer"
                },
                "owner": {
                    "type": "integer"
                },
                "req_id": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "hc.InstanceTemplatePermissions": {
            "type": "object",
            "properties": {
                "group_a": {
                    "type": "integer"
                },
                "group_m": {
                    "type": "integer"
                },
                "group_u": {
                    "type": "integer"
                },
                "other_a": {
                    "type": "integer"
                },
                "other_m": {
                    "type": "integer"
                },
                "other_u": {
                    "type": "integer"
                },
                "owner_a": {
                    "type": "integer"
                },
                "owner_m": {
                    "type": "integer"
                },
                "owner_u": {
                    "type": "integer"
                }
            }
        },
        "hc.InstanceUserTemplate": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "hypervisor": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "lxdsecurity_privileged": {
                    "type": "boolean"
                },
                "sched_requirements": {
                    "type": "string"
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vcenter_ccrref": {
                    "type": "string"
                },
                "vcenter_dsref": {
                    "type": "string"
                },
                "vcenter_instance_id": {
                    "type": "string"
                }
            }
        },
        "hc.InstantiateTemplateRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "disk_copy": {
                    "type": "boolean"
                },
                "hold": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.InstantiateTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.InstantiateVNetTemplateRequest": {
            "type": "object",
            "properties": {
                "extra": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.InstantiateVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.InstantiateVRouterRequest": {
            "type": "object",
            "properties": {
                "extra": {
                    "type": "string"
                },
                "instance_template": {
                    "type": "integer"
                },
                "instances": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pending": {
                    "type": "boolean"
                }
            }
        },
        "hc.InstantiateVRouterResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "hc.LCMState": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61
            ],
            "x-enum-comments": {
                "BootFailureLCMState": "boot_failure",
                "BootLCMState": "boot",
                "BootMigrateFailureLCMState": "boot_migrate_failure",
                "BootMigrateLCMState": "boot_migrate",
                "BootPowerOffLCMState": "boot_poweroff",
                "BootStoppedFailureLCMState": "boot_stopped_failure",
                "BootStoppedLCMState": "boot_stopped",
                "BootSuspendedLCMState": "boot_suspended",
                "BootUndeployFailureLCMState": "boot_undeploy_failure",
                "BootUndeployLCMState": "boot_undeploy",
                "BootUnknownLCMState": "boot_unknown",
                "CleanupDeleteLCMState": "cleanup_delete",
                "CleanupResubmitLCMState": "cleanup_resubmit",
                "DiskSnapshotDeleteLCMState": "disk_snapshot_delete",
                "DiskSnapshotDeletePowerOffLCMState": "disk_snapshot_delete_poweroff",
                "DiskSnapshotDeleteSuspendedLCMState": "disk_snapshot_delete_suspended",
                "DiskSnapshotLCMState": "disk_snapshot",
                "DiskSnapshotPowerOffLCMState": "disk_snapshot_poweroff",
                "DiskSnapshotRevertPowerOffLCMState": "disk_snapshot_revert_poweroff",
                "DiskSnapshotRevertSuspendedLCMState": "disk_snapshot_revert_suspended",
                "DiskSnapshotSuspendLCMState": "disk_snapshot_suspend",
                "EpilogFailureLCMState": "epilog_failure",
                "EpilogLCMState": "epilog",
                "EpilogStopFailureLCMState": "epilog_stop_failure",
                "EpilogStopLCMState": "epilog_stop",
                "EpilogUndeployFailureLCMState": "epilog_undeploy_failure",
                "EpilogUndeployLCMState": "epilog_undeploy",
                "HotplugEpilogPowerOffLCMState": "hotplug_epilog_poweroff",
                "HotplugLCMState": "hotplug",
                "HotplugNICLCMState": "hotplug_nic",
                "HotplugPrologPowerOffLCMState": "hotplug_prolog_poweroff",
                "HotplugSaveAsLCMState": "hotplug_saveas",
                "HotplugSaveAsPowerOffLCMState": "hotplug_saveas_poweroff",
                "HotplugSnapshotLCMState": "hotplug_snapshot",
                "HotplutSaveAsSuspendedLCMState": "hotplug_saveas_suspended",
                "InitLCMState": "init",
                "MigrateLCMState": "migrate",
                "PrologFailureLCMState": "prolog_failure",
                "PrologLCMState": "prolog",
                "PrologMigrageSuspendFailureLCMState": "prolog_migrate_suspend_failure",
                "PrologMigrageSuspendLCMState": "prolog_migrate_suspend",
                "PrologMigrateFailureLCMState": "prolog_migrate_failure",
                "PrologMigrateLCMState": "prolog_migrate",
                "PrologMigratePowerOffFailureLCMState": "prolog_migrate_poweroff_failure",
                "PrologMigratePowerOffLCMState": "prolog_migrate_poweroff",
                "PrologMigrateUnknownFailureLCMState": "prolog_migrate_unknown_failure",
                "PrologMigrateUnknownLCMState": "prolog_migrate_unknown",
                "PrologResumeFailureLCMState": "prolog_resume_failure",
                "PrologResumeLCMState": "prolog_resume",
                "PrologUndeployFailureLCMState": "prolog_undeploy_failure",
                "PrologUndeployLCMState": "prolog_undeploy",
                "RunningLCMState": "running",
                "SaveMigrateLCMState": "save_migrate",
                "SaveStopLCMState": "save_stop",
                "SaveSuspendLCMState": "save_suspend",
                "ShutdownLCMState": "shutdown",
                "ShutdownPowerOffLCMState": "shutdown_poweroff",
                "ShutdownUndeployLCMState": "shutdown_undeploy",
                "UnknownLCMState": "unknown"
            },
            "x-enum-varnames": [
                "InitLCMState",
                "PrologLCMState",
                "BootLCMState",
                "RunningLCMState",
                "MigrateLCMState",
                "SaveStopLCMState",
                "SaveSuspendLCMState",
                "SaveMigrateLCMState",
                "PrologMigrateLCMState",
                "PrologResumeLCMState",
                "EpilogStopLCMState",
                "EpilogLCMState",
                "ShutdownLCMState",
                "_",
                "_",
                "CleanupResubmitLCMState",
                "UnknownLCMState",
                "HotplugLCMState",
                "ShutdownPowerOffLCMState",
                "BootUnknownLCMState",
                "BootPowerOffLCMState",
                "BootSuspendedLCMState",
                "BootStoppedLCMState",
                "CleanupDeleteLCMState",
                "HotplugSnapshotLCMState",
                "HotplugNICLCMState",
                "HotplugSaveAsLCMState",
                "HotplugSaveAsPowerOffLCMState",
                "HotplutSaveAsSuspendedLCMState",
                "ShutdownUndeployLCMState",
                "EpilogUndeployLCMState",
                "PrologUndeployLCMState",
                "BootUndeployLCMState",
                "HotplugPrologPowerOffLCMState",
                "HotplugEpilogPowerOffLCMState",
                "BootMigrateLCMState",
                "BootFailureLCMState",
                "BootMigrateFailureLCMState",
                "PrologMigrateFailureLCMState",
                "PrologFailureLCMState",
                "EpilogFailureLCMState",
                "EpilogStopFailureLCMState",
                "EpilogUndeployFailureLCMState",
                "PrologMigratePowerOffLCMState",
                "PrologMigratePowerOffFailureLCMState",
                "PrologMigrageSuspendLCMState",
                "PrologMigrageSuspendFailureLCMState",
                "BootUndeployFailureLCMState",
                "BootStoppedFailureLCMState",
                "PrologResumeFailureLCMState",
                "PrologUndeployFailureLCMState",
                "DiskSnapshotPowerOffLCMState",
                "DiskSnapshotRevertPowerOffLCMState",
                "DiskSnapshotDeletePowerOffLCMState",
                "DiskSnapshotSuspendLCMState",
                "DiskSnapshotRevertSuspendedLCMState",
                "DiskSnapshotDeleteSuspendedLCMState",
                "DiskSnapshotLCMState",
                "_",
                "DiskSnapshotDeleteLCMState",
                "PrologMigrateUnknownLCMState",
                "PrologMigrateUnknownFailureLCMState"
            ]
        },
        "hc.ListACLsResponse": {
            "type": "object",
            "properties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ACL"
                    }
                }
            }
        },
        "hc.ListClusterResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/hc.Cluster"
                }
            }
        },
        "hc.ListClustersResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.Cluster"
                    }
                }
            }
        },
        "hc.ListDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "$ref": "#/definitions/hc.Datastore"
                }
            }
        },
        "hc.ListDatastoresResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.Datastore"
                    }
                }
            }
        },
        "hc.ListDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "$ref": "#/definitions/hc.Document"
                }
            }
        },
        "hc.ListDocumentsResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.Document"
                    }
                }
            }
        },
        "hc.ListGroupQuotaResponse": {
            "type": "object",
            "properties": {
                "quota": {
                    "$ref": "#/definitions/hc.DefaultGroupQuotas"
                }
            }
        },
        "hc.ListGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "$ref": "#/definitions/hc.Group"
                }
            }
        },
        "hc.ListGroupsResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.Group"
                    }
                }
            }
        },
        "hc.ListHookLogResponse": {
            "type": "object",
            "properties": {
                "hook_log": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.HookLog"
                    }
                }
            }
        },
        "hc.ListHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "$ref": "#/definitions/hc.Hook"
                }
            }
        },
        "hc.ListHooksResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.Hook"
                    }
                }
            }
        },
        "hc.ListHostMonitoringResponse": {
            "type": "object",
            "properties": {
                "monitoring": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.HostMonitoring"
                    }
                }
            }
        },
        "hc.ListHostResponse": {
            "type": "object",
            "properties": {
                "host": {
                    "$ref": "#/definitions/hc.Host"
                }
            }
        },
        "hc.ListHostsMonitoringResponse": {
            "type": "object",
            "properties": {
                "monitoring": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.HostMonitoring"
                    }
                }
            }
        },
        "hc.ListHostsResponse": {
            "type": "object",
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.Host"
                    }
                }
            }
        },
        "hc.ListImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "$ref": "#/definitions/hc.Image"
                }
            }
        },
        "hc.ListImagesResponse": {
            "type": "object",
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.Image"
                    }
                }
            }
        },
        "hc.ListInstanceGroupResponse": {
            "type": "object",
            "properties": {
                "instance_group": {
                    "$ref": "#/definitions/hc.InstanceGroup"
                }
            }
        },
        "hc.ListInstanceGroupsResponse": {
            "type": "object",
            "properties": {
                "instance_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceGroup"
                    }
                }
            }
        },
        "hc.ListInstanceMonitoringResponse": {
            "type": "object",
            "properties": {
                "monitoring": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceMonitoring"
                    }
                }
            }
        },
        "hc.ListInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "$ref": "#/definitions/hc.Instance"
                }
            }
        },
        "hc.ListInstancesAccountingResponse": {
            "type": "object",
            "properties": {
                "accounting": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.AcctHistory"
                    }
                }
            }
        },
        "hc.ListInstancesMonitoringResponse": {
            "type": "object",
            "properties": {
                "monitoring": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceMonitoring"
                    }
                }
            }
        },
        "hc.ListInstancesResponse": {
            "type": "object",
            "properties": {
                "instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.Instance"
                    }
                }
            }
        },
        "hc.ListInstancesShowbackResponse": {
            "type": "object",
            "properties": {
                "showback": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.Showback"
                    }
                }
            }
        },
        "hc.ListMarketAppResponse": {
            "type": "object",
            "properties": {
                "application": {
                    "$ref": "#/definitions/hc.MarketplaceApp"
                }
            }
        },
        "hc.ListMarketAppsResponse": {
            "type": "object",
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.MarketplaceApp"
                    }
                }
            }
        },
        "hc.ListMarketResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "$ref": "#/definitions/hc.Marketplace"
                }
            }
        },
        "hc.ListMarketsResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.Marketplace"
                    }
                }
            }
        },
        "hc.ListSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "$ref": "#/definitions/hc.SecurityGroup"
                }
            }
        },
        "hc.ListSecurityGroupsResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.SecurityGroup"
                    }
                }
            }
        },
        "hc.ListSystemConfigResponse": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/hc.HyperCloudConfiguration"
                }
            }
        },
        "hc.ListSystemVersionResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                }
            }
        },
        "hc.ListTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "$ref": "#/definitions/hc.InstanceTemplate"
                }
            }
        },
        "hc.ListTemplatesResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.InstanceTemplate"
                    }
                }
            }
        },
        "hc.ListUserQuotaResponse": {
            "type": "object",
            "properties": {
                "quota": {
                    "$ref": "#/definitions/hc.DefaultUserQuotas"
                }
            }
        },
        "hc.ListUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/hc.User"
                }
            }
        },
        "hc.ListUsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.User"
                    }
                }
            }
        },
        "hc.ListVDCResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "$ref": "#/definitions/hc.VDC"
                }
            }
        },
        "hc.ListVDCsResponse": {
            "type": "object",
            "properties": {
                "vdcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.VDC"
                    }
                }
            }
        },
        "hc.ListVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "$ref": "#/definitions/hc.VNet"
                }
            }
        },
        "hc.ListVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "$ref": "#/definitions/hc.VNTemplateData"
                }
            }
        },
        "hc.ListVNetsResponse": {
            "type": "object",
            "properties": {
                "vnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.VNet"
                    }
                }
            }
        },
        "hc.ListVRouterResponse": {
            "type": "object",
            "properties": {
                "vrouter": {
                    "$ref": "#/definitions/hc.VRouter"
                }
            }
        },
        "hc.ListVRoutersResponse": {
            "type": "object",
            "properties": {
                "vrouters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.VRouter"
                    }
                }
            }
        },
        "hc.ListZoneResponse": {
            "type": "object",
            "properties": {
                "zone": {
                    "$ref": "#/definitions/hc.Zone"
                }
            }
        },
        "hc.ListZonesRaftStatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/hc.RaftStatus"
                }
            }
        },
        "hc.ListZonesResponse": {
            "type": "object",
            "properties": {
                "zones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.Zone"
                    }
                }
            }
        },
        "hc.LockDocumentRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "hc.LockDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "hc.LockHookRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "$ref": "#/definitions/hc.LockLevel"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "hc.LockHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "hc.LockImageRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "hc.LockImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "hc.LockInstanceGroupRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "hc.LockInstanceGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "hc.LockInstanceRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "hc.LockInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "hc.LockLevel": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-comments": {
                "AdminLockLevel": "admin",
                "AllLockLevel": "all",
                "ManageLockLevel": "manage",
                "UseLockLevel": "use"
            },
            "x-enum-varnames": [
                "_",
                "UseLockLevel",
                "ManageLockLevel",
                "AdminLockLevel",
                "AllLockLevel"
            ]
        },
        "hc.LockMarketAppRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "$ref": "#/definitions/hc.LockLevel"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "hc.LockMarketAppResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "hc.LockTemplateRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "$ref": "#/definitions/hc.LockLevel"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "hc.LockTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.LockVNetRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "hc.LockVNetResponse": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.LockVNetTemplateRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "hc.LockVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "hc.LockVRouterRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "test": {
                    "type": "boolean"
                }
            }
        },
        "hc.LockVRouterResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "hc.MarketPlaceAppPermissions": {
            "type": "object",
            "properties": {
                "group_a": {
                    "type": "integer"
                },
                "group_m": {
                    "type": "integer"
                },
                "group_u": {
                    "type": "integer"
                },
                "other_a": {
                    "type": "integer"
                },
                "other_m": {
                    "type": "integer"
                },
                "other_u": {
                    "type": "integer"
                },
                "owner_a": {
                    "type": "integer"
                },
                "owner_m": {
                    "type": "integer"
                },
                "owner_u": {
                    "type": "integer"
                }
            }
        },
        "hc.Marketplace": {
            "type": "object",
            "properties": {
                "free_mb": {
                    "type": "integer"
                },
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "market_mad": {
                    "type": "string"
                },
                "marketplaceapps": {
                    "$ref": "#/definitions/hc.MarketplaceApps"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.MarketplacePermissions"
                },
                "state": {
                    "type": "integer"
                },
                "template": {
                    "type": "string"
                },
                "total_mb": {
                    "type": "integer"
                },
                "uid": {
                    "type": "integer"
                },
                "uname": {
                    "type": "string"
                },
                "used_mb": {
                    "type": "integer"
                },
                "zone_id": {
                    "type": "string"
                }
            }
        },
        "hc.MarketplaceApp": {
            "type": "object",
            "properties": {
                "apptemplate64": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lock": {
                    "$ref": "#/definitions/hc.MarketplaceAppLock"
                },
                "marketplace": {
                    "type": "string"
                },
                "marketplace_id": {
                    "type": "integer"
                },
                "md5": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "origin_id": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.MarketPlaceAppPermissions"
                },
                "regtime": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "state": {
                    "type": "integer"
                },
                "template": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "uid": {
                    "type": "integer"
                },
                "uname": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "zone_id": {
                    "type": "string"
                }
            }
        },
        "hc.MarketplaceAppLock": {
            "type": "object",
            "properties": {
                "locked": {
                    "type": "integer"
                },
                "owner": {
                    "type": "integer"
                },
                "req_id": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "hc.MarketplaceApps": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.MarketplacePermissions": {
            "type": "object",
            "properties": {
                "group_a": {
                    "type": "integer"
                },
                "group_m": {
                    "type": "integer"
                },
                "group_u": {
                    "type": "integer"
                },
                "other_a": {
                    "type": "integer"
                },
                "other_m": {
                    "type": "integer"
                },
                "other_u": {
                    "type": "integer"
                },
                "owner_a": {
                    "type": "integer"
                },
                "owner_m": {
                    "type": "integer"
                },
                "owner_u": {
                    "type": "integer"
                }
            }
        },
        "hc.MoveInstanceRequest": {
            "type": "object",
            "properties": {
                "enforce_capacity": {
                    "description": "TODO: probably should reverse this logic",
                    "type": "boolean"
                },
                "host": {
                    "type": "integer"
                },
                "live_migrate": {
                    "type": "boolean"
                },
                "migration_type": {
                    "type": "string"
                }
            }
        },
        "hc.MoveInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.Period": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer"
                }
            }
        },
        "hc.Perms": {
            "type": "object",
            "properties": {
                "group_admin": {
                    "type": "boolean"
                },
                "group_manage": {
                    "type": "boolean"
                },
                "group_use": {
                    "type": "boolean"
                },
                "other_admin": {
                    "type": "boolean"
                },
                "other_manage": {
                    "type": "boolean"
                },
                "other_use": {
                    "type": "boolean"
                },
                "owner_admin": {
                    "type": "boolean"
                },
                "owner_manage": {
                    "type": "boolean"
                },
                "owner_use": {
                    "type": "boolean"
                }
            }
        },
        "hc.PingResponse": {
            "type": "object",
            "properties": {
                "service": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "hc.RaftStatus": {
            "type": "object",
            "properties": {
                "commit": {
                    "type": "integer"
                },
                "fedlog_index": {
                    "type": "integer"
                },
                "log_index": {
                    "type": "integer"
                },
                "log_term": {
                    "type": "integer"
                },
                "server_id": {
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "term": {
                    "type": "integer"
                },
                "votedfor": {
                    "type": "integer"
                }
            }
        },
        "hc.RecoverInstanceRequest": {
            "type": "object",
            "properties": {
                "operation": {
                    "type": "string"
                }
            }
        },
        "hc.RecoverInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.RecoverVNetRequest": {
            "type": "object",
            "properties": {
                "recovery": {
                    "type": "string"
                }
            }
        },
        "hc.RecoverVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.ReleaseVNetRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.ReleaseVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameClusterRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameClusterResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameDatastoreRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameDocumentRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameHookRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameHostRequest": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                }
            }
        },
        "hc.RenameHostResponse": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameImageRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameInstanceDiskSnapshotRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameInstanceDiskSnapshotResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameInstanceGroupRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameInstanceGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameInstanceRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameMarketAppRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameMarketAppResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameMarketRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameMarketResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameTemplateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameVDCRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameVDCResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameVNetRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameVNetTemplateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameVRouterRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameVRouterResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "hc.RenameZoneRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "hc.RenameZoneResponse": {
            "type": "object",
            "properties": {
                "zone": {
                    "type": "integer"
                }
            }
        },
        "hc.ReserveVNetRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.ReserveVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.ResizeInstanceDiskRequest": {
            "type": "object",
            "properties": {
                "size": {
                    "type": "integer"
                }
            }
        },
        "hc.ResizeInstanceDiskResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.ResizeInstanceRequest": {
            "type": "object",
            "properties": {
                "enforce_capacity": {
                    "description": "TODO: probably should reverse this logic",
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.ResizeInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.RetryHookRequest": {
            "type": "object",
            "properties": {
                "execution": {
                    "type": "integer"
                }
            }
        },
        "hc.RetryHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "integer"
                }
            }
        },
        "hc.RevertImageSnapshotResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "hc.RevertInstanceDiskSnapshotResponse": {
            "type": "object",
            "properties": {
                "snapshot": {
                    "type": "integer"
                }
            }
        },
        "hc.RevertInstanceSnapshotResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.SecurityGroup": {
            "type": "object",
            "properties": {
                "error_vms": {
                    "$ref": "#/definitions/hc.SecurityGroupErrorVMs"
                },
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "outdated_vms": {
                    "$ref": "#/definitions/hc.SecurityGroupOutdatedVMs"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.SecurityGroupPermissions"
                },
                "template": {
                    "$ref": "#/definitions/hc.SecurityGroupTemplate"
                },
                "uid": {
                    "type": "integer"
                },
                "uname": {
                    "type": "string"
                },
                "updated_vms": {
                    "$ref": "#/definitions/hc.SecurityGroupUpdatedVMs"
                },
                "updating_vms": {
                    "$ref": "#/definitions/hc.SecurityGroupUpdatingVMs"
                }
            }
        },
        "hc.SecurityGroupErrorVMs": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.SecurityGroupOutdatedVMs": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.SecurityGroupPermissions": {
            "type": "object",
            "properties": {
                "group_a": {
                    "type": "integer"
                },
                "group_m": {
                    "type": "integer"
                },
                "group_u": {
                    "type": "integer"
                },
                "other_a": {
                    "type": "integer"
                },
                "other_m": {
                    "type": "integer"
                },
                "other_u": {
                    "type": "integer"
                },
                "owner_a": {
                    "type": "integer"
                },
                "owner_m": {
                    "type": "integer"
                },
                "owner_u": {
                    "type": "integer"
                }
            }
        },
        "hc.SecurityGroupRule": {
            "type": "object",
            "properties": {
                "protocol": {
                    "type": "string"
                },
                "rule_type": {
                    "type": "string"
                }
            }
        },
        "hc.SecurityGroupTemplate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "rule": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.SecurityGroupRule"
                    }
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "hc.SecurityGroupUpdatedVMs": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.SecurityGroupUpdatingVMs": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.SetGroupQuotaRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.SetGroupQuotaResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "hc.SetHostStatusRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "hc.SetHostStatusResponse": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "integer"
                }
            }
        },
        "hc.SetImagePersistentRequest": {
            "type": "object",
            "properties": {
                "persistent": {
                    "type": "boolean"
                }
            }
        },
        "hc.SetImagePersistentResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "hc.SetInstanceActionRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "Action to perform",
                    "type": "string",
                    "enum": [
                        "hold",
                        "poweroff",
                        "poweroff-hard",
                        "reboot",
                        "reboot-hard",
                        "release",
                        "resched",
                        "resume",
                        "stop",
                        "suspend",
                        "terminate",
                        "terminate-hard",
                        "updeploy",
                        "updeploy-hard"
                    ]
                }
            }
        },
        "hc.SetInstanceActionResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.SetUserLoginRequest": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "group": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "hc.SetUserLoginTokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "hc.SetUserQuotaRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.SetUserQuotaResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.Showback": {
            "type": "object",
            "properties": {
                "cpucost": {
                    "type": "number"
                },
                "disk_cost": {
                    "type": "number"
                },
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "hours": {
                    "type": "number"
                },
                "memory_cost": {
                    "type": "number"
                },
                "month": {
                    "type": "integer"
                },
                "rhours": {
                    "type": "number"
                },
                "total_cost": {
                    "type": "number"
                },
                "uid": {
                    "type": "integer"
                },
                "uname": {
                    "type": "string"
                },
                "vmid": {
                    "type": "integer"
                },
                "vmname": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "hc.UnlockDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "hc.UnlockHookRequest": {
            "type": "object",
            "properties": {
                "lock": {
                    "type": "integer"
                }
            }
        },
        "hc.UnlockHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "integer"
                }
            }
        },
        "hc.UnlockImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "hc.UnlockInstanceGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "hc.UnlockInstanceResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.UnlockMarketAppResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "hc.UnlockTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.UnlockVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.UnlockVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.UnlockVRouterResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateClusterRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateClusterResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateDatastoreRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateDefaultUserQuotaRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateDefaultUserQuotaResponse": {
            "type": "object",
            "properties": {
                "quota": {
                    "$ref": "#/definitions/hc.DefaultUserQuotas"
                }
            }
        },
        "hc.UpdateDocumentRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateGroupQuotaRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateGroupQuotaResponse": {
            "type": "object",
            "properties": {
                "quotas": {
                    "$ref": "#/definitions/hc.DefaultGroupQuotas"
                }
            }
        },
        "hc.UpdateGroupRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateHookRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateHookResponse": {
            "type": "object",
            "properties": {
                "hook": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateHostRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateHostResponse": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateImageRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateInstanceConfigRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateInstanceConfigResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateInstanceGroupRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateInstanceGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateInstanceScheduleRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "integer"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateInstanceScheduleResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateInstanceTemplateRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateInstanceTemplateResponse": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateMarketAppRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateMarketAppResponse": {
            "type": "object",
            "properties": {
                "market_app": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateMarketRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateMarketResponse": {
            "type": "object",
            "properties": {
                "market": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "security_group": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateTemplateRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "merge": {
                    "type": "boolean"
                }
            }
        },
        "hc.UpdateTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateVDCRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateVDCResponse": {
            "type": "object",
            "properties": {
                "vdc": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateVNetAddressRangeRequest": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateVNetAddressRangeResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateVNetRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateVNetResponse": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateVNetTemplateRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateVNetTemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateVRouterRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateVRouterResponse": {
            "type": "object",
            "properties": {
                "router": {
                    "type": "integer"
                }
            }
        },
        "hc.UpdateZoneRequest": {
            "type": "object",
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "hc.UpdateZoneResponse": {
            "type": "object",
            "properties": {
                "zone": {
                    "type": "integer"
                }
            }
        },
        "hc.User": {
            "type": "object",
            "properties": {
                "auth_driver": {
                    "type": "string"
                },
                "datastore_quota": {
                    "$ref": "#/definitions/hc.UserDatastoreQuota"
                },
                "default_user_quotas": {
                    "$ref": "#/definitions/hc.DefaultUserQuotas"
                },
                "enabled": {
                    "type": "integer"
                },
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "groups": {
                    "$ref": "#/definitions/hc.UserGroups"
                },
                "id": {
                    "type": "integer"
                },
                "image_quota": {
                    "$ref": "#/definitions/hc.UserImageQuota"
                },
                "login_token": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.UserLoginToken"
                    }
                },
                "name": {
                    "type": "string"
                },
                "network_quota": {
                    "$ref": "#/definitions/hc.UserNetworkQuota"
                },
                "password": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                },
                "vmquota": {
                    "$ref": "#/definitions/hc.UserVMQuota"
                }
            }
        },
        "hc.UserAnon1": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.UserAnon2"
                    }
                }
            }
        },
        "hc.UserAnon2": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "string"
                },
                "images_used": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "size_used": {
                    "type": "string"
                }
            }
        },
        "hc.UserAnon3": {
            "type": "object",
            "properties": {
                "network": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.UserAnon4"
                    }
                }
            }
        },
        "hc.UserAnon4": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "leases": {
                    "type": "string"
                },
                "leases_used": {
                    "type": "string"
                }
            }
        },
        "hc.UserAnon5": {
            "type": "object",
            "properties": {
                "vm": {
                    "$ref": "#/definitions/hc.UserAnon6"
                }
            }
        },
        "hc.UserAnon6": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "string"
                },
                "cpuused": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "memory_used": {
                    "type": "string"
                },
                "running_cpu": {
                    "type": "string"
                },
                "running_cpuused": {
                    "type": "string"
                },
                "running_memory": {
                    "type": "string"
                },
                "running_memory_used": {
                    "type": "string"
                },
                "running_vms": {
                    "type": "string"
                },
                "running_vms_used": {
                    "type": "string"
                },
                "system_disk_size": {
                    "type": "string"
                },
                "system_disk_size_used": {
                    "type": "string"
                },
                "vms": {
                    "type": "string"
                },
                "vms_used": {
                    "type": "string"
                }
            }
        },
        "hc.UserAnon7": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.UserAnon8"
                    }
                }
            }
        },
        "hc.UserAnon8": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "rvms": {
                    "type": "string"
                },
                "rvms_used": {
                    "type": "string"
                }
            }
        },
        "hc.UserDatastore": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "string"
                },
                "images_used": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "size_used": {
                    "type": "string"
                }
            }
        },
        "hc.UserDatastoreQuota": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.UserDatastore"
                    }
                }
            }
        },
        "hc.UserGroups": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.UserImage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "rvms": {
                    "type": "string"
                },
                "rvms_used": {
                    "type": "string"
                }
            }
        },
        "hc.UserImageQuota": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.UserImage"
                    }
                }
            }
        },
        "hc.UserLoginToken": {
            "type": "object",
            "properties": {
                "egid": {
                    "type": "integer"
                },
                "expiration_time": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "hc.UserNetwork": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "leases": {
                    "type": "string"
                },
                "leases_used": {
                    "type": "string"
                }
            }
        },
        "hc.UserNetworkQuota": {
            "type": "object",
            "properties": {
                "network": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.UserNetwork"
                    }
                }
            }
        },
        "hc.UserVM": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "string"
                },
                "cpuused": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "memory_used": {
                    "type": "string"
                },
                "running_cpu": {
                    "type": "string"
                },
                "running_cpuused": {
                    "type": "string"
                },
                "running_memory": {
                    "type": "string"
                },
                "running_memory_used": {
                    "type": "string"
                },
                "running_vms": {
                    "type": "string"
                },
                "running_vms_used": {
                    "type": "string"
                },
                "system_disk_size": {
                    "type": "string"
                },
                "system_disk_size_used": {
                    "type": "string"
                },
                "vms": {
                    "type": "string"
                },
                "vms_used": {
                    "type": "string"
                }
            }
        },
        "hc.UserVMQuota": {
            "type": "object",
            "properties": {
                "vm": {
                    "$ref": "#/definitions/hc.UserVM"
                }
            }
        },
        "hc.VDC": {
            "type": "object",
            "properties": {
                "clusters": {
                    "$ref": "#/definitions/hc.VDCClusters"
                },
                "datastores": {
                    "$ref": "#/definitions/hc.VDCDatastores"
                },
                "groups": {
                    "$ref": "#/definitions/hc.VDCGroups"
                },
                "hosts": {
                    "$ref": "#/definitions/hc.VDCHosts"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                },
                "vnets": {
                    "$ref": "#/definitions/hc.VDCVnets"
                }
            }
        },
        "hc.VDCClusters": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ClusterVDC"
                    }
                }
            }
        },
        "hc.VDCDatastore": {
            "type": "object",
            "properties": {
                "datastore_id": {
                    "type": "integer"
                },
                "zone_id": {
                    "type": "integer"
                }
            }
        },
        "hc.VDCDatastores": {
            "type": "object",
            "properties": {
                "datastore": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.VDCDatastore"
                    }
                }
            }
        },
        "hc.VDCGroups": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.VDCHost": {
            "type": "object",
            "properties": {
                "host_id": {
                    "type": "integer"
                },
                "zone_id": {
                    "type": "integer"
                }
            }
        },
        "hc.VDCHosts": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.VDCHost"
                    }
                }
            }
        },
        "hc.VDCVnet": {
            "type": "object",
            "properties": {
                "vnet_id": {
                    "type": "integer"
                },
                "zone_id": {
                    "type": "integer"
                }
            }
        },
        "hc.VDCVnets": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.VDCVnet"
                    }
                }
            }
        },
        "hc.VMTemplateData": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vcenter_ccrref": {
                    "type": "string"
                },
                "vcenter_instance_id": {
                    "type": "string"
                },
                "vcenter_template_ref": {
                    "type": "string"
                }
            }
        },
        "hc.VNTemplateData": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vnmad": {
                    "type": "string"
                }
            }
        },
        "hc.VNet": {
            "type": "object",
            "properties": {
                "arpool": {
                    "$ref": "#/definitions/hc.VNetARPool"
                },
                "bridge": {
                    "type": "string"
                },
                "bridge_type": {
                    "type": "string"
                },
                "clusters": {
                    "$ref": "#/definitions/hc.VNetClusters"
                },
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lock": {
                    "$ref": "#/definitions/hc.VNetLock"
                },
                "name": {
                    "type": "string"
                },
                "outer_vlanid": {
                    "type": "string"
                },
                "outer_vlanidautomatic": {
                    "type": "string"
                },
                "parent_network_id": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.VNetPermissions"
                },
                "phydev": {
                    "type": "string"
                },
                "prev_state": {
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/definitions/hc.VNetTemplate"
                },
                "uid": {
                    "type": "integer"
                },
                "uname": {
                    "type": "string"
                },
                "used_leases": {
                    "type": "integer"
                },
                "vlanid": {
                    "type": "string"
                },
                "vlanidautomatic": {
                    "type": "string"
                },
                "vnmad": {
                    "type": "string"
                },
                "vrouters": {
                    "$ref": "#/definitions/hc.VNetVRouters"
                }
            }
        },
        "hc.VNetAR": {
            "type": "object",
            "properties": {
                "arid": {
                    "type": "string"
                },
                "global_prefix": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "ip6": {
                    "type": "string"
                },
                "ip6_end": {
                    "type": "string"
                },
                "ip6_global": {
                    "type": "string"
                },
                "ip6_global_end": {
                    "type": "string"
                },
                "ip6_ula": {
                    "type": "string"
                },
                "ip6_ula_end": {
                    "type": "string"
                },
                "ipend": {
                    "type": "string"
                },
                "leases": {
                    "$ref": "#/definitions/hc.VNetLeases"
                },
                "mac": {
                    "type": "string"
                },
                "macend": {
                    "type": "string"
                },
                "parent_network_arid": {
                    "type": "string"
                },
                "port_size": {
                    "type": "string"
                },
                "port_start": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "ula_prefix": {
                    "type": "string"
                },
                "used_leases": {
                    "type": "string"
                },
                "vnmad": {
                    "type": "string"
                }
            }
        },
        "hc.VNetARPool": {
            "type": "object",
            "properties": {
                "ar": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.VNetAR"
                    }
                }
            }
        },
        "hc.VNetClusters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.VNetLease": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "ip6": {
                    "type": "string"
                },
                "ip6_global": {
                    "type": "string"
                },
                "ip6_link": {
                    "type": "string"
                },
                "ip6_ula": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "vm": {
                    "type": "integer"
                },
                "vnet": {
                    "type": "integer"
                },
                "vrouter": {
                    "type": "integer"
                }
            }
        },
        "hc.VNetLeases": {
            "type": "object",
            "properties": {
                "lease": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.VNetLease"
                    }
                }
            }
        },
        "hc.VNetLock": {
            "type": "object",
            "properties": {
                "locked": {
                    "type": "integer"
                },
                "owner": {
                    "type": "integer"
                },
                "req_id": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "hc.VNetPermissions": {
            "type": "object",
            "properties": {
                "group_a": {
                    "type": "integer"
                },
                "group_m": {
                    "type": "integer"
                },
                "group_u": {
                    "type": "integer"
                },
                "other_a": {
                    "type": "integer"
                },
                "other_m": {
                    "type": "integer"
                },
                "other_u": {
                    "type": "integer"
                },
                "owner_a": {
                    "type": "integer"
                },
                "owner_m": {
                    "type": "integer"
                },
                "owner_u": {
                    "type": "integer"
                }
            }
        },
        "hc.VNetTemplate": {
            "type": "object",
            "properties": {
                "dns": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "gateway6": {
                    "type": "string"
                },
                "guest_mtu": {
                    "type": "integer"
                },
                "ip6_method": {
                    "type": "string"
                },
                "ip6_metric": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "network_address": {
                    "type": "string"
                },
                "network_mask": {
                    "type": "string"
                },
                "search_domain": {
                    "type": "string"
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vcenter_from_wild": {
                    "type": "string"
                },
                "vcenter_instance_id": {
                    "type": "string"
                },
                "vcenter_net_ref": {
                    "type": "string"
                },
                "vcenter_portgroup_type": {
                    "type": "string"
                },
                "vcenter_template_ref": {
                    "type": "string"
                }
            }
        },
        "hc.VNetVRouters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.VRouter": {
            "type": "object",
            "properties": {
                "gid": {
                    "type": "integer"
                },
                "gname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lock": {
                    "$ref": "#/definitions/hc.VRouterLock"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/hc.VRouterPermissions"
                },
                "template": {
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                },
                "uname": {
                    "type": "string"
                },
                "vms": {
                    "$ref": "#/definitions/hc.VRouterVMs"
                }
            }
        },
        "hc.VRouterLock": {
            "type": "object",
            "properties": {
                "locked": {
                    "type": "integer"
                },
                "owner": {
                    "type": "integer"
                },
                "req_id": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "hc.VRouterPermissions": {
            "type": "object",
            "properties": {
                "group_a": {
                    "type": "integer"
                },
                "group_m": {
                    "type": "integer"
                },
                "group_u": {
                    "type": "integer"
                },
                "other_a": {
                    "type": "integer"
                },
                "other_m": {
                    "type": "integer"
                },
                "other_u": {
                    "type": "integer"
                },
                "owner_a": {
                    "type": "integer"
                },
                "owner_m": {
                    "type": "integer"
                },
                "owner_u": {
                    "type": "integer"
                }
            }
        },
        "hc.VRouterVMs": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "hc.Zone": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "server_pool": {
                    "$ref": "#/definitions/hc.ZoneServerPool"
                },
                "state": {
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/definitions/hc.ZoneTemplate"
                }
            }
        },
        "hc.ZoneServer": {
            "type": "object",
            "properties": {
                "commit": {
                    "type": "integer"
                },
                "endpoint": {
                    "type": "string"
                },
                "fedlog_index": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "log_index": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "integer"
                },
                "term": {
                    "type": "integer"
                },
                "votedfor": {
                    "type": "integer"
                }
            }
        },
        "hc.ZoneServerPool": {
            "type": "object",
            "properties": {
                "server": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hc.ZoneServer"
                    }
                }
            }
        },
        "hc.ZoneTemplate": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string"
                }
            }
        },
        "instance.Action": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49
            ],
            "x-enum-comments": {
                "AliasAttachAction": "alias-attach",
                "AliasDetachAction": "alias-detach",
                "BootAction": "boot",
                "ChmodAction": "chmod",
                "ChownAction": "chown",
                "DeleteAction": "delete",
                "DeleteRecreateAction": "delete-recreate",
                "DeployAction": "deploy",
                "DiskAttachAction": "disk-attach",
                "DiskDetachAction": "disk-detach",
                "DiskResizeAction": "disk-resize",
                "DiskSaveasAction": "disk-saveas",
                "DiskSnapshotCreateAction": "disk-snapshot-create",
                "DiskSnapshotDeleteAction": "disk-snapshot-delete",
                "DiskSnapshotRenameAction": "disk-snapshot-rename",
                "DiskSnapshotRevertAction": "disk-snapshot-revert",
                "HoldAction": "hold",
                "LiveMigrateAction": "live-migrate",
                "MigrateAction": "migrate",
                "MonitorAction": "monitor",
                "NicAttachAction": "nic-attach",
                "NicDetachAction": "nic-detach",
                "NoneAction": "none",
                "PoffHardMigrateAction": "poff-hard-migrate",
                "PoffMigrateAction": "poff-migrate",
                "PowerOffAction": "poweroff",
                "PowerOffHardAction": "poweroff-hard",
                "RebootAction": "reboot",
                "RebootHardAction": "reboot-hard",
                "RecoverAction": "recover",
                "ReleaseAction": "release",
                "RenameAction": "rename",
                "RescheduleAction": "resched",
                "ResizeAction": "resize",
                "ResumeAction": "resume",
                "RetryAction": "retry",
                "ShutdownAction": "shutdown",
                "ShutdownHardAction": "shutdown-hard",
                "SnapshotCreateAction": "snapshot-create",
                "SnapshotDeleteAction": "snapshot-delete",
                "SnapshotRevertAction": "snapshot-revert",
                "StopAction": "stop",
                "SuspendAction": "suspend",
                "TerminateAction": "terminate",
                "TerminateHardAction": "terminate-hard",
                "UndeployAction": "undeploy",
                "UndeployHardAction": "undeploy-hard",
                "UnrescheduleAction": "unresched",
                "UpdateAction": "update",
                "UpdateconfAction": "updateconf"
            },
            "x-enum-varnames": [
                "NoneAction",
                "MigrateAction",
                "LiveMigrateAction",
                "ShutdownAction",
                "ShutdownHardAction",
                "UndeployAction",
                "UndeployHardAction",
                "HoldAction",
                "ReleaseAction",
                "StopAction",
                "SuspendAction",
                "ResumeAction",
                "BootAction",
                "DeleteAction",
                "DeleteRecreateAction",
                "RebootAction",
                "RebootHardAction",
                "RescheduleAction",
                "UnrescheduleAction",
                "PowerOffAction",
                "PowerOffHardAction",
                "DiskAttachAction",
                "DiskDetachAction",
                "NicAttachAction",
                "NicDetachAction",
                "DiskSnapshotCreateAction",
                "DiskSnapshotDeleteAction",
                "TerminateAction",
                "TerminateHardAction",
                "DiskResizeAction",
                "DeployAction",
                "ChownAction",
                "ChmodAction",
                "UpdateconfAction",
                "RenameAction",
                "ResizeAction",
                "UpdateAction",
                "SnapshotCreateAction",
                "SnapshotDeleteAction",
                "SnapshotRevertAction",
                "DiskSaveasAction",
                "DiskSnapshotRevertAction",
                "RecoverAction",
                "RetryAction",
                "MonitorAction",
                "DiskSnapshotRenameAction",
                "AliasAttachAction",
                "AliasDetachAction",
                "PoffMigrateAction",
                "PoffHardMigrateAction"
            ]
        },
        "instance.Context": {
            "type": "object",
            "properties": {
                "disk_id": {
                    "type": "integer"
                },
                "network": {
                    "type": "boolean"
                },
                "ssh_public_key": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                }
            }
        },
        "instance.Disk": {
            "type": "object",
            "properties": {
                "allow_orphans": {
                    "type": "string"
                },
                "clone": {
                    "type": "boolean"
                },
                "clone_target": {
                    "type": "string"
                },
                "cluster_id": {
                    "type": "integer"
                },
                "datastore": {
                    "type": "string"
                },
                "datastore_id": {
                    "type": "integer"
                },
                "dev_prefix": {
                    "type": "string"
                },
                "disk_id": {
                    "type": "integer"
                },
                "disk_snapshot_total_size": {
                    "type": "integer"
                },
                "disk_type": {
                    "type": "string"
                },
                "driver": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "image_id": {
                    "type": "integer"
                },
                "image_state": {
                    "type": "integer"
                },
                "ln_target": {
                    "type": "string"
                },
                "original_size": {
                    "type": "integer"
                },
                "pool_name": {
                    "type": "string"
                },
                "readonly": {
                    "type": "boolean"
                },
                "save": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tm_mad": {
                    "type": "string"
                },
                "tm_madsystem": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                },
                "vcenter_dsref": {
                    "type": "string"
                },
                "vcenter_instance_id": {
                    "type": "string"
                }
            }
        },
        "instance.DiskSize": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "instance.DiskSnapshots": {
            "type": "object",
            "properties": {
                "allow_orphans": {
                    "type": "string"
                },
                "current_base": {
                    "type": "integer"
                },
                "disk_id": {
                    "type": "integer"
                },
                "next_snapshot": {
                    "type": "integer"
                },
                "snapshot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.ImageSnapshot"
                    }
                }
            }
        },
        "instance.Graphics": {
            "type": "object",
            "properties": {
                "listen": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                }
            }
        },
        "instance.GroupRole": {
            "type": "object",
            "properties": {
                "host_affined": {
                    "type": "string"
                },
                "host_anti_affined": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                }
            }
        },
        "instance.History": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/instance.Action"
                },
                "cluster_id": {
                    "type": "integer"
                },
                "datastore_id": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "epilog_end_time": {
                    "type": "string"
                },
                "epilog_start_time": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "host_id": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "instance_mad": {
                    "type": "string"
                },
                "prolog_end_time": {
                    "type": "string"
                },
                "prolog_start_time": {
                    "type": "string"
                },
                "request_id": {
                    "type": "integer"
                },
                "running_end_time": {
                    "type": "string"
                },
                "running_start_time": {
                    "type": "string"
                },
                "sequence_number": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "transfer_manager_mad": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "instance.ImageSnapshot": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "string"
                },
                "children": {
                    "type": "string"
                },
                "date": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "instance.Monitoring": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "number"
                },
                "disk_read_bytes": {
                    "type": "integer"
                },
                "disk_read_iops": {
                    "type": "integer"
                },
                "disk_size": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.DiskSize"
                    }
                },
                "disk_write_bytes": {
                    "type": "integer"
                },
                "disk_write_iops": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "memory": {
                    "type": "integer"
                },
                "netrx": {
                    "type": "integer"
                },
                "nettx": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "vcenter_esxhost": {
                    "type": "string"
                },
                "vcenter_guest_state": {
                    "type": "string"
                },
                "vcenter_rpname": {
                    "type": "string"
                },
                "vcenter_vmname": {
                    "type": "string"
                },
                "vcenter_vmware_tools_running_status": {
                    "type": "string"
                },
                "vcenter_vmware_tools_version": {
                    "type": "string"
                },
                "vcenter_vmware_tools_version_status": {
                    "type": "string"
                }
            }
        },
        "instance.NIC": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "network_id": {
                    "type": "string"
                },
                "phy_dev": {
                    "type": "string"
                },
                "security_groups": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                },
                "vcenter_instance_id": {
                    "type": "string"
                },
                "vcenter_net_ref": {
                    "type": "string"
                },
                "vcenter_portgroup_type": {
                    "type": "string"
                },
                "virtio_queues": {
                    "type": "string"
                }
            }
        },
        "instance.NICAlias": {
            "type": "object",
            "properties": {
                "alias_id": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                },
                "vcenter_instance_id": {
                    "type": "string"
                },
                "vcenter_net_ref": {
                    "type": "string"
                },
                "vcenter_portgroup_type": {
                    "type": "string"
                }
            }
        },
        "instance.OS": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                }
            }
        },
        "instance.SchedAction": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "args": {
                    "type": "string"
                },
                "days": {
                    "type": "string"
                },
                "end_type": {
                    "type": "string"
                },
                "end_value": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "repeat": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "warning": {
                    "type": "string"
                }
            }
        },
        "instance.Snapshot": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "hypervisor_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "snapshot_id": {
                    "type": "integer"
                },
                "system_disk_size": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "instance.Snapshots": {
            "type": "object",
            "properties": {
                "allow_orphans": {
                    "type": "string"
                },
                "current_base": {
                    "type": "integer"
                },
                "next_snapshot": {
                    "type": "integer"
                },
                "snapshot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.ImageSnapshot"
                    }
                }
            }
        },
        "instance.State": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                -2,
                -1
            ],
            "x-enum-comments": {
                "ActiveState": "active",
                "AnyState": "all",
                "CloningFailedState": "cloning_failed",
                "CloningState": "cloning",
                "DoneState": "done",
                "HoldState": "hold",
                "InitState": "init",
                "NotDoneState": "not_done",
                "OffState": "off",
                "PendingState": "pending",
                "StoppedState": "stopped",
                "SuspendedState": "suspended",
                "UndeployedState": "undeployed"
            },
            "x-enum-varnames": [
                "InitState",
                "PendingState",
                "HoldState",
                "ActiveState",
                "StoppedState",
                "SuspendedState",
                "DoneState",
                "_",
                "OffState",
                "UndeployedState",
                "CloningState",
                "CloningFailedState",
                "AnyState",
                "NotDoneState"
            ]
        },
        "instance.Template": {
            "type": "object",
            "properties": {
                "automatic_dsrequirements": {
                    "type": "string"
                },
                "automatic_nicrequirements": {
                    "type": "string"
                },
                "automatic_requirements": {
                    "type": "string"
                },
                "cloning_template_id": {
                    "type": "string"
                },
                "context": {
                    "$ref": "#/definitions/instance.Context"
                },
                "cpu": {
                    "type": "number"
                },
                "cpu_cost": {
                    "type": "string"
                },
                "disk": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.Disk"
                    }
                },
                "disk_cost": {
                    "type": "string"
                },
                "emulator": {
                    "type": "string"
                },
                "features": {
                    "type": "string"
                },
                "graphics": {
                    "$ref": "#/definitions/instance.Graphics"
                },
                "hyperv_options": {
                    "type": "string"
                },
                "imported": {
                    "type": "string"
                },
                "input": {
                    "type": "string"
                },
                "instance_group": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instance_id": {
                    "type": "integer"
                },
                "memory": {
                    "type": "integer"
                },
                "memory_cost": {
                    "type": "string"
                },
                "memory_max": {
                    "type": "string"
                },
                "memory_resize_mode": {
                    "type": "string"
                },
                "memory_slots": {
                    "type": "string"
                },
                "nic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.NIC"
                    }
                },
                "nic_alias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.NICAlias"
                    }
                },
                "nic_default": {
                    "type": "string"
                },
                "numa_node": {
                    "type": "string"
                },
                "os": {
                    "$ref": "#/definitions/instance.OS"
                },
                "pci": {
                    "type": "string"
                },
                "raw": {
                    "type": "string"
                },
                "sched_action": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.SchedAction"
                    }
                },
                "security_group_rule": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "snapshot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/instance.Snapshot"
                    }
                },
                "spice_options": {
                    "type": "string"
                },
                "submit_on_hold": {
                    "type": "string"
                },
                "template_id": {
                    "type": "integer"
                },
                "tm_madsystem": {
                    "type": "string"
                },
                "topology": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                },
                "vcpu": {
                    "type": "integer"
                },
                "vcpu_max": {
                    "type": "string"
                },
                "vrouter_id": {
                    "type": "string"
                },
                "vrouter_keepalived_id": {
                    "type": "string"
                },
                "vrouter_keepalived_password": {
                    "type": "string"
                }
            }
        },
        "instance.UserTemplate": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "hypervisor": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "lxdsecurity_privileged": {
                    "type": "boolean"
                },
                "sched_requirements": {
                    "type": "string"
                },
                "snapshot_schedule": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/template.Values"
                },
                "vcenter_ccrref": {
                    "type": "string"
                },
                "vcenter_dsref": {
                    "type": "string"
                },
                "vcenter_instance_id": {
                    "type": "string"
                }
            }
        },
        "insttmpl.Template": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vcenter_ccrref": {
                    "type": "string"
                },
                "vcenter_instance_id": {
                    "type": "string"
                },
                "vcenter_template_ref": {
                    "type": "string"
                }
            }
        },
        "ip.IP": {
            "type": "object"
        },
        "ip.Netmask": {
            "type": "object"
        },
        "sicontrol.BcacheInfo": {
            "type": "object",
            "properties": {
                "caches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sicontrol.DiskOrPartitionRef"
                    }
                },
                "capacity_MB": {
                    "type": "integer"
                },
                "mountpoint": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "stores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sicontrol.DiskOrPartitionRef"
                    }
                },
                "usage": {
                    "type": "string"
                },
                "used_by": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "sicontrol.CaddyInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "revision": {
                    "type": "integer"
                }
            }
        },
        "sicontrol.DiskInfo": {
            "type": "object",
            "properties": {
                "boot": {
                    "type": "boolean"
                },
                "caddy_no": {
                    "type": "integer"
                },
                "caddy_type": {
                    "type": "string"
                },
                "capacity_MB": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "location_in_caddy": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "osds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "partitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sicontrol.PartitionInfo"
                    }
                },
                "path": {
                    "type": "string"
                },
                "sata": {
                    "type": "string"
                },
                "serial_no": {
                    "type": "string"
                },
                "smart_message": {
                    "type": "string"
                },
                "smart_passed": {
                    "type": "boolean"
                },
                "smart_status": {
                    "type": "integer"
                },
                "temperature_C": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "usage": {
                    "type": "string"
                },
                "wwn": {
                    "type": "string"
                }
            }
        },
        "sicontrol.DiskOrPartitionRef": {
            "type": "object",
            "properties": {
                "disk_id": {
                    "type": "string"
                },
                "partition_index": {
                    "type": "integer"
                }
            }
        },
        "sicontrol.FanInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "reserved": {
                    "type": "boolean"
                },
                "speed": {
                    "type": "integer"
                }
            }
        },
        "sicontrol.LogicalVolumeInfo": {
            "type": "object",
            "properties": {
                "capacity_MB": {
                    "type": "integer"
                },
                "mountpoint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "physical_volume_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usage": {
                    "type": "string"
                },
                "used_by": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "sicontrol.MachineInfo": {
            "type": "object",
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "asset": {
                    "type": "string"
                },
                "baseboard_id": {
                    "type": "integer"
                },
                "baseboard_rev": {
                    "type": "integer"
                },
                "bcaches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sicontrol.BcacheInfo"
                    }
                },
                "caddy_ids": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/sicontrol.CaddyInfo"
                    }
                },
                "caddy_info": {
                    "type": "boolean"
                },
                "ceph_fips": {
                    "type": "boolean"
                },
                "ceph_major": {
                    "type": "string"
                },
                "ceph_version": {
                    "type": "string"
                },
                "chassis_type": {
                    "type": "string"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sicontrol.DiskInfo"
                    }
                },
                "dns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ip.IP"
                    }
                },
                "fans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sicontrol.FanInfo"
                    }
                },
                "firmware_bmc": {
                    "type": "string"
                },
                "firmware_soc": {
                    "type": "string"
                },
                "firmware_uboot": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "identify_led": {
                    "type": "boolean"
                },
                "in_cluster": {
                    "type": "boolean"
                },
                "mainboard_id": {
                    "type": "integer"
                },
                "mainboard_rev": {
                    "type": "integer"
                },
                "memory_GB": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networks": {
                    "$ref": "#/definitions/sicontrol.NetInterfacesInfo"
                },
                "nic_id_1": {
                    "type": "integer"
                },
                "nic_id_2": {
                    "type": "integer"
                },
                "nic_rev_1": {
                    "type": "integer"
                },
                "nic_rev_2": {
                    "type": "integer"
                },
                "os_version": {
                    "type": "string"
                },
                "osd_count": {
                    "type": "integer"
                },
                "power_W": {
                    "type": "integer"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serial_no": {
                    "type": "string"
                },
                "static_id": {
                    "type": "integer"
                },
                "temperature_C": {
                    "type": "integer"
                },
                "time_server": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "string"
                },
                "up_since": {
                    "type": "string"
                },
                "volume_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sicontrol.VolumeGroupInfo"
                    }
                }
            }
        },
        "sicontrol.NetInterfaceInfo": {
            "type": "object",
            "properties": {
                "gateway": {
                    "$ref": "#/definitions/ip.IP"
                },
                "ip_address": {
                    "$ref": "#/definitions/ip.IP"
                },
                "link": {
                    "type": "boolean"
                },
                "link_speed_Mbs": {
                    "type": "integer"
                },
                "mac": {
                    "type": "string"
                },
                "mtu": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "subnet": {
                    "$ref": "#/definitions/ip.Netmask"
                }
            }
        },
        "sicontrol.NetInterfacesInfo": {
            "type": "object",
            "properties": {
                "management": {
                    "$ref": "#/definitions/sicontrol.NetInterfaceInfo"
                },
                "public": {
                    "$ref": "#/definitions/sicontrol.NetInterfaceInfo"
                },
                "replication": {
                    "$ref": "#/definitions/sicontrol.NetInterfaceInfo"
                }
            }
        },
        "sicontrol.PartitionInfo": {
            "type": "object",
            "properties": {
                "capacity_MB": {
                    "type": "integer"
                },
                "index": {
                    "type": "integer"
                },
                "mountpoint": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "usage": {
                    "type": "string"
                },
                "used_by": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "sicontrol.PhysicalVolumeInfo": {
            "type": "object",
            "properties": {
                "bcache_path": {
                    "type": "string"
                },
                "capacity_MB": {
                    "type": "integer"
                },
                "disk_id": {
                    "type": "string"
                },
                "partition_index": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "usage": {
                    "type": "string"
                },
                "used_by": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "sicontrol.VolumeGroupInfo": {
            "type": "object",
            "properties": {
                "capacity_MB": {
                    "type": "integer"
                },
                "logical_volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sicontrol.LogicalVolumeInfo"
                    }
                },
                "name": {
                    "type": "string"
                },
                "physical_volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sicontrol.PhysicalVolumeInfo"
                    }
                },
                "usage": {
                    "type": "string"
                },
                "used_by": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "storage.CephAlert": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "severity": {
                    "type": "string",
                    "enum": [
                        "HEALTH_OK",
                        "HEALTH_WARN",
                        "HEALTH_ERROR"
                    ]
                }
            }
        },
        "storage.CephFlag": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "is_set": {
                    "description": "True if this flag has been set, false otherwise",
                    "type": "boolean"
                },
                "name": {
                    "description": "The name of the flag",
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "PRIORITY",
                        "EXPECTED",
                        "INFORMATIONAL"
                    ]
                }
            }
        },
        "storage.DiskSummary": {
            "type": "object",
            "properties": {
                "capacity_MB": {
                    "description": "The max capacity of the disk, in MB",
                    "type": "integer"
                },
                "id": {
                    "description": "The disk opaque identifier",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable nice name for the disk",
                    "type": "string"
                },
                "path": {
                    "description": "The path to the disk device",
                    "type": "string"
                },
                "smart_passed": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "usage": {
                    "type": "string"
                }
            }
        },
        "storage.ListOSDResponse": {
            "type": "object",
            "properties": {
                "osd": {
                    "$ref": "#/definitions/storage.OsdInfo"
                }
            }
        },
        "storage.ListOSDsResponse": {
            "type": "object",
            "properties": {
                "osds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.OsdInfo"
                    }
                }
            }
        },
        "storage.ListPoolResponse": {
            "type": "object",
            "properties": {
                "pool": {
                    "$ref": "#/definitions/storage.PoolInfo"
                }
            }
        },
        "storage.ListPoolsResponse": {
            "type": "object",
            "properties": {
                "pools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.PoolInfo"
                    }
                }
            }
        },
        "storage.ListShareRBDResponse": {
            "type": "object",
            "properties": {
                "rbd": {
                    "$ref": "#/definitions/storage.RbdInfo"
                }
            }
        },
        "storage.ListShareRBDsResponse": {
            "type": "object",
            "properties": {
                "rbd": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.RbdInfo"
                    }
                }
            }
        },
        "storage.ListSummaryResponse": {
            "type": "object",
            "properties": {
                "alert_count": {
                    "type": "integer"
                },
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.CephAlert"
                    }
                },
                "average_pgs_per_osd": {
                    "type": "integer"
                },
                "flags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.CephFlag"
                    }
                },
                "health": {
                    "type": "string",
                    "enum": [
                        "HEALTH_OK",
                        "HEALTH_WARN",
                        "HEALTH_ERROR"
                    ]
                },
                "monitors_in_quorum": {
                    "type": "integer"
                },
                "object_count": {
                    "type": "integer"
                },
                "osd_count": {
                    "description": "The total number of OSDs inthe cluster",
                    "type": "integer"
                },
                "osd_down": {
                    "type": "integer"
                },
                "osd_in": {
                    "type": "integer"
                },
                "osd_out": {
                    "type": "integer"
                },
                "osd_up": {
                    "type": "integer"
                },
                "pg_count": {
                    "type": "integer"
                },
                "pool_count": {
                    "type": "integer"
                },
                "storage_total_MB": {
                    "type": "integer"
                },
                "storage_used_MB": {
                    "type": "integer"
                },
                "storage_utilization_percent": {
                    "type": "integer"
                },
                "version_name": {
                    "description": "The name of the Ceph version",
                    "type": "string"
                },
                "version_number": {
                    "description": "The Ceph version",
                    "type": "string"
                }
            }
        },
        "storage.OsdInfo": {
            "type": "object",
            "properties": {
                "alerts": {
                    "description": "A list of alerts being fired for this OSD",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "capacity_MB": {
                    "description": "Amount of storage this OSD has",
                    "type": "integer"
                },
                "class": {
                    "type": "string",
                    "enum": [
                        "SSD",
                        "HDD"
                    ]
                },
                "crush_weight": {
                    "type": "number"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.DiskSummary"
                    }
                },
                "id": {
                    "description": "A unique ID for the OSD",
                    "type": "integer"
                },
                "name": {
                    "description": "The OSD's name",
                    "type": "string"
                },
                "node_id": {
                    "description": "A unique ID for the node",
                    "type": "string"
                },
                "node_ip": {
                    "description": "The public IP address of this node",
                    "type": "string"
                },
                "node_name": {
                    "description": "The containing node's name",
                    "type": "string"
                },
                "pg_count": {
                    "type": "integer"
                },
                "reweight": {
                    "type": "number"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "UP",
                        "DOWN",
                        "OUT"
                    ]
                },
                "used_MB": {
                    "description": "Amount of this OSD's storage that is being used",
                    "type": "integer"
                },
                "utilization_percent": {
                    "description": "The percentage of this OSD's total storage that is being used",
                    "type": "integer"
                },
                "variance": {
                    "type": "number"
                }
            }
        },
        "storage.PoolInfo": {
            "type": "object",
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "capacity_MB": {
                    "type": "integer"
                },
                "compression": {
                    "type": "string"
                },
                "crush_ruleset": {
                    "type": "string"
                },
                "crush_ruleset_id": {
                    "type": "integer"
                },
                "erasure_code_profile": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "object_count": {
                    "type": "integer"
                },
                "pg_autoscale": {
                    "type": "boolean"
                },
                "pg_count": {
                    "type": "integer"
                },
                "pg_placement_num": {
                    "type": "integer"
                },
                "quota_max_bytes": {
                    "type": "integer"
                },
                "quota_max_objects": {
                    "type": "integer"
                },
                "replication_count": {
                    "type": "integer"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.RestServiceInfo"
                    }
                },
                "shares": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.RestShareInfo"
                    }
                },
                "stripe_width": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "used_MB": {
                    "type": "integer"
                },
                "utilization_percent": {
                    "type": "integer"
                }
            }
        },
        "storage.RbdInfo": {
            "type": "object",
            "properties": {
                "block_name": {
                    "type": "string"
                },
                "capacity_MB": {
                    "type": "integer"
                },
                "deleting": {
                    "description": "True if this RBD is being deleted",
                    "type": "boolean"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "iscsi_exportable": {
                    "type": "string",
                    "enum": [
                        "AVAILABLE",
                        "EXPORTED",
                        "INVALID_OPTIONS"
                    ]
                },
                "iscsi_share_id": {
                    "type": "string"
                },
                "iscsi_share_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "object_count": {
                    "type": "integer"
                },
                "object_size_B": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "pool_capacity_MB": {
                    "type": "integer"
                },
                "pool_erasure_code_profile": {
                    "type": "string"
                },
                "pool_id": {
                    "type": "integer"
                },
                "pool_name": {
                    "type": "string"
                },
                "pool_replication_count": {
                    "type": "integer"
                },
                "pool_share_count": {
                    "type": "integer"
                },
                "pool_type": {
                    "type": "string"
                },
                "pool_used_MB": {
                    "type": "integer"
                }
            }
        },
        "storage.RestServiceInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "A unique ID for the service",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "shares": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.RestShareRef"
                    }
                },
                "type": {
                    "description": "The service's share type",
                    "allOf": [
                        {
                            "$ref": "#/definitions/storage.ShareTypeEnum"
                        }
                    ]
                }
            }
        },
        "storage.RestShareInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "A unique ID for the share",
                    "type": "string"
                },
                "name": {
                    "description": "The share's name",
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                },
                "size_MB": {
                    "type": "integer"
                },
                "type": {
                    "description": "The share's type",
                    "allOf": [
                        {
                            "$ref": "#/definitions/storage.ShareTypeEnum"
                        }
                    ]
                }
            }
        },
        "storage.RestShareRef": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "storage.ShareTypeEnum": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-comments": {
                "ShareTypeCephFs": "CephFS",
                "ShareTypeIscsi": "iSCSI",
                "ShareTypeRbd": "RBD",
                "ShareTypeSmb": "SMB"
            },
            "x-enum-varnames": [
                "ShareTypeSmb",
                "ShareTypeCephFs",
                "ShareTypeIscsi",
                "ShareTypeRbd"
            ]
        },
        "template.Values": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "vdc.VNet": {
            "type": "object",
            "properties": {
                "vnet": {
                    "type": "integer"
                },
                "zone": {
                    "type": "integer"
                }
            }
        },
        "vnet.AddressRange": {
            "type": "object",
            "properties": {
                "arid": {
                    "type": "string"
                },
                "global_prefix": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "ip6": {
                    "type": "string"
                },
                "ip6_end": {
                    "type": "string"
                },
                "ip6_global": {
                    "type": "string"
                },
                "ip6_global_end": {
                    "type": "string"
                },
                "ip6_ula": {
                    "type": "string"
                },
                "ip6_ula_end": {
                    "type": "string"
                },
                "ipend": {
                    "type": "string"
                },
                "leases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_softiron_hypercloud-api_cloud_vnet.Lease"
                    }
                },
                "mac": {
                    "type": "string"
                },
                "macend": {
                    "type": "string"
                },
                "parent_network_arid": {
                    "type": "string"
                },
                "port_size": {
                    "type": "string"
                },
                "port_start": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "ula_prefix": {
                    "type": "string"
                },
                "used_leases": {
                    "type": "string"
                },
                "vnmad": {
                    "type": "string"
                }
            }
        },
        "vnettmpl.Template": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vnmad": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        },
        "Token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}